{
    "article_id": "727012",
    "article_name": "Подключение жидкокристаллического дисплея LCD1602 (HD44780) к микроконтроллеру ATmega8 в 8-битном режиме",
    "content": "примечание статья являться оригинальный перевод статья создавать база статья см источник информация указывать низко путем перевод использование основной текст оригинал дополнять автор данный код протестировать реальный устройство ф winstar lcdдисплеи liquid crystal displays использовать отображение состояние параметр различный прибор жидкокристаллический дисплей lcd1602 представлять себя 16выводное устройство иметь 8 вывод передача данные d0d7 3 вывод управление rs rw en остальной 5 вывод предназначать питание подсветка жкдисплей цифра 1602 указывать формат выводить отображать информация 16x02 символ рисунок 1 вывод управление помогать мы настраивать lcdдисплей командный режим режим передача данные также помогать настраивать режим чтение запись также время чтение запись lcdдисплей 16x2 использовать 4битном 8битном режим зависимость технический требование использовать мы необходимо отправлять определенный команда lcdдисплей командный режим жкдисплей настраивать соответствие наш требование смочь отправлять необходимый данные режим передача данные получение дополнительный информация lcdдисплее 16x02 использовать необходимо обращаться datasheet рисунок 1  распиновка жидкокристаллический дисплей lcd1602 hd44780    схема подключение жидкокристаллический дисплей lcd1602 hd44780 микроконтроллер atmega8 8битном режим показывать рисунок 2 рисунок 2  подключение жидкокристаллический дисплей lcd1602 микроконтроллер atmega8 8битном режим подстрочный резистор r1 предназначать точный подстройка контрастность дисплей резистор r2 предназначать ограничение ток анод подсветка дисплей таблица 1  аппаратный соединение функция инициализация дисплей 1 включать питание lcdдисплее 2 необходимо подождать мало 15 мс время инициализация включение питание lcd1602 3 отправлять команда 0x38 который переводить lcdдисплей 2строчный 8битный режим 5x8 точка 4 отправлять один команда включение курсор дисплей 0x0e 0x0c 5 отправлять команда 0x06 сдвиг курсор вправо листинг код void lcd_init void lcd initialize function   lcd_command_dir  0xff make lcd command port direction as op  lcd_data_dir  0xff make lcd data port direction as op   _delay_ms20 lcd power on delay always 15ms  lcd_command 0x38 initialization of 16x2 lcd in 8bit mode  lcd_command 0x0c display on cursor off  lcd_command 0x06 auto increment cursor  lcd_command 0x01 clear display  lcd_command 0x80 cursor at home position   lcdдисплей инициализировать готовый принимать данные отображение функция запись команда инструкция 1 отправлять значение команда порт передача данные lcd1602 2 устанавливать вывод rs низкий уровень rs  0 регистр команда 3 устанавливать вывод rw низкий уровень rw  0 операция запись 4 подавать импульс высокий низкий вывод enable e минимальный задержка 450 нс подавать разрешать импульс lcdдисплей фиксировать данные иметься вывод d0  d7 выполнять команда поскольку rs  это регистр команда листинг код void lcd_commandunsigned char cmnd  lcd_data_port cmnd lcd_command_port  1rs rs0 command reg  lcd_command_port  1rw rw0 write operation  lcd_command_port  1en enable pulse  _delay_us1 lcd_command_port  1en _delay_ms3   функция запись данные 1 отправлять команда порт передача данные 2 устанавливать вывод rs высокий уровень rs  1 регистр данные 3 устанавливать вывод rw низкий уровень rw  0 операция запись 4 подавать импульс высокий низкий вывод enable e подавать разрешать импульс lcdдисплей фиксировать иметься данные вывод d0d7 отображать матрица 5x8 поскольку rs  это регистр данные листинг код void lcd_char unsigned char char_data lcd data write function   lcd_data_port  char_data lcd_command_port  1rs rs1 data reg  lcd_command_port  1rw rw0 write operation  lcd_command_port  1en enable pulse  _delay_us1 lcd_command_port  1en _delay_ms1  функция отображение строка этот функция принимать строка массив символ отправлять один символ функция данные lcdдисплея конец строка цикл for использоваться отправка символ каждый итерация символ null указывать конец строка листинг код void lcd_string char str  int i fori0stri0i   send each char of string till the null   lcd_char stri   call lcd data write    примечание 1 задержка включение lcdдисплея включение lcd1602 мочь немедленно отправлять команда поскольку требоваться время инициализация 15 мс поэтому программирование мы нужно позаботиться обеспечивать достаточный задержка включение питание  15 мс затем отправлять команда lcdдисплей 2 проверка команда lcd1602 требоваться время микросекунда выполнение команда 0x01 тот очищать отображение выполнение занимать 164 мс следовательно отправка команда 0x01 необходимо обеспечивать достаточный задержка  163 миллисекунда листинг программа define f_cpu 8000000ul define cpu frequency eg here 8mhz  include avrioh include avr std library file  include utildelayh include inbuilt defined delay header file   define lcd_data_dir ddrb define lcd data port direction  define lcd_command_dir ddrc define lcd command port direction register  define lcd_data_port portb define lcd data port  define lcd_command_port portc define lcd data port  define rs pc0 define register select datacommand regpin  define rw pc1 define readwrite signal pin  define en pc2 define enable signal pin     void lcd_commandunsigned char cmnd  lcd_data_port cmnd lcd_command_port  1rs rs0 command reg  lcd_command_port  1rw rw0 write operation  lcd_command_port  1en enable pulse  _delay_us1 lcd_command_port  1en _delay_ms3   void lcd_char unsigned char char_data lcd data write function   lcd_data_port char_data lcd_command_port  1rs rs1 data reg  lcd_command_port  1rw rw0 write operation  lcd_command_port  1en enable pulse  _delay_us1 lcd_command_port  1en _delay_ms1   void lcd_init void lcd initialize function   lcd_command_dir  0xff make lcd command port direction as op  lcd_data_dir  0xff make lcd data port direction as op  _delay_ms20 lcd power on delay always 15ms   lcd_command 0x38 initialization of 16x2 lcd in 8bit mode  lcd_command 0x0c display on cursor off  lcd_command 0x06 auto increment cursor  lcd_command 0x01 clear display  lcd_command 0x80 cursor at home position    void lcd_string char str send string to lcd function   int i fori0stri0i send each char of string till the null   lcd_char stri    void lcd_string_xy char row char pos char str send string to lcd with xy position   if row  0  pos16 lcd_commandpos  0x0f0x80 command of first row and required position16  else if row  1  pos16 lcd_commandpos  0x0f0xc0 command of first row and required position16  lcd_stringstr call lcd string function    void lcd_clear  lcd_command 0x01 clear display  lcd_command 0x80 cursor at home position     int main   lcd_init initialize lcd   lcd_stringhello world write string on 1st line of lcd lcd_command0xc0 go to 2nd line lcd_string8 bit write string on 2nd line  return 0  загрузка прошивка дисплей lcd1602 увидеть следующий результат показывать рисунок 3 хороший тон программирование являться создание отдельный библиотека наш жкдисплей рисунок 3  результат работа прошивка    расшифровка наиболее употреблять команда посылать микроконтроллер дисплей lcd1602 hd44780 приводить таблица 23 таблица 2   расшифровка наиболее употреблять команда посылать микроконтроллер дисплей lcd1602 hd44780 время выполнение команда указывать приблизительно оно определяться частота внутренний rcгенератора lcdдисплея который очередь зависеть технологический разброс температура нагрев корпус таблица 3   команда переход определенный знакоместо верхний нижний строка экран дисплей lcd1602 hd44780 источник информация httpswwwelectronicwingscomavratmegalcd16x2interfacingwithatmega1632",
    "tags": [
        "avr",
        "atmega",
        "lcd1602"
    ]
}
{
    "article_id": "723668",
    "article_name": "PostgreSQL под капотом. Часть 5. Простой SELECT запрос",
    "content": "приветствовать прошлый шаг изучать цикл бэкэнд общий черт часть рассматривать путь проход простой  select  запрос представлять таблица  users create table users   id integer generated always as identity   email varchar not null   name varchar  мы нужно получать запись select  from users подготовка выполнение запрос путь запрос начинаться функция  exec_simple_query   srcbackendtcoppostgresc  запрос передаваться протокол  простой передача  статистика  самый начало находиться блок обновление статистика статус текущий бэкэнд обновляться соответствие запрос использоваться функция  pgstat_report_activity   srcbackendutilsactivitybackend_statusc  который передаваться текущий статус  state_running  сырой строка запрос сам обновление статистика заключаться обновление статус время вхождение статус время нахождение предыдущий статус выполнять строка запрос дополнительно вызываться функция  resetusage  сбрасывание накоплять статистика использование ресурс правильный учет дальнейший статистика статистика использование ресурс процесс работа система периодически требоваться отображать потребление ресурс отработанный время использование память сигнал работа информация существовать отдельный заголовочный файл sysresourceh немой определяться структура функция макрос работа статистика программа статистика представляться структура rusage struct rusage       total amount of user time used       struct timeval ru_utime      total amount of system time used       struct timeval ru_stime      maximum resident set size in kilobytes       union              long int ru_maxrss         __syscall_slong_t __ru_maxrss_word           amount of sharing of text segment memory        with other processes kilobyteseconds       union              long int ru_ixrss         __syscall_slong_t __ru_ixrss_word           amount of data segment memory used kilobyteseconds       union              long int ru_idrss         __syscall_slong_t __ru_idrss_word           amount of stack memory used kilobyteseconds            union              long int ru_isrss         __syscall_slong_t __ru_isrss_word           number of soft page faults ie those serviced by reclaiming        a page from the list of pages awaiting reallocation       union              long int ru_minflt         __syscall_slong_t __ru_minflt_word           number of hard page faults ie those that required io       union              long int ru_majflt         __syscall_slong_t __ru_majflt_word           number of times a process was swapped out of physical memory       union              long int ru_nswap         __syscall_slong_t __ru_nswap_word           number of input operations via the file system  note this        and ru_oublock do not include operations with the cache       union              long int ru_inblock         __syscall_slong_t __ru_inblock_word           number of output operations via the file system       union              long int ru_oublock         __syscall_slong_t __ru_oublock_word           number of ipc messages sent       union              long int ru_msgsnd         __syscall_slong_t __ru_msgsnd_word           number of ipc messages received       union              long int ru_msgrcv         __syscall_slong_t __ru_msgrcv_word           number of signals delivered       union              long int ru_nsignals         __syscall_slong_t __ru_nsignals_word           number of voluntary context switches ie because the process        gave up the process before it had to usually to wait for some        resource to be available       union              long int ru_nvcsw         __syscall_slong_t __ru_nvcsw_word           number of involuntary context switches ie a higher priority process        became runnable or the current process used up its time slice      union              long int ru_nivcsw         __syscall_slong_t __ru_nivcsw_word       работа иметься несколько функция например  getrusage   получение статистика  httpsman7orglinuxmanpagesman2getrusage2html  postgres иметься семейство guc настройка  log__stats  выставлять достижение определенный этап логироваться потреблять ресурс например выставлять  log_statement_stats  выполнение отправлять выражение несколько один запрос этот статистика выводиться лог логирование использование ресурс отвечать функция  showusage void showusageconst char title вход передаваться название область который подсчитывать потребление ресурс например выражение передаваться query statistics showusagequery statistics внутри вычислять разница последний сохранять статистика текущий выводить отформатировать значение лог сохранять статистика вход какуюто область использоваться  resetusage  сохранять текущий значение потребление ресурс точка отсчет следующий использование showusage использоваться сохранять значение  exec_simple_query  использование следующий if save_log_statement_stats     resetusage   выполнение запрос  if save_log_statement_stats showusagequery statistics начинать транзакция этап инициироваться транзакция  управление транзакция отдельный модуль  xact   srcbackendaccesstransamxactc  внутри файл точка вход postgres определять свой функция  start_xact_command   finish_xact_command  первый отвечать заначало транзакция последний заокончание дополнительно вние присутствовать логика проверка действовать транзакция какпобочный эффект управлять начинаютсбрасывать таймаут подключение клиент время выполнение выражение вданный момент инициироваться транзакция навешивать блок запрос независимо оттого сколько выражение  запрос несколько каждый впроцесс выполнение оборачиваться внеявный транзакция подготовка выражение парсинг план запрос мочь сохраняться запрос сервер сохранять запрос представляться структура  cachedplansource  сам структура храниться глобальный бэкэнд ассоциативный массив typedef struct cachedplansource  intmagic should equal cachedplansource_magic  struct rawstmt raw_parse_tree  output of raw_parser or null  const char query_string source text of query  commandtagcommandtag nuff said  oid   param_types array of parameter type oids or null  intnum_params length of param_types array  parsersetuphook parsersetup alternative parameter spec method  void   parsersetuparg intcursor_options  cursor options used for planning  boolfixed_result disallow change in result tupdesc  tupledescresultdesc result type null  doesnt return tuples  memorycontext context memory context holding all above   these fields describe the current analyzedandrewritten query tree  list   query_list list of query nodes or nil if not valid  list   relationoids oids of relations the queries depend on  list   invalitems other dependencies as planinvalitems  struct overridesearchpath search_path  search_path used for parsing   and planning  memorycontext query_context context holding the above or null  oidrewriteroleid role id we did rewriting for  boolrewriterowsecurity  row_security used during rewrite  booldependsonrls is rewritten query specific to the above   if we have a generic plan this is a referencecounted link to it  struct cachedplan gplan generic plan or null if not valid   some state flags  boolis_oneshot is it a oneshot plan  boolis_complete has completecachedplan been done  boolis_saved has cachedplansource been saved  boolis_valid is the query_list currently valid  intgeneration increments each time we create a plan   if cachedplansource has been saved it is a member of a global list  dlist_nodenode list link if is_saved   state kept to help decide whether to use custom or generic plans  doublegeneric_cost cost of generic plan or 1 if not known  doubletotal_custom_cost total cost of custom plans so far  int64num_custom_plans  of custom plans included in total  int64num_generic_plans  of generic plans   cachedplansource 1 выражение рамка простой запрос иметь время жизнь рамка 1 итерация поэтому необходимость тратить ресурс поиск словарь поэтому безымянный запрос существовать отдельный переменный unnnamed_stmt_psrc    if an unnamed prepared statement exists its stored here   we kee",
    "tags": [
        "postgresql",
        "postgres",
        "архитектура приложений",
        "база данных",
        "анализ программ",
        "c",
        "c++",
        "программирование",
        "субд",
        "архитектура по"
    ]
}
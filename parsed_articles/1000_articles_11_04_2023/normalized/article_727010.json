{
    "article_id": "727010",
    "article_name": "Подключение жидкокристаллического дисплея LCD1602 (HD44780) к микроконтроллеру ATmega8 в 4-битном режиме",
    "content": "примечание статья являться оригинальный перевод статья создавать база статья см источник информация указывать низко путем перевод использование основной текст оригинал дополнять автор данный код протестировать реальный устройство ф winstar lcdдисплеи liquid crystal displays использовать отображение состояние параметр различный прибор lcd1602  этот 16выводное устройство иметь 8 вывод передача данные d0d7 3 вывод управление rs rw en остальной 5 вывод предназначать питание подсветка жкдисплей цифра 1602 указывать формат выводить отображать информация 16x02 символ рисунок 1 вывод управление помогать мы настраивать lcdдисплей командный режим режим передача данные также помогать настраивать режим чтение запись также время чтение запись lcdдисплей 16x2 использовать 4битном 8битном режим зависимость технический требование использовать мы необходимо отправлять определенный команда lcdдисплей командный режим жкдисплей настраивать соответствие наш требование смочь отправлять необходимый данные режим передача данные рисунок 1  распиновка жидкокристаллический дисплей lcd1602 hd44780 4битном режим данныекоманда отправляться 4битном полубайтный формат сначала необходимо отправлять старший верхний 4 бит затем отправлять младший нижний 4 бит данныхкоманда 4 вывод данные d4  d7 lcdдисплея 16x02 подключать микроконтроллер другой управлять вывод rs выбор регистр rw чтениезапись e сигнал разрешение подключать другой gpio вывод микроконтроллер рисунок 2 такой образ благодаря такой подключение мочь сэкономить четыре gpio вывод микроконтроллер который использовать другой цель рисунок 2  подключение жидкокристаллический дисплей lcd1602 микроконтроллер atmega8 4битном режим подстрочный резистор r1 предназначать точный подстройка контрастность дисплей резистор r2 предназначать ограничение ток анод подсветка дисплей функция инициализация дисплей 1 необходимо подождать мало 15 мс время инициализация включение питание lcd1602 2 отправлять команда 0x02 который инициализировать lcdдисплей 16x2 4битном режим 3 отправлять команда 0x28 который переводить lcdдисплей 2строчный 4битный режим 5x8 точка 4 отправлять один команда включение курсор дисплей 0x0e 0x0c 5 отправлять команда 0x06 сдвиг курсор вправо листинг код void lcd_init void   lcd initialize function   lcd_dir  0xff make lcd port direction as op  _delay_ms20 lcd power on delay always 15ms   lcd_command0x02 send for 4 bit initialization of lcd   lcd_command0x28 2 line 57 matrix in 4bit mode  lcd_command0x0c display on cursor off  lcd_command0x06 increment cursor shift cursor to right  lcd_command0x01 clear display screen  _delay_ms2  успешно инициализировать lcdдисплей готовый принимать данные 4битном полубайтный режим отображение отправлять командудать lcd дисплей 16x02 должный отправлять старший верхний полубайт затем младший нижний полубайт поскольку вывод d4d7 lcdдисплея 16x02 подключать вывод данный должный сдвигать младший полубайт вправо 4 передача  функция запись команда инструкция 1 сначала отправлять высокий полубайт команда 2 устанавливать низкий уровень вывод rs rs0 регистр команда 3 устанавливать вывод rw низкий уровень rw0 операция запись подключать земля 4 подавать импульс высокий низкий включение e 5 отправлять младший полубайт команда 6 подавать импульс высокий низкий включение e листинг код void lcd_command unsigned char cmnd   lcd_port  lcd_port  0x0f  cmnd  0xf0 sending upper nibble  lcd_port   1rs rs0 command reg  lcd_port  1en enable pulse  _delay_us1 lcd_port   1en _delay_us200 lcd_port  lcd_port  0x0f  cmnd  4 sending lower nibble  lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2  функция запись данные 1 сначала отправлять высокий полубайт данные 2 устанавливать вывод rs высокий уровень rs1 регистр данные 3 устанавливать вывод rw низкий уровень rw0 операция запись подключать земля 4 подавать импульс высокий низкий включение e 5 отправлять младший полубайт данные 6 подавать импульс высокий низкий включение e листинг код void lcd_char unsigned char data   lcd_port  lcd_port  0x0f  data  0xf0 sending upper nibble  lcd_port  1rs   rs1 data reg  lcd_port 1en _delay_us1 lcd_port   1en _delay_us200 lcd_port  lcd_port  0x0f  data  4   sending lower nibble  lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2  листинг программа define f_cpu 8000000ul define cpu frequency eg here 8mhz  include avrioh include avr std library file  include utildelayh include delay header file   define lcd_dir  ddrb define lcd data port direction  define lcd_port portb define lcd data port  define rs pb0 define register select pin  define en pb1  define enable signal pin     void lcd_command unsigned char cmnd   lcd_port  lcd_port  0x0f  cmnd  0xf0  sending upper nibble  lcd_port   1rs rs0 command reg  lcd_port  1en enable pulse  _delay_us1 lcd_port   1en  _delay_us200  lcd_port  lcd_port  0x0f  cmnd  4   sending lower nibble  lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2    void lcd_char unsigned char data   lcd_port  lcd_port  0x0f  data  0xf0  sending upper nibble  lcd_port  1rs rs1 data reg  lcd_port 1en _delay_us1 lcd_port   1en  _delay_us200  lcd_port  lcd_port  0x0f  data  4  sending lower nibble  lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2   void lcd_init void lcd initialize function   lcd_dir  0xff make lcd port direction as op  _delay_ms20 lcd power on delay always 15ms   lcd_command0x02 send for 4 bit initialization of lcd   lcd_command0x28               2 line 57 matrix in 4bit mode  lcd_command0x0c               display on cursor off lcd_command0x06               increment cursor shift cursor to right lcd_command0x01               clear display screen _delay_ms2    void lcd_string char str send string to lcd function   int i fori0stri0i send each char of string till the null   lcd_char stri    void lcd_string_xy char row char pos char str send string to lcd with xy position   if row  0  pos16 lcd_commandpos  0x0f0x80 command of first row and required position16  else if row  1  pos16 lcd_commandpos  0x0f0xc0 command of first row and required position16  lcd_stringstr call lcd string function    void lcd_clear  lcd_command 0x01 clear display  _delay_ms2 lcd_command 0x80 cursor at home position     int main   lcd_init initialization of lcd  lcd_stringhello world write string on 1st line of lcd lcd_command0xc0 go to 2nd line lcd_string4 bit write string on 2nd line while1  удобство использование оформлять описывать выше код вид библиотека создавать файл lcd1602h lcd1602c листинг файл lcd1602h ifndef lcd1602_h_ define lcd1602_h_  define lcd_dir  ddrb define lcd_port portb define rs pb0 define en pb1  include avrioh include utildelayh  void lcd_command unsigned char cmnd  void lcd_char unsigned char data  void lcd_init void void lcd_string char str void lcd_string_xy char row char pos char str void lcd_clear  endif  lcd1602_h_  листинг файл lcd1602c include lcd1602h  void lcd_command unsigned char cmnd   lcd_port  lcd_port  0x0f  cmnd  0xf0 lcd_port   1rs lcd_port  1en _delay_us1 lcd_port   1en  _delay_us200  lcd_port  lcd_port  0x0f  cmnd  4 lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2    void lcd_char unsigned char data   lcd_port  lcd_port  0x0f  data  0xf0 lcd_port  1rs lcd_port 1en _delay_us1 lcd_port   1en  _delay_us200  lcd_port  lcd_port  0x0f  data  4 lcd_port  1en _delay_us1 lcd_port   1en _delay_ms2   void lcd_init void  lcd_dir  0xff _delay_ms20  lcd_command0x02 lcd_command0x28 lcd_command0x0c lcd_command0x06 lcd_command0x01 _delay_ms2    void lcd_string char str  int i fori0stri0i  lcd_char stri    void lcd_string_xy char row char pos char str  if row  0  pos16 lcd_commandpos  0x0f0x80 else if row  1  pos16 lcd_commandpos  0x0f0xc0 lcd_stringstr   void lcd_clear  lcd_command 0x01 _delay_ms2 lcd_command 0x80  подключение библиотека необходимо файл lcd1602h lcd1602c помещать папка проект программа atmel studio правый клавиша мышь кликнуть имя проект выбирать add  existing item находить выбирать файл нажимать ok  далее писать код include avrioh include lcd1602h  int main  lcd_init lcd_stringhell",
    "tags": [
        "avr",
        "atmega",
        "lcd1602"
    ]
}
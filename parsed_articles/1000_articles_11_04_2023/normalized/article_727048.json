{
    "article_id": "727048",
    "article_name": "Хотите проектировать устройство, которое использует миллиард человек — решайте микроархитектурные задачки",
    "content": "длинный извилистый путь  школа синтез цифровой схема  приближаться кгодовой кульминация 2123пройдет  хакатон попроцессор  взеленоградский миэта 150слушателей издюжина российский город оправляться готовиться кмайский праздник приближаться сессия лет нодль тот воспринимать школа непросто какнаучпоп ареально собираться становиться проектировщик микросхема приготавливать экзамен сзадачка вдух задачка насобеседование вsilicon valley внекоторых крупный электронный компания длярешение такой задачка соискатель заводить вкомната безинтернет делать это подглаз экзаменатор накомпанейский компьютер нотака ученик школа неволшебник атолько учиться экзамен выкладываться открытый нопоего результат школа давать рекомендация вэлектронный компания упражнение выполняться наязык описание аппаратура system verilog дляпроверка использоваться opensource симулятор icarus verilog неopensource questa отsiemens eda атакже бесплатный среда синтез дляплис intel fpga quartus prime lite дляэкзамен выбирать тема вчетырех упражнение конечный автомат контроль поток данные верификация неставать вводить вэкзамен пропроцессор какпосле школа быть проводить хакатон попроектирование процессор вмиэта упражнениязадача экзамен находиться врепозиторий  validreadyetc  поддиректория boardsomdazz09_exam упражнение 1 exam_1_pow_5_multi_cycle_fsm вэт упражнение нужно спроектировать блок длявычисление пятый степень аргумент блок иметь тотже интерфейс чтоя  конвейерный блок который разбирать назанятие  ном хотеть спроектировать новый блок неспомощь конвейер изчетырех умножитель аспомощь конечный автомат который итеративно повторять умножение четыре раз использовать умножитель ублок низкий пропускной способность уконвейерный блок нозатый гораздо мало какумножитель dтриггеры дляорганизация конвейер занимать место потреблять электроэнергия подробный список требование мочь прочитывать вфайл pow_5_multi_cycle_fsmsv также мочь ориентироваться налог golden_logtxt скриншот временный диаграмма golden_wavepng создавать присимуляция наш решение длясимуляция задание использоваться icarus verilog вместе спрограмма дляпросмотр временный диаграмма gtkwave дляподдержка симуляция вдиректория упражнение следующий файл 02_simulate_rtlbash скрипт наbash длязапуск симулятор gtkwavetcl скрипт наязык tcl длядобавление сигнал дляотладка навременный диаграмма tbsv тестовый окружение увас плата omdazzrzrd сплис intel fpga cyclone iv мочь проверять работа ваш блок наэта плата вдиректория упражнение следующий файл который поддерживать синтез 03_synthesize_for_fpgabash скрипт длязапуск синтез конфигурация плис наплата программатор usb blaster 04_configure_fpgabash скрипт дляконфигурация плис беззапуск синтез fpga_top_extraqsf скрипт наязык tcl длясинтез вintel fpga quartus prime lite fpga_topsv верхний модуль длясинтез устанавливать блок содержать соединение порт модуль скнопка светодиод длядополнительный информация мочь прочитывать заметка нахабер  третий вопрос наинтервью вэлектронный компания  вней описываться таж организация симуляция синтез который использоваться вэт упражнение нонедляблоко возведение встепень адляочереди fifo работа схема наплата сискуственно медленный тактовый сигнал счастота 1герц 1такт всекунда упражнение 2 exam_2_gearbox_1_to_2 упражнение 3 exam_2_gearbox_2_to_1 упражнение 2 3 связанный упражнение 2 описывать пост хабер подготавливаться собеседование samsung advanced computing lab  блок вэт упражнениии превращать поток данные c протокол validready вдругой поток данные спротокол validready нотрансфер двойной ширина упражнение 3выполняет противоположный операция превращать поток данные впоток половинный ширина дляупражнение 2код дляrtl написать нов нужно дописывать код дляверификация см todo вtbsv дляупражнение 3тестовое окружение полностью написать нов нужно написать rtl см todo вgearbox_2_to_1sv симуляция синтез дляупражнение 2и 3выполняется аналогично упражнение 1 временной диаграмма упражнение 2 временной диаграмма упражнение 3 видео работать схема упражнение 2 видео работать схема упражнение 3 упражнение 4 exam_4_axi_pipelined_wr_out_of_order_rd вэт упражнение реализовывать пассивный монитор важный часть verification ip vip дляупрощать протокол axi который разбирать назанятие ip вданный контекст означать intellectual property интеллектуальный собственность анеinternet protocol термин verification ip называть пакет который включать всебать функциональный модель шина bus functional model bfm модель слейв reference slaves монитор шина passive monitors монитор axi использоваться длякакдляверификация устройство вводавывод подключать кпроцессор дляверификация процессорный ядро соединять сблок кеш второй уровень илисконтроллер память мочь прочитывать проverification ip взаметка нахабер  причина агония студент вовремя интервью илипопулярно омодель интерфейс шина  вотличие отмодель мастер слейв монитор неформировать никакой сигнал следить зашина печатать лог проходить транзакция выполнять проверка данные который приходить слейв вовремя операция чтение дляпроверка монитор использовать называть теневой память структура данные который моделировать работа настоящий память внутри слейв длякотора монитор повторять транзакция который видеть нашин слейв вернуть нет данный который находиться втеневой память это повод дляинженераверификатор вместе спроектировщик rtl код слейв разбираться почему это происходить синтез дляпроверка упражнение 4неиспользуется каквсе компонент вэт упражнение поведенческий модель прииспользование verification ip вреальный практика верификация один илинесколько измодель заменяться верифицировать блок rtl последний часто называть design under test device under test dut симуляция упражнение 4выполняется стемжа скрипт 02_simulate_rtlbash чтоя длядругой упражнение ноприэт использоваться симулятор questa advanced simulator отsiemens eda дляработа сним вдиректория упражнение скрипт наязык tcl questatcl который запускать компиляция симуляция проект атакже добавлять квременный диаграмма нужный дляотладка сигнал код монитор содержать кусок код измодель мастер слейв быть смотреть намастер слейв текст ожидать лог вфайл golden_log_monitor_onlytxt реализация код длямонитор недолжный вызывать увас трудность успех впроект приложение todo упражнение 1 2 русский язык код английский упражнение 1 exam_1_pow_5_multi_cycle_fsm разрабатывать параметризовать модуль который вычислять пятый степень число итеративно занесколько такт требование мочь использовать один операция умножение вваш код программа синтез должный поставлять экземпляр блок умножение всинтезировать схема входной данные идти задругой backtoback up_vld1 задержка навыход backpressure отсутствовать down_rdy1 блок должный выдавать результат каждый 5тактов вычисление недолжно ломаться припоявление задержка навыход backpressure сигнал down_rdy можетбывать выставлять 0влюбой момент беспотеря результат текущий операция синтезировать схема должный работать наплата плис модуль долженбыть полностью совместимый стемжа тестовый окружение который использоваться дляверификация модуль pow_5_single_cycle pow_5_pipelined дополнительный задание 1 сравнивать тактовый частота утилизация ресурс плис спроектировать схема сpow_5_single_cycle pow_5_pipelined длякорректный синтез убеждаться чтопуть умножитель начинаться сdтриггера заканчиваться dтриггером дополнительный задание 1 написать утверждение темпоральный логика continuous assertion илиsystem verilog assertion sva который проверять down_rdy1напротяжении вычисление устанавливать up_vld1 получать down_vld1и правильный значение down_dataup_data встепень 5втечение 57тактов какир_vld1будет подтверждать какпринимать сигнал up_rdy1 происпользование утверждение темпоральный логика дляверификация мочь прочитывать взаметка нахабер  слышалить проязык e аведь онбыл продавать 315миллионов доллар  внейже упоминаться связаный тема функциональный покрытие последовательность cover properties длясправка припроектирование блок мочь использовать лог golden_logtxt атакже скриншот временный диаграмма golden_wavepng результат симуляция н",
    "tags": [
        "systemverilog",
        "собеседования",
        "школа синтеза",
        "миэт",
        "verilog",
        "vhdl",
        "микроархитектура",
        "верификация микросхем",
        "плис",
        "fpga"
    ]
}
{
    "article_id": "726022",
    "article_name": "Причина агонии студентов во время интервью, или популярно о моделях интерфейсов шины",
    "content": "интервьировать кандидат который приходить позиция rtl design  проектировщик микросхема уровень регистровый передача 5 год назад интервьировать студент другой инженер позиция dv  design verification  верификатор блок микросхема мой стандартный вопрос написать маркер доска псевдокод упрощенный драйвер модель шина bus functional model  bfm протокол axi вопрос 80 кандидат наступать агония  уж сковородка пытаться натягивать сова глобус  приспособлять решение последовательный шина аля apb который прочитывать какомнибудь туториал  шина axi который вопервых конвейерный вовторых допускать внеочередной ответ запрос чтение разный идентификатор аналогия область представлять ктото пытаться обходить дерево решать ханойский башня  знать концепция рекурсия стек написать gui  оконный интерфейс знать концепция событийноориентированный программирование причина студент глупый 1 вуз верификация учить беркли стенфорд 2 цель автор туториал  научать метод верификация научать синтаксис язык systemverilog возможность библиотека uvm поэтому попытка решать проблема студент начинать танцевать круг заводить forkи поток семафор получать частный случай который глючать начинать накручивать объектноориентированный программирование код внутри интерфейс ожидать время интервью пройти хотя проблема сердце кодовый гарнир оставаться задача существовать простой надежный несколько контритуитивный решение базовый идея впервые увидеть 1990е год работать mentor graphics siemens eda проект nokia ericsson который проектировать ранний массовый сотовый телефон эксплуатировать подход работа denali cadence причем клиент мой bfmов apple broadcom xilinx затем делать самый клиент mips pmc sierra некий японский инженер камакура который использовать мой bfm проект зеленый суперкомпьютер след решение просачиваться bfm opensource riscv проект начинать начало модель интерфейс шина bus functional model bfm  это программа который переводить транзакция последовательность изменение сигнал также последовательность изменение сигнал  транзакция  транзакция  это высокоуровневый объект который передаваться интерфейс несколько такт возможно пересекаться время другой транзакция pipelining interleave транзакция структура объект класс systemverilog например  простой транзакция минимальный подмножество axi  burst mask locked итд выглядеть class axi_transaction      rand op_t    op      чтение запись     rand addr_t  addr    адрес     rand data_t  data    данные      rand id_t    id             идентификатор понимать какой                                  адрес шина относиться данные      rand delay_t addr_delay     задержка такт адрес     rand delay_t data_delay     задержка такт давать      bit          data_is_set    флаг который устанавливаться     bit          addr_is_sent   обработка транзакция     bit          data_is_sent транзакция удобный такой моделирование поведение аппаратный объект который важный порядок событие конкретный такт который оно происходить bfm собственно привязывать транзакция такт далее быть ссылаться  пример упрощать verification ip  который написать образовательный семинар который частность использоваться занятие школа синтез цифровой схема суббота 1 апрель полдень московский время занятие проходить 12 площадка питер томск  сайт школа телеграмканал  год 20 писатель туториал systemverilog bfm переписывать друг друг код пример который условно говорить выглядеть task run      while конец    begin        получать следующий транзакция тесто         выставлять шина адрес        запись выставлять данные запись          posedge clock переходить следущий такт         while готовый             posedge clock переходить следущий такт         чтение получать данный чтение шина        заканчивать транзакция    end endtask  такой род код вполне адекватно описыватый поток последовательный транзакция следущий транзакция начинаться окончание предыдущий например  такт 1  адрес чтение 1 такт 2  данный 1 такт 3  адрес чтение 2 такт 4  данный 2 такт 5  адрес чтение 3 такт 6  данный 3 проблема axi axi ahb ocp другой конвейерный шина применять внутри система кристалл следущая транзакция начинаться прочитывать подтверждение предыдущий например такт 1  адрес данные запись 1 такт 2  адрес данные запись 2 начинаться считывание мастер подтверждение response valid запись 1 слейв такт 3  адрес данные запись 3 начинаться считывание мастер подтверждение response valid запись 2 слейв плохо мастер выдавать сначала такт такт адрес1адрес2адрес3 данные этот три адрес данные1данные2данные3 студент собеседование говорить проблема давать заводить тред писать чтонибудь тип    fork         поток 1        begin           получать следующий транзакцию1 тесто           выставлять шина адрес1           repeat n  posedge clock пропускать n такт           выставлять шина данные1        end          поток 2        begin           получать следующий транзакцию2 тесто           выставлять шина адрес2           repeat n  posedge clock пропускать n такт           выставлять шина данные2        end          сразу следовать вопрос гарантировать данный транзакция 1 оказываться шина такт данный транзакция 2 студент предлагать использовать семафор говорить курс данные axi мочь приходить адрес например такт такт данные1данные2данные3 адрес1адрес2адрес3 студент начинать усложнять говорить вообще шина одновременно 16 транзакция причем ответ запрос чтение мочь приходить порядок который посылаться запрос быть 16 треды писать семафор синхронизировать одновременно это накладываться проблема validready опускать пост писать  делать выпускник топ10 мировой вуз спроектировать блок сложение ab   подход выглядеть пытаться последовательно проходить один транзакция один тред который работать несколько такт вместо заводить куча очередь который перебрасывать транзакция работать этот очередь внутри один такт причем зад наперед сначала обрабатывать ответ слейв незавершенный передача мастер конец устанавливать шина адрес данные новый транзакция шина занятый никакой семафор треды треды использоваться интерфейс драйвер драйвер это rtos хардверный симулятор путать один компания работать юный инженер югозападный европа который долго сопротивляться верить работать пробивать ой итак заводить очередь транзакция    очередь транзакция получать пользователь   axi_transaction send_queue         очередь транзакция передаваемый пользователь   axi_transaction receive_queue      очередь транзакция ждать подтверждение ready    valid адрес чтение   axi_transaction rd_addr_queue      очередь транзакция ждать подтверждение ready    valid адрес запись   axi_transaction wr_addr_queue      очередь транзакция ждать подтверждение ready    valid данные запись   axi_transaction wr_data_queue      массив индексировать id очередь    ждать прибытие данные чтение слейв   axi_transaction rd_data_array n_ids     очередь транзакция ждать подтверждение запись слейв   axi_transaction wr_resp_queue  далее создавать обработчик ровно один такт always  posedge clock который делать  следущий  проверять принимать мастер ответ слейв повод чтение if rvalid  rready перебрасывать головной транзакция очередь  rd_data_array read id  хвост очередь ответ пользователь записыв транзакция получать данные проверять принимать мастер ответ слейв повод запись if bvalid  bready перебрасывать головной транзакция очередь  wr_resp_queue хвост очередь ответ пользователь проверять подтверждать слейв получение адрес чтение if arvalid  arready перебрасывать головной транзакция очередь адрес чтение rd_addr_queue хвост очередь rd_data_array read id проверять подтверждать слейв получение адрес запись if awvalid  awready помечать головной транзакция очередь адрес запись wr_addr_queue флаг address_is_sent выкидывать очередь помечать флаом data_is_sent помещать хвост очередь wr_resp_queue проверять подтверждать слейв получение данные запись if wvalid  wready помечать головной транзакция очередь данный запись wr_data_queue флаг data_is_sent выкидывать очередь помечать флаом address_is_sent помещать хвост очередь wr_resp_queue получать новы",
    "tags": [
        "bus functional model",
        "bfm",
        "design verification",
        "истовый инженер",
        "школа синтеза",
        "systemverilog",
        "vhdl",
        "verilog",
        "axi",
        "amba"
    ]
}
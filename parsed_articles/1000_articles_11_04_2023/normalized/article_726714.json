{
    "article_id": "726714",
    "article_name": "C++, ping и traceroute",
    "content": "первый пост просить относиться лояльно здравый критика приветствоваться предыстория изучать сетевой программирование иметь портфолио несколько проектик c связывать сетевой программирование решать написать чтонубывать иметь реальный практический применение первый приходить голова  утилита ping  ping  утилита проверка целостность качество соединение сеть основа tcpip также обиходный наименование сам запрос подумать почитать дока  httpswwwrfceditororgrfcrfc792  смочь написать собственный имплементация  ping принцип алгоритм простой понятный отправлять пакет засекать время ответ  спустя несколько день готовый приемлемый  вариант pingа который github  понимание работа traceroute необходимо иметь представление работа pingа разбор некоторый строка код повреждать pid_t ppid  getppid строчка получать идентификатор поток наш pinga который выделять поле протокол icmp далее создаваться структура icmp заголовок struct icmpheader      uint8_t type     uint8_t code     uint16_t checksum      union          struct              uint16_t identifier             uint16_t sequence             uint64_t payload          echo          struct icmp_packet_pointer_header              uint8_t pointer          pointer          struct icmp_packet_redirect_header              uint32_t gatewayaddress          redirect      meta  поле type code checksum  обязательный пинг использовать echo структура 7  11 строка другой структура  осколок имплементация icmp который принцип убирать дальнейший тот структура быть использоваться traceroute далее идти функция генерация интернетчексумма uint16_t checksumconst void data size_t len      auto p  reinterpret_castconst uint16_t data      uint32_t sum  0      if len  1          sum  reinterpret_castconst uint8_t plen  1           len  2      while len          sum  p         if sum  0xffff0000              sum  sum  16  sum  0xffff                    return static_castuint16_tsum  отправка пакет мы нужно засекать время который пакет идти цель обратно  long int send_flag  sendtosock icmppacket sizeoficmppacket 0                               struct sockaddr  in_addr                              socklen_tsizeofin_addr          sent          uint64_t ms_before  duration_castmillisecondssystem_clocknowtime_since_epochcount           if send_flag  0              perrorsend error             return                   char buf1024          auto icmpresponseheader  struct icmpheader  buf          struct timeval tv         tvtv_sec  response_timeout         tvtv_usec  0          setsockoptsock sol_socket so_sndtimeo tv sizeoftv         setsockoptsock sol_socket so_rcvtimeo tv sizeoftv           int data_length_byte  recvsock icmpresponseheader sizeofbuf 0          ifdata_length_byte  1              cout  033131m  host unreachable or response timeout  0330m                  cout  sequence   033135m  i  0330m                   cout  process id   033135m  ppid  0330m  endl             continue                   uint64_t ms_after  duration_castmillisecondssystem_clocknowtime_since_epochcount строка создание пакет присваивание поле значение опускать содержать критически важный информация стоять отмечать icmp выделять поле бинарный данные который код заполнять набор единица ноль traceroute википедия traceroute  это служебный компьютерный программа предназначенный определение маршрут следование данный сеть tcpip начало проанализировать пакет оригинальный линуксовый traceroute wiresharkом  поскольку отправка сырой пакет требовать рутпривилений traceroute использовать udp отправлять пакет увеличивающисить ttl рандомный порт цель ждать получение ответ закрытость порт  подумать писать icmp просто запуск нужный рута  traceroute отправлять эхопакет увеличиваться ttl ttl  time to live время жизнь пакет дефолт равный 30 время жизнь пакет уменьшаться прохождение каждый узел сеть допускать хотеть находить маршрут 1111 отправлять пакет ttl 1 упираться первый узел обычно ваш роутер 19216801 подсеть вернуть ответ ttl exceeded значит время жизнь истекать ответ вытаскивать ip_src такой образ узнавать ipадрес первый узел взять ttl 2 узнавать ipадрес второй узел тд наглядно это увидеть сайт  httpswwwiplookuporgvisualtraceroute traceroute также github меняться тип пакет 8 каждый итерация цикл увеличиваться ttl icmp_packettype  8 icmp_packetcode  0 icmp_packetchecksum  0 icmp_packetmetaechoidentifier  ppid icmp_packetmetaechosequence  i icmp_packetmetaechopayload  0b101101010110100101  random binary data icmp_packetchecksum  checksumicmp_packet sizeoficmp_packet int ttl  i  1  setsockoptsock ipproto_ip ip_ttl ttl sizeofttl следующий код проверять кто приходить ответ  цель цель прерывать цикл показывать результат  if strcmpinet_ntoasrc_addrsin_addr ip  0      cout  endl  033135m  ttl  0330m   hops between you and   ip  endl     break  считать traceroute ping  утилита который улучшать портфолио помогать глубоко разбираться сетевой программирование любой случай общий развитие рекомендовать прочитывать  httpswwwrfceditororgrfcrfc791  протокол ip",
    "tags": [
        "network",
        "linux development"
    ]
}
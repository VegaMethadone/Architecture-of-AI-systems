{
    "article_id": "725360",
    "article_name": "Меньше багов богу разработки: плюсы, минусы и нюансы имплементации подхода Secure by design",
    "content": "дефолт разработчик стремиться достигать безопасность приложение идти операционный путь писать тест делать ревивать устранять уязвимость факт выявление однако существовать подход рамка который классический комплекс мера становиться нужный  требование быть неявно выполнять счет использование правильный дизайн архитектура система         звать сергей талант  архитектор security champion  команда kasperskyos лаборатория касперский  заниматься разработка продукт который предъявляться самый жесткий требование план безопасность статья рассказывать подход secure by design теория это такой какой вид подход существовать также почему применять практика паттерный безопасный дизайн пример использование     операционный конструктивный безопасность  сперва немного теория унифицировать термин который быть использоваться статья     уязвимость vulnerability  недостаток система использовать который намеренно нарушать работоспособность вызывать неправильный работа    общий случай каждый баг  это уязвимость каждый уязвимость воспользоваться совершать какоелибо враждебный действие реализация такой действие нужный эксплойт     эксплойт exploit  вредоносный код приложение который использовать уязвимость    эксплуатация уязвимость происходить называть поверхность атака     поверхность атака attack surface  общий количество возможный уязвимый место    уязвимость принимать говорить поверхность атака большой такой ситуация наталкивать мысль кодовый база принцип большой ииль код дырявый    немного термин который обозначать безопасность справедливость ради английский язык  security использоваться необходимо показывать система ничто угрожать извне safety наш система никто угрожать случай взлом код часто смешивать термин хотя чемто противоположный сегодняшний контекст оба быть использоваться единый целое говорить безопасность быть подразумевать информационный функциональный     операционный безопасность  классический цикл работа релиз изображать следующий образ        разработка включать два стадия  проектирование непосредственно разработка хотя теория крутиться некоторый итерация выход получать продукт    далеко обязательно выполняться ибревивать обеспечение безопасность разработка безопасность продукт выход выявление уязвимость проверка явный нарушение целостность доступность конфиденциальность далее действие выполняться явно кодревивать тест выход получать некоторый количество баг особый приоритет который соответственно обязательный устранение    бывать исправление понадобиться менять большой часть архитектура снова попадать цикл проектирование разработка это уходить время забывать капасити команда работа баг превращаться бесконечный шествие круг проект нужный эксперт безопасность который выявлять проблема стадия разработка     ревивать безопасник выходить пентест  называть тест проникновение penetration tests который проводиться имитация реальный взлом система этап история переделывание архитектура повторяться заключаться очевидный минус который помогать устранять подход secure by design     конструктивный безопасность secure by design  c secure by design самый комплекс мера предыдущий подход проводить нужно  неявно выполнять требование счет использование правильный дизайн архитектура система дальнейший разговор значит неявно     результат неявный выполнение требование получать продукт который фикс явный уязвимость который готовый потенциальный выявлять проблема второй следствие  самый эксперт информационный безопасность который необходимый предыдущий подход рамка команда особо нужный достаточно следовать выбирать паттерн модель методология контролировать использовать правильно контролировать архитектура целое это сам давать результат    цикл разработка немного меняться        стадия проектирование разработка добавляться этап ревивать архитектура немой происходить проверка соответствовать архитектура который пытаться имплементить наш паттерн методология требование стадия ревивать безопасность пентесто проводиться рамка предыдущий подход скоро баги находить этот стадия быть относиться имплементация  удаваться исправлять малый кровь стадия пентест вовсе говориться мало баг бог разработка      secure by design подход  понятие secure by design довольно широкий wikipedia давать такой короткий определение     secure by design  проектирование учет закладывать безопасность    данный случай краткость немного вводить заблуждение поскольку реальность подход проблема безопасный дизайн существовать огромный количество попытаться систематизировать давать комплексный представление область основа взять классификация подход проектирование система the art of systems architecting mark wmaier который выделять четыре подход     эвристический  проектировать снизу вверх использовать хороший практика рекомендация эвристика помощь выстраивать архитектура система вариант сильно формализовать очень удобный применение   методический  это формальный подход архитектура проектировать сверху вниз выбирать модель шаблон начинать спускаться реализация вниз статья больший степень быть говорить подход   нормативный  мы очень интересный поскольку заключаться просто выполнять требование регулятор подход иметь довольно узкий сфера применение поэтому он подробно говорить быть   кооперационный  вариант немного интересный подразумевать коллаборационный действие разный сторона определение хороший решение сегодня также рассматривать    ортогональный классификация один  уровень представление система существовать статья достаточно поговорить два     архитектурный уровень  затрагивать взаимодействие высокоуровневый сущность высокоуровневый проектирование   уровень реализация  затрагивать отдельный аспект реализация низкоуровневый проектирование  код    скрещивать два классификация получать матрица помощь который систематизировать вариант подход secure by design        далее рассматривать пример подход secure by design     mils  multiple independent levels of safety and security  взгляд расшифровка название подход несколько вводить заблуждение никакой уровень mils плоский структура взаимодействовать домен рамка наш классификация mils  это методический архитектурный подход         mils  это высоконадежный архитектурный подход безопасность основа концепция разделение управление поток данные   httpszenodoorgrecord45164         этот сложный схема отражать простой концепция некий разделять контейнер  mils partitions  который выполняться код бизнеслогика application помимо код находиться middleware  сервис взаимодействие друг друг ядро система    ядро separation kernel  важный элемент платформа который помимо общий ядро ос действие скидулинг ресурс память выполнять разделение контейнер схема это отмечать помощь separation barrier разделение происходить аппаратный программный уровень первый случай оно выполняться процессор аппаратный часть платформа поддержка привилегия mmu iommu далее второй  счет контроль взаимодействие контейнер помощь заданный политик безопасность    концепция довольно простой mils предлагать теория референсный имплементация подразумеваться поэтому разработка большой продукт путь  имплементировать платформа самостоятельно основываться принцип mils использовать готовый методология являться развитие mils     cyber immunity  cyber immunity являться практически применимый развитие mils реальный решение это способ реализация безопасный информационный система mils подход также являться методический архитектурный        этот методология разрабатывать мы kaspersky        схема работа похожий видеть mils приложение разделять общаться какието канал связь  микроядро модуль безопасность который mils называться separation kernel    cyber immunity добавлять масса готовый решение частность это наш  собственный микроядерный операционный система kasperskyos  готовый механизм политик ipc все необходимый взаимодействие приложение друг друг  паттерн безопасность готовый пример реализация то подобный фактически бандл содержать нужно разработка milsподобной архитектура     кибериммунный система  этот решение который оставаться без",
    "tags": [
        "программирование",
        "разработка",
        "c++",
        "баг",
        "secure by design",
        "информационная безопасность",
        "тестирование",
        "архитектура",
        "cybersecurity",
        "кибербезопасность"
    ]
}
{
    "article_id": "727854",
    "article_name": "Строка на 1,5 гигабайта",
    "content": "свой предыдущий работа заниматься поддержка javaсервиса обеспечивать удаленный функциональность ui подобно rdp citrix сервис устраивать основа сессия состоять взаимосвязанный объект java который должный очищаться выход пользователь истечение заданный таймаут    этап планирование нагрузка обнаруживать существенный трата память причина который хотеть рассказывать статья     планирование нагрузка  часть мой повседневный работа команда заключаться планирование нагрузка следующий год анализировать метрика использование паттерный рост исследование популяция наш датасаентист мочь прогнозировать  сколько пользователь следующий год     определение инфраструктура необходимый поддержка ожидать пользовательский база использовать чрезвычайно сложный формула      рассчитывать количество  сервер  который мы понадобиться предстоящий год    один совещание планирование нагрузка выясняться изза огромный популярность сервис ждать существенный рост количество пользователь наш расчет показывать удовлетворение возрастать спрос мы потребоваться сервер поэтому мы вставать задача разбираться умещать пользователь каждый сервер обеспечивать поддержка предполагаемый пользовательский база     ограничивать  благодаря измерение нагрузка смочь выявлять узкий место наш система который данный случай оказываться память добавление сервер новый пользователь система начинать давать сбой увеличиваться нагрузка конечный итог она заканчиваться память понимание  ограничивать память  критически важный это направлять наш усилие сторона снижение потребление память     изучать использование память  приблизительный оценка потребление память каждый пользователь вычислять формула        взять пример число голова мочь получать следующий      каждый пользователь требоваться приблизительно 300 мб память понимать снижать этот число проводить серьезный измерение потребление память    выявлять потенциальный возможность улучшение начинать анализ дамп память java поначалу исследовать дамп вручную однако изза большой количество сервер мы приходиться разрабатывать скрипт оптимизация процесс помощь скрипт мочь выявлять тратить память объект связывать конкретный сессия обнаруживать такой проблема мочь избавляться излишний трата оптимизировать использование память наш система    возможно другой пост рассказывать скрипт анализ пока хотеться подробно рассматривать один легкий победа который давать мы анализ память     очень большой строка  начинать изучение тысяча дамп память поиск очень большой объект самый крупный кит оказываться строка 15 гб выглядеть примерно      видно изображение строка содержать множество символ обратный коса черта находить похожий строка меньший размер этот самый большой    изучать предназначение строка увидеть класс который устраивать     class screen       private screen previous    public string tojson      jsonobject jo  new jsonobject          if previous  null        joputprevious previoustojson               return jotostring      class session       string currentscreen    public void seturlscreen s      currentscreen  stojson      итак каждый экран предыдущий экран посещать пользователь это позволять пользователь вернуться назад точно то экран который ранее сохранение состояние позиция скроллинг уведомление валидация далее также сессия пользователь иметь текущий экран который находиться пользователь поэтому пользователь повторно подключаться существующий сессия вернуться то экран находиться    возникать два архитектурный проблема       стек предыдущий экран неограниченный сохранять все данные пока сервер взрываться   выполнять  joputprevious previoustojson  преобразовывать словарь json строка поле json содержать кавычка кавычка сохранение строка необходимо сочетать знакомый переход сохраняться    обратный косой черта необходимо сочетать знакомый переход этот строка сохраняться внутри строка давать мы    еще пара такой повторение получать      оказываться пользователь сессия состоять множество экран создавать string  currentscreen  огромный пропорция     решение проблема продолжение  разделять проблема быстрый долговременный решение    быстрый решение заключаться усечение строка предыдущий экран случай превышение определять количество символ например 100 мб хотя такой решение неполный мочь ухудшать ux оно быстрый реализация простой тестирование то позволять повышать надежность предотвращать ситуация который сессия занимать слишком большой объем приводить выход строй сервер    долговременный решение заключаться полный переписывание решение стек предыдущий экран создавать отдельный реальный стек иметь внутренний ограничение размер собственный отчетность писать тестировать потребоваться долго выпуск занимать время предотвращать пустой трата память просто скрывать строкикита вид еще один тип память очень глубокий объект json     эпилог  продолжать пользоваться инструмент анализ дамп память обнаруживать другой проблема никакой решаться просто этот    основной вывод история заключаться проверка подробность использование программа ресурс например изучение дамп память вместо простой измерение потреблять память критически важный успех позволять добиваться немедленный выгода",
    "tags": [
        "json",
        "потребление памяти",
        "оптимизация ресурсов",
        "анализ дампов",
        "дамп памяти"
    ]
}
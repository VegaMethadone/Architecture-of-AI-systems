{
    "article_id": "728072",
    "article_name": "Способы создания авторизации на сайте. Руководство с примерами. Безопасность в браузере",
    "content": "данный статья разбирать 4 способ зарегистрировать новый пользователь   сторонний сервис авторизация такой google   авторизация использование токен   авторизация помощь номер телефон   логин  пароль статья давать конкретный алгоритм реализация каждый способ необходимый библиотека также пример код постараться приводить пример реализация чистый javascript смочь внедрять функционал свой проект зависимый использовать фреймворок однако также быть пример тандем angular  asp net core обсуждать защищать ваш сайт взлом сколько это сложный возможно принцип гарантировать 100 защита итак давать приступать   регистрация аутентификация авторизация прежде подходить конкретный пример давать разбираться какой процесс происходить момент пользователь нажимать кнопка sign in sign up начинать процесс регистрация вы форма несколько поле имя логин пароль кличка ваш собака тд покорно заполнять поле звездочка жмякать кнопка зарегистрироваться ваш данные отправляться сервер помощь http сервер создавать база данные новый запись проходить успешно зарегистрироваться система процесс регистрация  это просто сохранение сервер определенный текстовый файл данные который заполнять сайт это пример сам простой способ регистрация который представлять реальность делать общий принцип неизменный подробно происходить процесс регистрация современный система разбирать поздно давать взглядывать процесс авторизация заходить свой аккаунт социальный сеть отображаться ваш фотография видео пост самый происходить любой другой человек это казаться странный данные сколько картинка история сообщение рекомендация который заточить именно нужно гдеть хранить хранить нужно очевидно сервер тк сохранять данные браузер быть доступный один устройство регистрироваться сказать регистрация каждый пользователь создаваться файл жесткий диск сервер который быть храниться данный момент авторизация данные вводить вы логин пароль отправляться сервер среди файл относиться разный человек логин искаться именно ваш проверяться соответствовать отправлять пароль то который сохранять файл браузер возвращаться необходимый данные пользователь процесс авторизация  это получение сервер нужный данные пользователь разница аутентификация идентификация авторизация большой счет  это разный этап один процесс предоставление доступ пользователь   этап разделять обычно процесс реализация  это мочь просто 3 разный метод функция вызываться приложение последовательно разделение также нужно тот случай мочь опускать какойлибо этап выполнять 2 другой пример пользователь проходить 3 этап получать токен доступ токен подтверждать факт человек проходить аутентификация значит следующий обращение опускать этап backend приложение должно проверять id пользователь храниться токен id доставать право далее словом авторизация простота подразумеваться весь процесс получение доступ представлять база данные выше писать чудесный текстовый файл который храниться данные пользователь безусловно мочь организовывать хранение данные обычный txt файл практика никто делать данный формулировка использовать понимать ваш данные храниться жесткий диск такой образ хранить компьютер фотка запись видео использовать этот цель определенный программа база данные база данные  это программа который работать фоновый режим функция который мочь пользоваться другой программа написать вы это функция  короче это операция сохранение получение данный отличие обычный текстовой файл база данные выполнять операция сохранение получение намного быстро особенно этот данные становиться очень такой образ работа backend приложение представлять работа 2х независимый программа   серверный приложение  программа который отвечать функционал сервер   база данные  программа который отвечать управление данные который использовать серверный приложение база данные использовать функционал серверный приложение  почему современный приложение использовать логин  пароль авторизация нужно отмечать естественно любой сайт который требовать авторизация должный вводить свой логин пароль входить однако речь пойти почему данные стараться использовать чистый вид лишний обмениваться они сервер получение дополнительный данные сайт основной момент  обеспечение безопасность давать взглядывать основной метод помощь который злоумышленник мочь получать доступ ваш аккаунт фишинг  хакер мочь создавать копия сайт который вводить свой логин пароль данные сохраняться сервер злоумышленник мочь входить ваш аккаунт использовать сюда входить различный звонок сотрудник банк который просить предоставлять информация перебор пароль автоматический программа перехват трафик  залогиниться сайт нужно отправлять сервер логин пароль помощь http  который мочь перехватывать хакер xss  вставка сайт вредоносный js код который изменять логика приложение метод авторизация использовать спасать взлом быть использовать фишинг перебор пароль просто первый случай собственный воля говорить свой пароль второй пароль отгадывать любой случай хакер узнавать ваш данные вход вид который использовать значит приложение ничто отличаться ip который происходить вход единственный мера защита  это смотреть какой сайт вводить пароль использовать сложный пароль усовершенствованный метод авторизация спасать именно тот случай злоумышленник пытаться косвенно получать ваш данные пример перехват трафик проблема авторизация помощь логин  пароль получение любой данные ваш пользователь нужно доказывать сервер  это вводить пароль отправлять сервер такой образ модель авторизация webприложение каждый обмениваться логин пароль сервер необходимость это опасность перехват дополнение этот логин пароль приходиться гдеть хранить использовать последующий запрос сервер иначе приходиться постоянно просить пользователь вводить пароль переход новый страница  следовательно возможность получение доступ этот данные случай использование xss избегать данные проблема процесс авторизация использовать специальный ключ  токен который один сторона содержать приватный данный пароль помогать сервер идентифицировать пользователь использование токен процесс авторизация токен представлять простой строка символ пример   eyj0exaioijkv1qilcjhbgcioijiuzi1nij9eyjpc3mioijpbmxpbmugslduiej1awxkzxiilcjpyx qioje2nzc5mtcxotysimv4cci6mtcwotq1mze5niwiyxvkijoid3d3lmv4yw1wbguuy29tiiwic3vii joianjvy2tldeblegftcgxllmnvbsisikdpdmvutmftzsi6ikpvag5uesisiln1cm5hbwuioijsb2nr zxqilcjfbwfpbci6impyb2nrzxrazxhhbxbszs5jb20ilcjsb2xlijpbik1hbmfnzxiilcjqcm9qzwn 0iefkbwluaxn0cmf0b3iixx0sbi4rpruoihrisficyos3278nuu83ufs9zuhikdgrs давать кратко описывать этап авторизация помощь токен  ввод логин пароль шифрование преобразование логин пароль закодировать строка   передача шифровать данные сервер генерация сервер токен доступ помощь который webприложение обращаться backend приложение получение данные отправка токен обратно браузер сохранение токен локальный хранилище кука дальнейший использование быть 1 передавать приватный данные сеть использовать токен который содержать публичный данные прежде погружаться деталь каждый этап давать взглядывать какой тип авторизация использование токен существовать тип разделять 2 группа который различаться способ генерация токен доступ авторизация самый сайт случай логин пароль вводиться сайт который находиться кодироваться отправляться сервер генерироваться токен возвращаться сайт  авторизация сторонний сервис gmail пользователь перебрасывать сторонний ресурс открываться новый вкладка окно браузер вводить данный авторизация метод отличаться вопервый  это намного простой пользователь вовторых  нужно вводить данные ваш аккаунт пример аккаунт google неизвестный сайт который запрашивать регистрация пользователь вводить свой данные сторонний сервис наш случай gmail генерировать токен доступ отправлять сайт который переходить пользователь сайт работать ваш авторизационный данные сервис токен   этап авторизация описываться стандарт  oauth oauth 20 оба версия описывать алгоритм 2 версия  защищать   алгоритм авторизация  подробно пользователь вводить свой данные желательно закодировать передавать сеть простой тексто",
    "tags": [
        "авторизация",
        "jwt",
        "oauth2",
        "gmail",
        "пример кода"
    ]
}
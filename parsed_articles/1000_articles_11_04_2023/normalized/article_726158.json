{
    "article_id": "726158",
    "article_name": "Публикация NPM-пакетов",
    "content": "недавно очередной копирование файл reactкомпонентов проект проект решать хватить это терпеть пора научаться публиковать npmпакеты прошерстить интернет поиск простой рецепт который позволять минимальный усилие сделать пакет reactприложения находить несколько рабочий вариант сожаление иметь различный недочет поэтому приходиться вооружаться напильник составлять памятка результат свой манипуляция 1 создание проект предпочитать возможность брать готовый инструмент изобретать велосипед поэтому использовать стандартный create react app  поднятие проект который написать typescript следовать использовать команда npx createreactapp myapp template typescript создавать проект полностью сконфигурировать работа typescript 2 подготовка структура проект процесс написание библиотека скоро захотеться тестировать отлаживать использовать создавать предыдущий шаг рабочий файл папка src  src   appcss   apptsx   indexcss   indextsx файл  reactappenvdts  reportwebvitalsts   setupteststs  трогать файл библиотека располагать каталог  srclib   структура который следующий src   lib    components    tests    indexcss    indexts очевидно компонент располагать  components   тест  tests   точка вход библиотека  indexts   стиль  indexcss  3 подготовка packagejson коробка  create react app  создавать минималистичный packagejson публикация необходимо дополнять name  указывать реальный название пакет название приложение лень искать адекватный название общий пространство имя поэтому использовать собственный скоп alxgrn reactform  description  описание private  поставлять false  author  указывать автор пусть знать license  указывать лицензия выбирать apache20  название указывать правильный формат сомневаться потренироваться использование команда npm init  уметь проверять keywords  массив ключевой слово облегчение поиск пакет main module  точка вход библиотека быть располагать готовый файл каталог dist точка вход distindexjs  отмечать поле module отсутствовать документация повсеместно использоваться оно нужный наличие main  загадка который лень разгадывать поэтому просто написать files  массив файл который быть публиковать указывать каталог dist  слагать готовый проект умолчание также быть добавлять readme license  причем любой расширение регистр homepage  repository  bugs  понятно важно указывать homepage чтото тип homepage httpsgithubcomalxgrnreactformreadme ваш тестовый приложение переставать работать тк сборка искать файл проект хрен знать фикс неприятность необходимо подправлять секция  scripts  запуск команда  start  следующий образ start public_url reactscripts start 4 установка настройка babel обидно осознавать  create react app  уметь делать мы сборка проект делать этот гдеть внутри свой правило который особо посвящать здорово уметь сразу готовить проект публикация быть сам преобразование typescript javascript который затем перегнать древний javascript быть использовать babel устанавливать проект npm install savedev babelcli babelcore babelpresetenv babelpresetreact babelpresettypescript сконфигурировать babel создавать корень файл  babelconfigjson  следующий содержание      comments false     presets                       babellpresetenv                                      targets  025 not dead                     usebuiltins usage                     corejs 365                                   babellpresetreact         babellpresettypescript          ignore          tests         dts       удалять результат комментарий игнорировать файл тест который быть держать каталог  srclibtests  объявление тип который ниже добавлять раздел  scripts  файл  packagejson  команда запуск билд buildjs rm rf dist  node_envproduction babel srclib outdir dist copyfiles extensions tstsx sourcemaps true отмечаться ранее быть складывать результат сборка каталог  dist  корень проект поэтому первое делать скрипт  удалять предыдущий сборка затем устанавливать переменный среда окружение продаксить режим запускать babel babel искать обработка файл расширение  tstsx  кроме тот указывать блок  ignore  файл конфигурация каталог  srclib   результат записывать каталог  dist   необработанный файл быть просто скопировать  dist   также быть создавать файл sourcemap 5 генерация файл объявление тип полный счастие пользователь наш библиотека общий порядок мы необходимо дистрибутив находиться файл объявление тип предыдущий шаг сказать babel обрабатывать файл просто скопировать папка  dist  оставаться сгенерировать использовать  create react app  компилятор tsc поэтому просто воспользоваться добавлять раздел  scripts  файл  packagejson  следующий команда buildtypes node_modulesbintsc project tsconfigtypesjson обращать внимание указывать компилятор использовать файл проект  tsconfigtypesjson   мочь использовать файл  tsconfigjson   который создавать  create react app  тк он устанавливать флаг  noemit   который совмещать нужный мы флаг  emitdeclarationonly  поэтому просто копировать файл  tsconfigjson   tsconfigtypesjson   затем блок  compileroptions  добавлять  declarationtrue   emitdeclarationonly true    noemit true   наоборот убирать дополнительно менять блок  include  каталог  srclib   интересовать запуск команда npm run buildtypes компилятор создавать файл декларация который затем смочь скопировать дистрибутив 6 добавлять команда сборка создание дистрибутив мы нужно сначала сгенерировать файл декларация затем запускать babel удобство добавлять раздел  scripts  файл  packagejson  команда который это сотворить builddist npm run buildtypes  npm run buildjs  rm rf disttests дополнительно добавлять удаление каталог  tests  дистрибутив тк вряд нужный 7 работа зависимость вернуться файл  packagejson   он присутствовать два секция  dependencies   devdependencies   первый перечислять зависимость который требоваться работа пакет продакшень второй  время разработка это прекрасно пока создавать приложение писать библиотека должный учитывать помещать целевой проект немой скоро быть устанавливать зависимость который использовать точно устанавливать  react  коль скоро писать библиотека reactкомпонентов обязательно возможно другой компонент быть устанавливать оставлять зависимость внутри свой  dependencies  мочь возникать всякий неприятность тип использование два реакте один приложение мы такой поэтому перенести зависимость  dependencies   devdependencies  тот который мы нужный продаксить  peerdependencies  peerdependencies      react 1820     reactdom 1820     reactchildrenutilities 280  видеть помимо реакте нужный пакет  reactchildrenutilities  этот изменение полезно запускать npm install 8 публикация пакет готовый публикация пакет несколько нюанс 81 решать использовать название пакет имя свой аккаунт тот терминология npm  scoped package  умолчание такой пакет считаться приватный публикация первый использовать специальный флаг npm publish access public дальнейший запускать команда флаг 82 прежде реально публиковать пакет неплохо протестировать использовать команда  npm link   готовый то всплывать ошибка связывать duplicate react  83 очередной публикация необходимо изменять версия пакет это делать рука использовать команда  npm version  9 плюшка публикация захотеться плюшка 91 покрытие тесто coverage тест считаться каталог библиотека добавлять  pakagejson  настройка  jest  jest      collectcoveragefrom          srclibjsjsxtstsx       92 беджик readmemd беджик почемуто любить брать shieldsio  текущий версия тип лицензия взять сразу беджик прохождение билд настраивать  action nodejs ci   github  она сразу добавлять интеграция codecovio вывод беджик покрытие тесто  codecov   отличие  travis ci   просить вводить данный карта открытый проект 10 все надеяться комуто полезно",
    "tags": [
        "npm",
        "npm package",
        "npm пакет"
    ]
}
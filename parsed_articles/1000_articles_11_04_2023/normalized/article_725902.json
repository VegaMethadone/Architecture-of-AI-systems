{
    "article_id": "725902",
    "article_name": "HTTP/3 и QUIC: Как это работает?",
    "content": "http3 находиться стадия подготовка стандартизация такой команда shopify medium внедрять продакшн это скриншот сзапрос домашний страница medium большинство изние проходить протокол http3 помечать какh329 h3означает http3 29 номер предварительный версия протокол самый актуальный драфт являться 34я версия известный команда выбирать версия 29ю поскольку именно обновлениебыть очень объемный отличие вболее поздний версия нетакий большой зачемжа мы нужный http3 один изважный причина являться решение проблема блокировка начало очередь headofline blocking блокировка начинать очередь http2 http2решает проблема блокировка начало очередь науровна http спомощь фрейм frames поток streams однако проблема оставаться науровна tcp получать фрейм свой верхний уровень tcp разбивать насегмент пойти сегмент быть доставлять надруга конец однако интернет можетбывать нестабильный некоторый сегмент всетака могутбывать потерять впроцесс tcp иметь функция гарантировать доставка помещать получать сегмент вбуфер ожидать повторный передача потерять сегмент чтоя приводить кблокировка начало очередь длярешение проблема нужно чемнибудь заменять tcp quic udp обновлять стек протокол видеть значительный изменение стек протокол tcpбыл заменять наudp вотличие отtcp udp негарантировать доставка несоздавать какихлибо зависимость сегмент это означать чтоникаким блокировка начало очередь неможетбывать впринцип кроме поскольку udp являться сетевой протокол передача безустановление соединение никакой рукопожатие нетребоваться поэтому работаетбыстро tcp вдополнение кudpбыл вводить новый протокол quic наследовать сильный сторона tcp среди который управление соединение поток данный кроме quic реализовать функция гарантировать доставка данные который недоставать udp другой важный изменение заключаться втом чтоtls весь свой функция обеспечение безопасность интегрировать прямо внутри quic поскольку tls 13уже готовый кработа впродакшен quic внедрять именно версия последний нонеменее важный qpack заменять себя hpack чтоеще повышать производительность алгоритм сжатие заголовок количество запись встатический таблица увеличивать 61до 98 иметь нулевой индекс пакет quic фрейм поток quick состоять изпакет packet пакет всваивать очередь состоять изнескольким фрейм frame низко приводить структура пакет quic взаголовок пакет quic использоваться идентификатор соединение connection id илиcid который отмечать место назначение destination источник source браузер сервер мочь выбирать свой идентификатор сей помощь отделять соединение отip порт обеспечивать плавный миграция соединение давать рассматривать следующий сценарий который происходить свами несколько задеть выходить издома ваш мобильный телефон переключаться сwifi 4g 5g поскольку ip изменяться tcp переподключаться намгновение прежде снова быть подключать кинтернет потерять соединение вquic идентификатор соединение неменяться поэтому концептуальный соединение оставаться прежний несмотря наизменение ipадреса соединение использоваться повторно ненужный никакой переподключение атеперь давать взглядывать например пакет quic quic ietf     quic connection information     packet length 1350     1   header form long header 1     1   fixed bit true     00   packet type initial 0      00  reserved 0      00  packet number length 1 bytes 0     version draft29 0xff00001d     destination connection id length 8     destination connection id 45fb5955dfaa8914     source connection id length 0     token length 0     length 1332     packet number 1     payload 5a99e5b29413627619ca3b5add4cf8b6ce348355b1c1a2be9874c7961e7996a24aeec860     tlsv13 record layer handshake protocol client hello     padding length 997 публичный флаг  1100 0000  мочь сказать это long header тип  initial ниже указывать версия quic draft29 который следовать идентификатор соединение место назначение длина далее рассматривать структура фрейм quic подобно http2 вquic могутбывать различный тип фрейм например фрейм  stream  предназначать дляперенос поток фрейм  ack  предназначать дляуправление поле взаголовок использовать кодирование переменная длина 8байтов идентификатор stream достигать 2⁶² сдвуметь бит зарезервированный вкачество маркер младший разряд отмечать отправитель 0означает клиент 1означает сервер второй младший разряд отмечать направление поток 0означает двусторонний поток 1 односторонний поток ниже приводить пример фрейм tlsv13 record layer handshake protocol client hello     frame type crypto 0x0000000000000006     offset 0     length 314     crypto data     handshake protocol client hello тип фрейм   crypto  это тип предназначать рукопожатие полезный нагрузка  криптографический данные пример serverhello tlsv13 record layer handshake protocol server hello tlsv13 record layer handshake protocol server hello   frame type crypto 0x0000000000000006   offset 0   length 90   crypto data   handshake protocol server hello     handshake type server hello 2     length 86     version tls 12 0x0303     random 0f58bdbd934450c7aa98242121447bef2fe0733aa5fc3beffab6513c7177f9a4     session id length 0     cipher suite tls_aes_128_gcm_sha256 0x1301     compression method null 0     extensions length 46     extension key_share len36     extension supported_versions len2 исключение новый поле фрейм quic это видеть  рукопожатие tls 13  фрейм протокол http3 quic многое облегчать рабочий нагрузка http3 например отличие http2 http3 использовать поток quic вместо определять контролировать поток самый большинство тип фрейм управлять http2 перемещать quic например фрейм  rst_stream   window_update  благодаря это структура фрейм http3 упрощаться два поле  тип фрейм frame type длина length стоить упоминать один вещь http3 иметь назначать порт 443 https браузер сначала подключаться сервер http2 обнаруживать служба сервер отвечать заголовок  altsvc  входить порт http3 например  altsvc h329443  браузер использовать quic асинхронный подключение порт создание соединение дальнейший связь использоваться http3 ссылка последний версия 34 драфт проект хотеть сам попробовать http3  демосайт nginx  последний версия браузер chrome canary поддерживать quic нужный микросервис  монолит поговорить завтра вечер  бесплатный вебинар  otus преподаватель рассказывать способ выбор монолитный микросервисный архитектура участник рассматривать подход также какой бенефит получать каждый этот архитектура приходиться мириться открытый урок пройти рамка онлайнкурс highload architect  записываться открытый урок",
    "tags": [
        "http/3",
        "quic",
        "микросервисы",
        "монолиты",
        "highload architect"
    ]
}
{
    "article_id": "725722",
    "article_name": "Консистентность в конкуретной среде: как не захлебнуться в потоках данных",
    "content": "прошлый статья  рассказывать конкурентный среда точка типовой проблема который сталкиваться разработчик речь пойти консистентность реализовать какой злой сила мы мочь помешать это сделать решать делить статья часть поэтому продолжение большой статья все один место напоминать текст рассчитать первый очередь разработчик который иметь мало практический опыт работа конкурентный ииль микросервисный среда поэтому многий вещь объяснять палец тот захотеть ознакомляться строгий формулировка сразу сказать быть затрагивать упрощенный идея паттерн  transactional outbox   saga  консистентность предел один сервис  прошлый статья  рассказывать точка важный консистентность данный консистентность понимать достоверность непротиворечивость информация план прогресс выполнение задача иной слово консистентность сервис забывать выполнять поставлять задача выполнение пытаться сделать второй  например пользователь оплачивать покупка  списывать деньги сервис забывать это сделать  продавец скоро обрадоваться такой исход плата списываться дважды недовольный пользователь давать разбираться добиваться консистентность ситуация наш сервис практически влиять внешний мир посылать получать запрос другой сервис взаимодействие происходить лишь бд казаться сложный давать просто писать база консистентный данные нормально делать  нормально  все простой постановка задача прежде начинать писать код давать определяться какой условие работать именно хотеть  точка реализовывать масштабирование увеличение количество одновременно запущенный экземпляр сервис экземпляр быть работать один тот данный иной слово разделять ресурс давать несколько экземпляр сервис работать одновременно любой момент экземпляр упасть любой причина  например oom killer дрейн нод k8s тд б экземпляр мочь начинать обрабатывать один тот данный обработка чеголибо потребоваться ручной вмешательство задача  случаться система должный оставаться консистентный состояние  подумать  бином ньютон все известно поступать подобный ситуация комуто неизвестно решение очевидный поставлять эксклюзивный блокировка прочитывать данные бд проанализировать прочитывать данные принимать решение изменение данные записывать бд изменять данные отпускать блокировка поскольку шаг 1 поставлять блокировка шаг 2 мочь уверенный данные быть актуальный другой экземпляр сервис поменять снятие блокировка соответственно шаг 3 4 опасаться экземпляр изменять данные рано наш перестановка экземпляр результат изменяться  разумеется это безупречно работать остальной часть наш код работа этот данные вести аналогично ставить такой блокировка т д поговорить поздно пойти быстро хороший вопрос точка postgres стоять pgbouncer режим  transactional pooling  поэтому мы доступный  transactional locks  чтото отваливаться установка блокировка блокировка отпускаться  иметь вид ваш настройка мочь отличаться успевать данные записываться бд все данные оставаться вид который момент начало работа они трогать итого система оставаться консистентный состояние шаг 5 какойто атомарный запрос несколько чтото пойти один запрос проходить другой еще например выполнять перевод один счет успевать зафиксировать база списание деньги успевать зафиксировать поступление счет получатель это бороться знать транзакция наш алгоритм приобретать вид  поставлять эксклюзивный блокировка  прочитывать данные бд  проанализировать прочитывать данные  принимать решение изменение данные запускать транзакция  записывать бд изменять данные закоммитить транзакция  отпускать блокировка добавлять немного конкретика postgresql блокировка выполнять помощь select for update запрос ставить блокировка читать данные учитывать работать внутри транзакция блокировка сниматься автоматически завершение транзакция удачный неудачный  алгоритм меняться поставлять эксклюзивный блокировка прочитывать данные бд запускать транзакция поставлять эксклюзивный блокировка прочитывать данные select for update  проанализировать прочитывать данные  принимать решение изменение данные запускать транзакция  записывать бд изменять данные  закоммитить транзакция  отпускать блокировка воплощать python получать чтото такой transaction  ormbegin_transaction  try     obj  somemodelselect_for_updatewhere     if should_change           change obj         objsave     transactioncommit except exception     transactionrollback получаться нужно особый премудрость обеспечивать консистентность данный предел один сервис известно программа сделать ровно сказать программист она хотеть еще учитывать пусть таблица счет пользователь она ссылаться другой таблица  покупка пользователь  задача написать функция который допускать дубль оплата покупка одновременно взяться несколько экземпляр сервис добросовестно брать покупка блокировать она производить оплата отпускать блокировка догадываться пойти предполагать пользователь счет 100 рубль очередь оплата  покупка 50 70 рубль обработка запуститься одновременно блокировать покупка процесс оплата получаться каждый экземпляр увидеть счет 100 рубль решать деньги хватать каждый покупка самый дело это блокировать объект покупка объект счет это очередь чреватый дедлока например кроме оплата покупка еще алгоритм оплата налог который предполагать блокировка объект счет который нужно выполнять списание также быть считать приоритетный оплата налог нежели оплата штраф логично сначала заблокировать объект счет объект покупка счет далее списывать оплата налог пользователь появляться какойто новый налог момент совершение покупка происходить такой ситуация алгоритм оплата покупка заблокировать объект покупка попытаться заблокировать счет алгоритм оплата налог это самый время заблокировать счет попытаться заблокировать покупка делатьто казаться решение проблема консистентность очевидно однако этот вопрос стоить подходить беспечно ваш проект должный четкий правило постановка блокировка часть код должный следовать иначе  быть печальный последствие  консистентность отправка запрос наш сервис уметь собственный консистентность быть пытаться общаться внешний мир  предполагать другой сервис который посылать запрос уметь правильно обрабатывать рассматривать создание платеж упоминать  вводный статья  автоматизированный банковский система  абс это отдельный сервис другой сервис общаться esb сервис нужно создавать платеж просто обращаться абс запрос  использовать паттерн  requestreply  ранее оставлять кадр esb общаться посредством rabbitmq стараться писать алгоритм универсальный возможно гдеть удаваться избегать контекст менее паттерн requestreply реализовать rabbitmq например http свой нюанс который выходить рамка данный статья кажется принципиальный отличие предыдущий задача суть взять база данные зависимость значение выполнять действие запускать транзакция поставлять эксклюзивный блокировка прочитывать данные проанализировать прочитывать данные принимать решение отправка запрос отправлять запрос записывать бд запрос отправлять закоммитить транзакция отпускать блокировка   чтото пойти главное забывать доставлять догадываться оплошность допускать предыдущий код  прошлый подобный алгоритм корректно срабатывать весь взаимодействие идти база случай любой ошибка база откатиться свой состояние момент начало транзакция иметь дело база еще отправлять запрос внешний мир получаться отправлять запрос чтото пойти наш бд откатиться состояние отправка запрос еще план самый дело запрос отправлять итог  консистентность данные нарушать  вернуться наш пример оплата покупка пользователь совершать покупка сервис отправлять запрос создание платеж изза сбой фиксировать информация спустя время сервис увидеть свой бд информация неоплаченный покупка повторно решать сделать оплата мы прийти разгневать покупатель претензия списывать платеж оператор бд смочь отвечать платеж мама клясться такой случай упоминаться постановка задача инстанс сервис упасть любой момент все еще мочь полагаться транзакция бд пусть мочь отправлять запрос внутри транзакция мочь сделать запись намерение отправлять запрос случай транзакция откатиться вернуться консистентный состояние который старт транза",
    "tags": [
        "python",
        "микросервисы",
        "конкурентность"
    ]
}
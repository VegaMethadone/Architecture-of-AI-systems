{
    "article_id": "726026",
    "article_name": "Как управлять инфраструктурой в GitOps с помощью Crossplane",
    "content": "привет звать сергей  руководитель devopsнаправления студия kts компания периодически партнериться интересный ребята вместе организовывать мероприятие встреча предприниматель онлайнквартирник день продактменеджмент цикл три статья  текстовый версия выступление день техдир выступление подготовить совместно southbridge автор сергей маленко руководитель devopsюнита kts сергей бондарев архитектор southbridge доклад посвящать история развитие деплоить приложение основной модель сравнение достаточно детально проходиться pullмодели показывать помощь передовой инструмент организовывать управление инфраструктура большой проект давать возможность разработчик самостоятельно заказывать элемент инфраструктура нужда свой приоложение основа доклад подготовить статья который пойти порядок развиваться понимание контекст рассматривать итеративно изменяться подход развертывание приложение такой argocd нужный пример использование рассматривать относительно новый виток развитие деплоить приложение посмотреть какой вопрос закрывать помощь инструмент управлять инфраструктура gitops помощь crossplane     новый подход iac объединять argocd это финальный часть наш доклад который узнавать какой инструмент использовать девопс ручной изменение полный автоматизация какой инструмент позволять применять pullмодель управление инфраструктура создание виртуалка заказ новый сервер датацентр кейс который объединять application set манифест crossplane содержание ручной схема работа первый скрипт старт ansibleсценарий автоматизация ansible terraform полный автоматизация argocd api pushмодель crossplane работать crossplane инфраструктура terrajet создавать crossplaneпровайдер terrajet первый кейс бустрапинг окружение второй кейс динамический окружение полезно объединять crossplane argocd итог почему полезно автоматизировать ручной схема работа изначально devopsинженеры делать все рука заходить вебинтерфейс панель хостинг накликивать новый виртуалка заходить она  заказывать сервер делать  apt install nginx  ставить сервер все работать первый скрипт старт поздно сделать автоматизация команда записывать bashскрипт класть репозиторий заходить сервер рука делать git pull получать скрипт устанавливать необходимый сервис приложение шаг останавливаться организация получать виртуалка часто приходиться ждать неделюполтор нужно написать служебный записка отправлять инстанция получать доступ ansibleсценарий продвигать девопс заменять скрипт sh ansibleсценарий класть все репозиторий скачивать сервер рука запускать ansible настройка автоматизация ansible самый продвигать девопс автоматизировать запуск ansibleсценария класть cicd появляться новый сервер который заносить inventory запускаться cicd job все автоматически настраивать единственный неудобство сервер приходиться создавать рука существовать наработка который автоматизировать процесс например ansible получать виртуалка api хостер самый популярный инструмент  terraform terraform программа управление внешний ресурс работа нужно создавать вручную достаточно описывать конфигурация будущий инфраструктура terraform сделать все terraform выполнять задача мочь возникать проблема инструмент настолько популярный становиться дефакто стандарт подход infrastructure as a code полный автоматизация полный автоматизация оставаться автоматизировать terraform запихивать cicd запускаться сохранять свой state нужный система например gitlab argocd api pushмодель вернуться динамический окружение  второй часть случай использование argocd api классический pushмодели мочь вставлять отдельный job название build environment который вызывать terraform какой альтернатива мы предлагать pullмодель crossplane это еще инструмент infrastructure as a code предназначение такой terraform создавать инфраструктура облако разворачивать база кластер argocd жить kubernetes отличие terraform crossplane постоянно синхронизировать состояние terraform  консольный утилита синхронизация изменение происходить писать  terraform planapply  crossplane работать агентный модель   смотреть самый дело облако программист попросить развертывать конфигурация несовпадение crossplane пытаться применять изменение входить фонд  cncf  который разрабатывать продвигать облачный технология lac инструмент аналогичный terraform задача жить kubernetes управлять инфраструктура постоянно синхронизировать состояние входить cncf инфраструктура инфраструктура представлять  custom resources  kubernetes мочь описывать postgresкластер kubernetesкластер yamlфайл катить  applications  argocd итог это попадать crossplane взять спецификация пойти облако создавать managed postgres kubernetes кластер crossplane создавать любой инфраструктурный вещь который предоставлять облачный провайдер crossplane поддерживать aws google cloud azure yandexcloud digital ocean список постоянно пополняться работать crossplane например создавать манифест описывать mysqlкластер указывать параметр отправлять kubernetes crossplane брать спецификация идти например api yandexcloud разворачиваться база apiversion mdbyandexcloudjetcrossplaneiov1alpha1 kind mysqlcluster metadata  name mysqlauth spec  forprovider    environment production    host       zone rucentral1b    name mysqlauth    resources       disksize 10        disktypeid networkhdd        resourcepresetid b2nano    networkidref      name default    folderidref      name default    version 80 выше  простой манифест crossplane создавать mysql cluster yandexcloud какой возможность мы открываться мочь описывать инфраструктура helmчартах элемент внутри kubernetes любой облачный объект настройка окружение например dnsзаписи группа безопасность сеть далее допускать хотеть создавать kubernetesкластер yandexcloud мы потребоваться  securitygroup  описание кластер  nodegroup  создавать отдельный чарт который описывать сущность values параметризировать нодгруппа конфигурация самый кластер  securitygroup  далеко описывать postgresqlкластер экономия ресурс удобно создавать внутри один кластер разный бд создавать чарт первый чарт который создавать бдкластер второй чарт создаваться конкретный база данные внутри кластер пользователь  именно чарт мочь использовать зависимость чарт сам приложение такой образ команда чарт свой приложение сам попросить база кластер dnsзапись любой другой сущность облако использовать зависимость вид инфраструктурный чарт например рассматривать деплый backendприложения обычно мы требоваться бд пользователь разработчик подключать чарт свой приложение зависимость вид второй чарт описывать высокий итог argocd разворачивать сам приложение манифест crossplane crossplane этот манифест создавать пользователь база внутри кластер затем создавать секрет данные подключение секрет заранее примонтировать подавать приложение  deployment  итог все работать автоматически terrajet terrafom  настолько популярный инструмент заказывать пицца уметь дергать любой api поэтому разработчик crossplane создавать инструмент terrajet  сгенерировать провайдер crossplane база terraform terrajet полезный ваш провайдер все еще поддержка crossplane terrajet натравливаться terraformпровайдер генерировать код провайдер итог получать проект код go сборка github actions создавать crossplaneпровайдер terrajet увидеть наш друг selectel crossplaneпровайдера  сгенерировать terrajet  попробовать создавать kubernetes спецификация кластер получаться нужно поменять статус ответ создание api selectel это связанный особенность terrajet api selectel поменяться статус продвигаться далеко зато смочь импортировать текущий сущность указывать id кластер  external name  появляться статус дополнительный параметр мочь менять кластер хотеть apiversion mksselecteljetcrossplaneiov1alpha1 kind clusterv1 metadata   name devopsdemo   annotations     crossplaneioexternalname a58b105df8d63d83fd85 spec   forprovider     zonal true     projectid ecccf32f     region ru2     kubeversion 1229   providerconfigref     name default  httpsgithubcomktsstudioproviderjetselectel status   atprovider     id a58b105df8d63d83fd85     kubeapiip 45     maintenanc",
    "tags": [
        "devops",
        "argocd",
        "crossplane",
        "terraform",
        "terrajet"
    ]
}
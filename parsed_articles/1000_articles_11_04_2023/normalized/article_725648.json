{
    "article_id": "725648",
    "article_name": "Школа Программистов-2022: вступительные испытания и разбор задач",
    "content": "13 год   hhru  провожать бесплатный  школа программист   год становиться исключение статья рассказывать нюанс организация вступительный испытание разбираться проходить поделиться решение задача год поехать  процесс поступление построить следующий схема участник оставлять заявка решать несколько задача автоматический проверка затем проходить собеседование год воронка выглядеть оставлять заявка   2873  человек решать 2 задача   270  человек доходить собеседование   122  человек поступать школа   42  человек рано смешать поток читать лекция одновременно frontend backend последний несколько год становиться разделять участник направление счет параллельный проведение лекция мочь давать полезный знание специфический каждый направление хотя некоторые лекция оставаться общий  например лекция виртуализация git docker каждый направление проводить отдельный конкурс задача собеседование подбирать задача вступительный просто показываться первый взгляд существовать множество нюанс необходимый подбирать оптимальный сложность понятно сформулировать написать тест далее обо все писать  прошлогодний статья  разбор вступительный задача проверка задача рано осуществляться яндексконтест решать переходить система  checkup каждый год разбивать участник команда присмотр ментор ребята несколько месяц работать проект который максимально приближать настоящий checkup рождаться такой проект первый рабочий версия который полностью сделать наш студент checkup посмотреть задание отправлять решение три язык программирование  js python java каждый задача давать 15 попытка кстати гугление  свой система который определять списывать решение сформулировать задача избегать вопрос конкурсант получаться счастие вопрос задавать прямо внутри checkup часто участник задавать уточнять вопрос случаться ошибка наш сторона каждый сообщение разбирать детально находить недочет  править пересчитывать неправильный ответ уведомлять участник вопрос отвечать наш разработчик технический департамент который составлять график дежурство правило самый мясо начинаться близко точка возгорание дедлайн автоматический отбор участник ждать живой собеседование проводить ребята техдеп интервью давать несколько алгоритмический задача час решение технический часть собеседование общаться жизнь оценивать softскилы задача  разбор задача 2022 итак задача год прошлый год немного перебарщивать сложность второй задача поэтому набор задачка легко интересный обычно первый разогрев второй сложно поехать розыгрыш резюме рьяный работник hr маша стол лежать два стопка резюме размер  n   m  каждый резюме указывать зарплата число  a0n1  один стопка  b0m1  второй нулевой индекс указывать верхний резюме стопка маша устанавливать значение  s  максимальный сумма зарплата предлагать очень активный стажер саша сыграть игра каждый ход саша взять один  верхний  резюме любой стопка забирать работа саша считать сумма зарплата резюме который взять брать новый резюме стопка такой образ этот сумма превышать  s игра заканчиваться саша брать резюме нужно выяснять какой максимальный количество резюме саша мочь забирать работа знать зарплата указывать каждый резюме например 3 4 11 1 1 2 2 3 3  4 оптимальный алгоритм просто брать верхний резюме каждый стопка 112239дальше резюме брать нельзяпотой сумма становиться высокий 11поэтому возвращать 5 сложно 5 5 10 5 1 1 3 1 3 1 3 1 3 ситуация интересно простой жадный алгоритм приводить неправильный результат играть роль саша знать зарплата резюме оптимально взять сначала левый стопка порядок 5  1  1  1  1  9 взять верхний резюме правый 9  1  10 итого  6 резюме задача очень сложный достаточно участник успешно справляться несмотря наличие второй пример пояснение он самый частый ошибка равный использование жадный алгоритм пора некоторый модификация попытка решать много граничный случай также попытка простой перебор вариант наш большой тесто задание 10 000 резюме обычно заканчиваться превышение лимит время память правильный вариант решение  взять максимальный количество резюме левый стопка затем пробовать заменять добавлять превышать сумма последний взять верхний резюме правый стопка мы нужно вернуть максимальный сумма список резюме  манипуляция массив взять резюме вполне допустимый  высоко заполнять selected_numbers максимально возможный  предел s список резюме левый стопка   текущий максимальный количество max_count  lenselected_numbers current_count  max_count while len_b      пробовать добавлять верхний резюме правый стопка     if total_sum  b1  max_sum         total_sum  bpop         len_b  1         current_count  1  обновлять максимальный количество         if current_count  max_count             max_count  current_count   сразу переходить следующий резюме правый стопка         continue   добавлять получаться  взять один резюме  выходить     if not lenselected_numbers         break   взять  вынимать последний выбирать левый стопка   попробовать     value_from_first_stack  selected_numberspop     total_sum  value_from_first_stack     current_count  1  return max_count полный код решение посмотреть ссылка конец статья также хотеть отдельно отмечать очень простой решение точка зрение количество код  bisect он приходить несколько участник такой подумать генерировать решение выглядеть очень круто  имя переменный соответствовать условие printmaxi  bisect_rightb s  ai  1 for i in rangen  1 if s  ai финансовый фантазия фанатичный фермер фермер василий выбирать земля покупка предмет торги  прямоугольный поле ширина  n  высота  m  который состоять участок  1   плодородный участок  0   неплодородный василий либо купить регион поле любой размер либо отказываться покупка доступный покупка регион условие покупка следующий регион  это прямоугольник ограничивать соприкасаться участок плодородный почва участок соприкасаться соседний друг друг  сверху снизу справа слева диагональ 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 пример выше соприкасаться участок кроме нижний регион 2 площадь 9 площадь 1 регион мочь пересекаться себя 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 регион площадь 15 поле площадь 1 минимальный количество плодородный участок регион покупка  2 покупатель платить общий площадь купить регион василий брать кредит покупка поэтому хотеть потратить деньги оптимальный  купить регион который максимальный соотношение плодородный земля общий площадь регион несколько регион одинаковый эффективность василий хотеть купить больший площадь пример 1 5 4 0 1 1 0 0 1 1 1 0 1 1 1 0 0 1 0 0 0 1 0 поле доступный покупка регион  0 02 2  площадь  9  плодородный участок он  7  эффективность   79  регион 3 14 3  площадь  6  оно  3  плодородный участок эффективность   36  79    36  поэтому василий стоить купить первый регион ответ  9  пример 2 5 3 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 эффективность регион одинаковый  оба полностью заполнять плодородный земля регион слева поэтому ответ  9  задача выглядеть вполне решать суть нужно определять граница каждый регион отдельный регион сравнивать отношение количество плодородный участок площадь они качество алгоритм поиск регион использовать например какуюто реализация depthfirst search breadthfirst search заодно добавление новый участок регион сохранять раздвигать граница регион выход сразу получать прямоугольник который вписывать плодородный участок  bfs реализация высоко массив good_spots добавлять плодородный участок  while good_spots  брать первый плодородный участок создавать регион     region_spots  good_spotspop  назначать заведомо невозможный значение max min inf подходить     max_x  1     max_y  1     min_x  n  2     min_y  m  2     while region_spots         x y  region_spotspop1  расширять граница регион участок оставаться вписывать         max_x  maxmax_x x         min_x  minmin_x x         max_y  maxmax_y y         min_y  minmin_y y   пытаться сделать шаг сторона проверка край опускать         for step_x step_y in 1 1 1 0 1 1 0 1 1 1 1 0 1 1 0 1             new_x  x  step_x             new_y  y  step_y  участок плодородный             if new_x new_y in good_spots  добавлять текущий регион                 regi",
    "tags": [
        "обучение программированию",
        "школа программирования",
        "алгоритмы",
        "разбор задач",
        "задачи для программистов",
        "задачи для собеседований",
        "задачи и решения"
    ]
}
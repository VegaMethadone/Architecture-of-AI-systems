{
    "article_id": "728938",
    "article_name": "Создание и тестирование процессора аннотаций и кодогенератора на KSP",
    "content": "первый  часть статья рассматривать подход обработка аннотация возможный генерация дополнительный исходный текст который использоваться мир java долгий время применяться также kotlin kotlinкод предварительно преобразовываться javaклассы занимать дополнительный время компиляция 2021 год становиться доступный новый плагин gradle который основывать непосредственный анализ исходный текст kotlin позволять генерировать код необходимость создание текстовой файл статья разбираться создавать процессор аннотация ksp протестировать первый важно отмечать версия kspплагина зависеть версия использовать компилятор kotlin поскольку учитывать грамматика язык номер версия kotlinкомпилятора указываться также версия плагин например поддержка проект kotlin 1820 устанавливать плагин версия 18201010 общий шаблон  конфигурация gradle выглядеть проект который использовать процессор аннотация plugins      kotlinjvm version 1820     application     idcomgoogledevtoolsksp version 18201010   group  techdzolotov version  10snapshot  repositories      mavencentral   dependencies      testimplementationkotlintest     ksp   идентификатор jar модуль процессор    taskstest      usejunitplatform   application      mainclasssetmainkt  создавать проект процессор аннотация подключать зависимость  symbolprocessingapi      implementationcomgoogledevtoolskspsymbolprocessingapi18201010 обработка исходный текст заниматься реализация интерфейс  symbolprocessor  основной метод  process создание экземпляр процессор  реализация  symbolprocessorprovider  package techdzolotov  import comgoogledevtoolskspprocessingresolver import comgoogledevtoolskspprocessingsymbolprocessor import comgoogledevtoolskspprocessingsymbolprocessorenvironment import comgoogledevtoolskspprocessingsymbolprocessorprovider import comgoogledevtoolskspsymbolksannotated  annotation class sampleannotation  class sampleannotationprocessorval environment symbolprocessorenvironment  symbolprocessor       override fun processresolver resolver listksannotated          return resolvergetsymbolswithannotationtechdzolotovsampleannotation indepth  falsetolist           override fun finish          environmentloggerinfoannotation processor is finished        class sampleannotationprovider  symbolprocessorprovider      override fun createenvironment symbolprocessorenvironment symbolprocessor  sampleannotationprocessorenvironment  symbolprocessorenvironment содержать информация среда выполнение получать  kotlinversion   compilerversion  список платформа проект  platforms  также обращаться генератор код  codegenerator  вывод логово  logger  также процессор принимать конфигурация options который определяться блок  ksp    buildgradle  команда  argname value  обработка код начинаться поиск символ подходящий аннотация использовать метод  getsymbolswithannotation   resolver  возможность дальнейший отбор например filterisinstance проверка тип обнаруживать объект либо получать определение класс метод свойство например  resolvergetdeclarationsfrompackage  использование итератор последовательный обход файл  resolvergetallfiles  поиск определение обнаруживать объект использовать паттерн  visitor  аналогично  java annotation processor  непосредственно работать значение итератор кодогенерация создавать файл каталог buildgeneratedkspmainkotlin   исходный текст создаваться environmentcodegenerator buildgeneratedkspmainresources   дополнительный ресурс мочь создавать environment правильный индексация нужно добавлять каталог список каталог исходный текст kotlin      sourcesetsmain          kotlinsrcdirbuildgeneratedkspmainkotlin          sourcesetstest          kotlinsrcdirbuildgeneratedksptestkotlin       запуск  ksp  быть использовать задача  kspkotlin  gradle исключать оптимизация отслеживание изменение зависимость задача сразу отключать кеш сборка добавлять отображение сообщение уровень протоколирование info gradlew kspkotlin nobuildcache info создавать простой вариант генерация  tostring  аннотировать класс предполагать аннотация быть применяться класс отмечать это  target  также выделять отдельный модуль определение аннотация использоваться процессор исходный код непосредственно процессор ksp определять аннотация наш случай использовать аргумент также мочь добавлять извлекать дальнейший итератор annotations находить определение класс функция поле package techdzolotovsamplekspannotation  targetannotationtargetclass retentionannotationretentionsource annotation class sampleannotation следующий действие хотеть выделять класс соответствующий аннотация избегать возможный ошибка повторный применение кодогенератор поскольку предел один запуск gradleзадачи  kspkotlin  дважды создавать файл использовать функциюрасширение  toclassname  который устанавливаться вместе вспомогательный библиотека преобразование тип  ksp  строковый название использоваться генерация код использование  kotlinpoet  подключать зависимость модуль процессор     implementationcomsquareupkotlinpoet1130     implementationcomsquareupkotlinpoetksp1130 реализовывать обработка находить класс подходящий аннотация исключение дублирование class sampleannotationprocessorval environment symbolprocessorenvironment  symbolprocessor      val processed  mutablelistofclassname      override fun processresolver resolver listksannotated          val declarations  resolvergetsymbolswithannotationsampleannotationclassqualifiedname indepth  false             filterisinstanceksclassdeclaration          declarationsforeach  declaration              val classspec  declarationastypelistoftoclassname             избегать двойной обработка аннотация             if processedcontainsclassspec                  processedaddclassspec                  быть генерировать код                               return declarationstolist       ksp  процессор обязательно должный выполнять генерация код например использоваться инициализация база данные запуск тестовый окружение выполнять анализ код например проверять правило именование тд наш случай хотеть создавать сгенерировать класс название который создаваться исходный класс префикс  annotated  сохраняться название тип поле основной конструктор  сначала определять название пакет класс понадобиться мы создание новый файл генерация код число определение название файл                 получать название пакет класс                 val packagename  classspecpackagename                 val classname  classspecsimplename                 val annotatedclassname  annotatedclassname                 val codefile  environmentcodegeneratorcreatenewfile                     dependencies  dependenciesfalse declarationcontainingfile                     packagename  packagename                     filename  annotatedclassname                     extensionname  kt                                  val writer  codefilebufferedwriter                 writerappendgenerated file                 writerflush                 writerclose переходить непосредственно создание код быть использовать  kotlinpoet  этот библиотека являться развитие проект  javapoet  позволять создавать использование builderов структурный единица код класс конструктор метод поле тд начинать создание пустой класс соответствующий название                 val generatedclass                      typespecclassbuilderannotatedclassnamebuild                 val file  filespecbuilderpackagename annotatedclassnamektaddtype                     generatedclass                 build                 filewritetowriter                 забывать сохранять буфер файл                 writerflush                 writerclose основной проект добавлять аннотировать класс package techdzolotovsampleksp  import techdzolotovsamplekspannotation  sampleannotation class userdataval loginstring val fullnamestring val idint подключать процессор ksp     kspprojectprocessor запуск gradle каталог  buildgeneratedkspmainkotlinpackageannotatedusernamekt  указание название пакет пустой класс название  annotateduserdata  добавлять генерация конструктор определение поле генера",
    "tags": [
        "kotlin",
        "codegen",
        "otus",
        "ksp"
    ]
}
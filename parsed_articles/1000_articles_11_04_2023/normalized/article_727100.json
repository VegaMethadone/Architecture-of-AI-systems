{
    "article_id": "727100",
    "article_name": "Сколько можно потратить на содержание собственного сервера Mastodon на AWS",
    "content": "около месяц содержать собственный однопользовательский сервер mastodon aws статья рассказывать сколько это обходиться     предисловие    начало нужно сказать пара слово вопервых работать aws должность solutions architect однако поскольку это личный проект запускать свой собственный аккаунт aws который плакать скидка сотрудник особый условие мой идея взгляд создание проект мой собственный необязательно отражать рекомендация инструкция мой работодатель    кроме заниматься этот проект достигать несколько цель вопервых просто хотеть узнавать mastodon настраивать небольшой собственный однопользовательский инстанс этот статья являться руководство управление сервер продакшенсреда тысяча пользователь это просто мой хобби менее знать многий интересовать подобный вещь поэтому надеяться информация оказываться полезный    несколько провайдер хостинг который платно настраивать быть управлять ваш собственный сервер mastodon это другой эксперимент сложный запутанный попытаться пойти свой путь быть менять маршрут показываться нужный просто хотеть содержать собственный сервер вероятно начинать провайдер хостинг      архитектура  писать  несколько пост  настройка mastodon почему останавливаться тот архитектура который выбирать тот пора коечто изменяться целое архитектура оставаться прежний       compute  инстанс elastic compute cloud ec2  t4gsmall  который запускать mastodon база данные postgressql redis   хранение  переходить статический образ amazon simple storage service s3 доставка использовать amazon cloudfront   рамка aws использовать множество другой мелкий сервис мониторинг изучение свой счет резервный копирование      затрата  момент написание статья проект потратить 5274 видно график ниже 32 сумма потратить первый день регистрация доменный имя  micahsocial  взгляд это дороговатый доменный имя очень хотеть хвастаться      вычесть оплата доменный имя регистратор который приходиться отдавать ежегодно потратить 2074 дополнительный сервис aws выходить рамка бесплатный тариф бесплатный пробный версия        никакой затрата compute 2024 год  важно упоминать приходиться тратиться еще compute хотя самый дело это видеть небольшой всплеск затрата compute первый день экспериментировать другой тип инстанс целое пока тратить compute это связанный выбирать я тип инстанс  graviton2 arm based t4gsmall  иметь  бесплатный пробный версия конец 2023 год  использование 750 часы месяц это значить завершение 2023 год мой инстанс начинать взымать почасовой оплата это происходить вариант       мочь начинать платить почасовой тариф ondemand 00168 час примерно 1226 месяц   мочь купить  compute or ec2 instance savings plan  вероятно поступать трехлетний тарифный план ec2 instance savings plan полный предоплата стоять 16556 равный 460 месяц это позволять использовать другой тип инстанс семейство решать выполнять апгрейд t4gmedium      упс затрата cloudwatch    наверно замечать всплеск затрата посередине показывать высоко график свой  пост мониторинг  говорить устанавливать инстанс amazon cloudwatch agent отслеживать ключевой метрика однако смочь отфильтровывать ненужный метрика поэтому оказываться cloudwatch отправляться полный пакет данные довольно дорого понимать это отключать агент разбираться вернуться он добавлять правильный конфигурация фильтр      ebs snapshots    это подробный график затрата хранилище снэпшот ebs snapshots течение месяц расти однако основание мой график бэкап рассчитывать выравниваться    приступать этот проект искать простой способ выполнение резервный копирование данные свой инстанс ec2 хотеться чегото простой настройка управление поэтому решать выбирать ebs snapshots курс существовать другой потенциально дешевый способ основное волновать создание бэкап данные храниться postgressql статический ресурс храниться s3 поэтому сам сервер находиться кодовый база конфигурация база данные    однако график создание снэпшот слегка чрезмерный проект создавать снэпшот каждый час каждый день каждый месяц ежечасный снэпшот утилизироваться 24 час ежедневный 30 день ежемесячный храниться примерно течение два год кроме выполнять резервный копирование тома инкрементальный бэкап объем нарастать довольно быстро изза данные который скоро нужный    просто делать бэкап сам база данные postgressql похожий график правильный блокировка база данные это проект будущее      слон s3    самый существенный затрата данный момент сравнимый затрата ebs snapshots  это расход s3 они сложно разбираться постараться    несколько заметка мой настройка s3       mastodon хранить ваш собственный загружать статический ресурс ресурс аккаунт метка который подписывать понятно решать делать копия однако это скоро источник большой объем сохранять данные   параметр mastodon настройка ограничение этот кэшировать ресурс пока включать любопытно узнавать какой объем данные говорить примерно 180 гб   касаться сам хранение mastodon загружать ресурс помощь s3 standard tier находить способ изменять этот однако  отправлять issue  сообщать возможность неплохо добавлять конфигурация это позволять загружать ресурс напрямую  intelligenttiering  взгляд иметь смысл   настраивать  lifecycle policy  спустя день перемещать мой данный s3 intelligent tiering это немного спорный решение поэтому нужно подождать посмотреть обертываться s3 intelligenttiering должный автоматически перемещать мой данный один tier основание паттерн доступ однако учитывать объект мало 128 кб взиматься небольшой оплата мониторинг данные понимать оправдывать потребоваться несколько месяц   скрытый затрата хранение данные mastodon s3 являться requests запрос наблюдать сорокпятьдесят тысяча запрос день основной это запрос put запрос get день происходить мало два тысяча поначалу это удивлять разбираться работать mastodon понимать это логичный думать это многое связанный настроенный я  relay  количество аккаунт метка который подписывать это определенно стоять следить глубоко изучать пока настраивать  amazon s3 storage lens  расширять конфигурация позволять легкость исследовать аспект активность мой данный s3    целое мой затрата хранение s3 первый 30 день составлять 9 это ожидать кажется наверняка существовать возможность снижать затрата последующий месяц передавать свой ресурс  amazon cloudfront  иметь  щедрый бесплатный тариф  который пока стоить      бюджет неожиданный расход  дальнейший планировать контролировать весь помощь  aws budgets       поддерживать собственный сервер mastodon aws вообще угодно aws сделать одолжение обращать внимание aws budgets настраивать настраивать различный пороговый показатель отправка алерт электронный почта случай превышение бюджет месяц мой настройка достаточно простой устанавливать бюджет 50 месяц алерт 50 25 потратить 25 приходить алерт почта    самый дело это расточительный хотеться идеал хотеть затрата мало 20 течение год пока находиться свой сервер бесплатный тариф это сделать урезать хранение данные s3 снижать количество снэпшот ebs snapshots изменять принцип создание пока несколько месяц оставлять все получать данный анализ прежде вносить новый изменение    идеальный мир здорово затрата весь это суммарно превышать 25 месяц это сильно дорого синий галочка twitter blue     telegramканал розыгрыш приз новость it пост ретроигра",
    "tags": [
        "ruvds_перевод",
        "mastodon",
        "open source",
        "децентрализованные сети",
        "распределенные системы"
    ]
}
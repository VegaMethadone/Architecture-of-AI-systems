{
    "article_id": "725984",
    "article_name": "Многомодульный BDSM. Бутылочные горлышки среди модулей",
    "content": "часто бывать разбиение проект модуль скорость сборка сильно низкий ожидать причина мочь разный кривой настройка gradle неподходящий железо сегодня хотеть разбирать один причина  бутылочный горлышко среди модуль они бороться горлышко такой простой русский народный слово бутылочный горлышко это  узкий место  представитель высокоинтеллектуальный высоковыпендрежный класс программист привыкать использовать английский аналог  bottleneck буквальный перевод который значит  бутылочный горлышко самый дело просто вызывать улыбка слово горлышко както непосредственно подетски оно звучать ладно вообще модуль становиться узкий место аля бутылочный горлышко все просто допускать модуль который просто долго собираться оно просто код все проблема другой модуль мочь зависеть значит начинать собираться пока заканчивать это значит попробовать запускать параллельный сборка наш проект допускать три gradle worker увидеть простой момент простой gradle workerу нечего заниматься ожидать сборка наш бутылочный горлышко следствие использовать 100 потенциальный ресурс сборка собираться долго мочь  многие внедрять многомодульность ради скорость сборка такой подстава сторона какието простой вроде немного такто оно захотеть добиваться еще больший уменьшение время сборка попробовать использовать 6 gradle worker увидеть печальный картина половина время gradle workerы быть простаивать это шутка использовать всегото 6 gradle worker наш время 12 16 поточный процессор локальный машина редкость хотеться утилизировать мощь 6 gradle worker забивать максимум 70 говорить ci 64 128 поток это норма итог написать высоко изза бутылочный горлышко время сборка мочь суть равноценный увеличение время сборка значит разработчик долго разрабатывать значит теряться деньги никто любить терять деньги логично както бороться этот паразит начинать както находить поиск бутылочный горлышко итак какой вариант google частный сыщик объявление столб глупый шутка вариант ручной точно глазной визуальный минус  низкий точность сказать глаз очень быстро плюс  требовать никакой подготовка автоматизированный суть антипод ручной плюс  высокий точность высокий скорость минус  кодить точно это минус ручной способ весь способ основываться  gradle scan  это встроенный возможность gradle генерировать очень очень подробный отчет сборка сгенерироваться нужно просто добавлять параметр scan например gradlew assembledebug scan итог прийти ссылка отчет который необходимо активировать отчет интересовать раздел  timeline который странно мы нужный timeline выглядеть примерно видеть каждый gradle workerов качество горизонтальный линия данный случай 8 также увидеть заниматься каждый gradle worker любой момент время серый цвет обозначать какиелибо tasks это простой  такой отдаление мало разглядеть поэтому приближать первый блок простой благо gradle scan позволять это сделать подробно разглядеть сам простой причина далее видеть определенный момент время какойлибо модуль собираться одиночество смело обвинять блокировать сборка значит являться бутылочный горлышко провожать экзекуция далее заново начинать поиск сразу оговаривать важный момент полностью простой избавляться быть микромомент ктото когото блокировать ктото когото ждать поэтому стоить сильно упарываться достигать показатель 510 простой останавливаться также нужно понимать достигать идеальный результат четыре ваш gradle workerа весь время чемто занятый просто запускать проект 16ти gradle workerах разрушать иллюзия итог половина время занимать простой очень долго повышать количество gradle worker долго пытаться бороться горлышко просто количество gradle worker отталкиваться количество ваш модуль ваш железо большинство компания вряд понадобиться 16 штука способ подходить мало 100 модуль 57 разработчик просто квартал находить самый злостный бутылочный горлышко исправлять модуль сильно разработчик 25 следствие проблема бутылочный горлышко быть возникать часто бить больно простой 60 секунда год накапать приличный количество впустую потратить время значит это дело както автоматизировать автоматический способ суть мы просто автоматизировать тот действие совершать ручной способ вообще автоматизировать наблюдать начинать это делать стоять мерить вопервых стоить строить автоматизация вокруг длительность сборка модуль факт модуль собираться долго еще означать являться бутылочный горлышко кто зависеть зависеть например app итог блокировать никто спокойно собираться параллельно другой модуль вовторых стоить строить автоматизация вокруг количество связь модуль показываться наш модуль зависеть допускать 20 другой модуль плохой выступать бутылочный горлышко это какойнибудь corenetwork который просто выступать фасад библиотека связывать сеть собираться сила 2 секунда факт прямой заблокировать gradle workerы параллельно мочь спокойный режим собираться какиенибудь coredatabase corelocation сам это действительно рабочий показатель который мочь многое рассказывать проблема ваш модуль наш уголовный дело бутылочный горлышко это лишь косвенный улика поэтому сначала посмотреть интересный мы предоставлять gradle мочь это сделать начинать визуализация данный действо закреплять это код визуализация вспомнить мы показывать timeline gradle scan несколько gradle worker который определенный момент время заниматься какойто задача связанный отдельный модуль глаз легко увидеть простой мочь увидеть померить сколько время gradle worker простаивать видеть виновник простой информация который мы предоставлять gradle помогать мы сделать это автоматически мы давать gradle gradle предоставлять мы время начинать работа каждый task также предоставлять мы время конец task благодаря это мочь вычислять продолжительность каждый task суть это весь информация который мы понадобиться немного возникать вопрос  ради рисовать диаграмма серьезно ответ понятно давать они делать мы это делать двумерный массив скоро список список удобно главный список размер равный количество секунда время сборка длиться сборка 87 секунда значит список 87 элемент вложенный список быть модуль который собираться данный секунда попытаться это визуализировать например два gradle worker это выглядеть както весьма похоже обычный timeline разбивать сегмент помощь этот данные научаться вычислять бутылочный горлышко пробежаться главный список данный секунда количество собирать модуль маленький 2 количество gradle worker начислять единственный модуль 1 балл суть 1 балл модуль означать данный момент собираться остальной ждать значит простой ресурс 1 секунда вряд использовать gradle worker както усложнять алгоритм поэтому рассматривать пример аж три gradle worker основной логика оставаться прежний обрастать жирок все бежать главный список выставлять каждый модуль список количество балл равный общий количество gradle worker минус количество занимать gradle worker конец поделить результат количество занимать gradle worker понимание сделать сверхсложный формула wa  wu  wu wa этот общий количество gradle worker wu количество занимать gradle worker итог видеть насколько каждый модуль вносить свой вклад простой секунда например работать gradle worker три каждый модуль зачислять 05 секунда работать модуль получать аж 2 секунда алгоритм показываться очень точный оно высокий точность важный итоговый цель  отсортировывать модуль вредность выявлять самый вредный модуль модуль приводить простой полсекунды исправление ситуация потратить время смочь выигрывать это выглядеть точка зрение код код начало мы както доставать необходимый данные gradle это сделать внутри кастомный  gradle plugin  доставать данные gradle мы предоставлять такой штука  buildservice  который мочь имплементировать  operationcompletionlistener  public interface operationcompletionlistener      void onfinishfinishevent event  метод onfinish приходить нужный мы информация каждый завершать task мочь слеплять собственный data класс нужный мы поле data class taskexecutiondata    val projectname string    val taskname string    val starttime long    val endtime long  projectname  имя модуль taskname  имя task starttim",
    "tags": [
        "gradle",
        "модули",
        "bottlenecks",
        "многомодульность",
        "многомодульность в android",
        "многомодульный проект",
        "android"
    ]
}
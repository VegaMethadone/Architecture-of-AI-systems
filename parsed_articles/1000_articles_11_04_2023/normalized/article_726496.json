{
    "article_id": "726496",
    "article_name": "Как написать простое консольное приложение с аргументами на Java",
    "content": "данный пост хотеть рассказывать  создавать простой консольный приложение java использование библиотека args4j давно давать задание написать консольный утилита помощь библиотека парсинг аргумент выбирать args4j хотеть поделиться свой опыт полный текст задание  разрабатывать консольный утилита который соединять заданный командный строка входной текстовой файл выходной указывать ключ out ключ u делать обратный операция принимать входной файл разбивать несколько выходной файл являться текстовый придумывать формат позволять запоминать имя входной файл находить граница command line tar u filenametxt tar file1txt file2txt  out outputtxt сначала подключать зависимость  использовать maven простенько   вставлять это свой pomxml dependencies dependency       groupidargs4jgroupid       artifactidargs4jartifactid       version233version dependency  реализовать парсинг аргумент создавать класс parser добавлять туда два переменный список остальной аргумент  public class parser     optionname  u     private file u     optionname  out     private string out      argument     private string arguments  аннотация сверху давать понимать библиотека args4j хранить аргумент  значение опция всякий  общий прямой ленивый сложно нужно осмысливать  получать консоль  public static void mainstring args          new parserrunargs           private void runstring args          cmdlineparser parser  new cmdlineparserthis         try              parserparseargumentargs             if arguments  null  out  null  u  null  out  null                  systemerrprintlnошибка ввод аргумент                 systemerrprintlntar опция аргумент                 systemerrprintlnnпример tar u filenametxt n tar file1txt file2txt out outputtxt                 throw new illegalargumentexception                          if out  null                  new delimitertarargumentssplit  out              else                  ifunull  objectsrequirenonnulluexists                      throw new ioexceptionпапки файл существовать                                   new delimitertaru                        catch cmdlineexception  ioexception e              systemerrprintlnegetmessage             systemexit1               данный кусочек основное обходиться самый популярный комбинация клавиша программист  попробовать часть разжевывать начало стоить понимать  мой проверка мочь подходить 9 строчка скоро приходиться переделывать просто проверять правильно пользователь вводить аргумент  смотреть  далеко они делать опция out активировать идти часть код public void tarstring arguments string out throws ioexception cmdlineexception          file f  new fileout         filewriter writer         stringbuilder builder         if fcreatenewfile              writer  new filewriterf             for string argument  arguments                  ifnew fileargumentexists                      filereader fr  new filereaderargument                     bufferedreader reader  new bufferedreaderfr                     builder  new stringbuilder                     int countlines  0                     string temp                     while temp  readerreadline  null                          builderappendtempappendn                         countlines                                          writerwriteargument     countlines  n                     writerwritebuildertostring                 else                     systemoutprintlnневерный аргумент  argument  n пример text1txt text2txt out text3txt                                            writerclose          else              throw new ioexceptionне возможно создавать новый файл               предварительно создавать новый класс delimiter написать два простенький функция думать  комуто это сильно пригождаться  принцип сложно  рассказывать быть второй метод просто перегружать метод tar  public void tarfile u throws ioexception          filereader fr  new filereaderu         bufferedreader reader  new bufferedreaderfr         string buf  readerreadline         filewriter writer         ifbufmatchesazaz09_ 09              while buf  null                  string data  buftrimsplit                  string name  data0                 int size  integerparseintdata1                 file f  new filename                 if fcreatenewfile                      stringbuilder builder  new stringbuilder                     writer  new filewriterf                     for int i  0 i  size i                          builderappendreaderreadlineappendn                                          writerwritebuildertostring                     writerclose                  else                      systemoutprintlnфайл существовать                                  buf  readerreadline                      else             readerclose             throw new ioexceptionневерные данные  нужный файл                  readerclose      этот функция простой  основной идея  файл соединяться метод писать название файл который добавлять  число строчка файл  файл нужно разделять  метод считывать название файл количество строка который нужно бездумно считывать далее пока файл заканчиваться оставаться самый главное  нужно както собирать jar файл  запускать консоль путь  сложный правильный  второй простой  иметь общий хороший программа первый способ нужно прописывать зависимость manifest  пока способ сыроватый  второй  помощь плагин  это нужно прописывать зависимость pom dependencies dependency       groupidorgapachemavenpluginsgroupid       artifactidmavenassemblypluginartifactid       version350version dependency    это нужный прописывать plugins pom  plugin         groupidorgapachemavenpluginsgroupid         artifactidmavenassemblypluginartifactid         version350version         configuration           archive             manifest               mainclassorgspbstugorchatovraparsermainclass             manifest           archive           descriptorrefs             descriptorrefjarwithdependenciesdescriptorref           descriptorrefs         configuration         executions           execution             idassembleallid             phasepackagephase             goals               goalsinglegoal             goals           execution         executions       plugin надеяться  код  который написать высокий хотя частично понятный  загуглить   сделать мочь подходить конец пост  надеяться комуто смочь помогать программист мягко говорить начинать  открывать предложение  готовый проект   источник   args4j",
    "tags": [
        "args4j",
        "java",
        "консольное приложение",
        "консольная утилита",
        "аргументы командной строки"
    ]
}
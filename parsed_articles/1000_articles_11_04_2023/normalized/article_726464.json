{
    "article_id": "726464",
    "article_name": "Алерты в микросервисной архитектуре",
    "content": "материал постараться описывать способ организация алерт микросервисный архитектура внезапамятный время невыходить последний серия тяжкий алерт часто храниться водный место быть icinga zabbix tick stack илитотже самый prometheus вэт свой плюс легко отслеживать изменение грепнуть нужный алерт накидать ci далее нокогда речь заходить омикросервисный архитектура бизнес логика представлять отдельный сервисамибылоба логичный держать бизнес алертинг вкод микросервис  чтож давать попробовать реализовать подход впредставленный пример использоваться система мониторинг prometheusalertmanager развертывать вk8s микросервис работать вk8s нотификация быть слать вslack итак приступать хранить тело алерт рядом смикросервис воспользоваться ресурс который называться  prometheusrule   добавлять вvalues наш микросервис нужный значение создавать правило вдиректория схельм чарт  if valuesprometheusruleenabled   apiversion monitoringcoreoscomv1 kind prometheusrule metadata   labels      include msawesomelabels   indent 4      release  valuesprometheusrulerelease defaultkubeprometheusstack    name msawesomerule spec   groups      name msawesomealerts       rules         alert msawesomealert          expr test_metrickubernetes_pod_namemsawesome  1          for 20s          labels            severity critical            product  valuesalert_infoproduct           annotations            description test header in msawesome alert            summary this is test alert from msawesome  end  далее устанавливать настраивать prometheus alertmanager воспользоваться чарт kubeprometheusstack настраивать отправка алерт основа label product msawesomek8schartyml   alertmanager configuration directives  ref httpsprometheusiodocsalertingconfigurationconfigurationfile       httpsprometheusiowebtoolsalertingroutingtreeeditor  alertmanager   enabled true    api that prometheus will use to communicate with alertmanager possible values are v1 v2      apiversion v2    alertmanagerspec     externalurl httpprometheusurlforourmsprometheusalertssearch     service account for alertmanager to use    ref httpskubernetesiodocstasksconfigurepodcontainerconfigureserviceaccount      serviceaccount     create true     name      annotations      configure pod disruption budgets for alertmanager    ref httpskubernetesiodocstasksrunapplicationconfigurepdbspecifyingapoddisruptionbudget    this configuration is immutable once created and will require the pdb to be deleted to be changed    httpsgithubcomkuberneteskubernetesissues45398      poddisruptionbudget     enabled false     minavailable 1     maxunavailable     config     global       resolve_timeout 5m       slack_api_url httpshooksslackcomservicesawesomelinkforalertschannel     templates        etcalertmanagerconfigtmpl     route       group_by alertname cluster namespace       group_wait 30s       group_interval 1m       repeat_interval 1m       receiver blackhole       routes          receiver defaultreceiver           matchers              severity  critical           continue true          receiver msawesomereceiver           matchers              product  msawesome              severity  warningcritical           continue true      receivers        name blackhole        name defaultreceiver        name msawesomereceiver         slack_configs            channel  index index alerts 0labels slack_channel_monitoring              color  if eq status firing 000080 else good end              title  if eq status firing scream else heavy_check_mark end   status  toupper   annotationsdescription              text  annotationssummary    tplconfig false     alertmanager template files to format alerts    by default templatefiles are placed in etcalertmanagerconfig and if    they have a tmpl file suffix will be loaded see configtemplates above    to change add other suffixes if adding other suffixes be sure to update    configtemplates above to include those suffixes    ref httpsprometheusiodocsalertingnotifications         httpsprometheusiodocsalertingnotification_examples       templatefiles   prometheus   ingress     hosts    prometheusurlforourms   prometheusspec     externalurl httpprometheusurlforourms заливать хельм чарт прометей helm upgrade install kubeprometheusstack f msawesomek8schartyml prometheuscommunitykubeprometheusstack n monitoring заливать чарт смикросервис внеймспейс заливать микросервис должный появляться ресурс prometheusrules сописание который указывать выше именно ресурс должный витог подымать prometheus идти поурл prometheus вовкладка alerts должный появляться наш алерт вслучай неслучаться нужно проверять лейбл аименно label release значение должно совпадать значение который указывать вprometheus впараметр ruleselector несовпадать prometheus просто ненаходить это правило генерировать ошибка метрика поменять значение ждать пока алерт поменять свой состояние alertmanager настраивать правильно наслаждаться получать результат ps винтернет статья  какпрокидывать канал изтел алерт опция честно нетестить новариант выглядеть рабочий поэтому проверять написать результат плюсик вкарма",
    "tags": [
        "мониторинг",
        "бизнес алерты",
        "prometheus monitoring",
        "микросервисы",
        "alertmanager"
    ]
}
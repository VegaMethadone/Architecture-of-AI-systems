{
    "article_id": "721788",
    "article_name": "Выражение Hibernate запросов в виде типо‑безопасных Java-потоков",
    "content": "статья узнавать расширение jpastreamer quarkus упрощать выполнение типобезопасный запрос hibernate излишний многословность сложность насколько выразительный конструктор jpa criteria настолько многословный часто бывать  jpa запрос api интуитивный использование особенно новичковва экосистема quarkus panache являться частичный решение этот проблема использование hibernate менее ловить часто приходиться жонглировать вспомогательный метод panache предварительно сконфигурировать  перечисление raw строка  составление любой отличный простой запрос сказать просто неопытный нетерпеливый наоборот признавать api идеальный вызывать затруднение использование такой образ пользовательский опыт написание jpa запрос улучшать направление введение один оставаться недостаток являться rawстроки свой природа  типобезопасный это означать ide отказывать помощь авто завершение код хороший случай желать удача сторона quarkus позволять перезапускать приложение доля секунда вынести быстрый вердикт мой кодуй ничто сравниться искренний радость неподдельный удивление составлять рабочий запрос десятый пятый попытка исходить создавать библиотека jpastreamer открытый исходный код сделать процесс написание hibernate запрос интуитивный менее трудоемкий оставлять нетронутый существующий кодовый база достигать цель позволять выражать запрос мочь выражать вид стандартный поток javaпосле выполнение jpastreamer переводить потоковый конвейер hqlзапрос эффективный выполнение создавать никакой объект нерелевантный результат запрос приводить пример некоторый произвольный база данные существовать таблица имя person  представлять приложение hibernate следующий стандартный сущность entity tablename  person public class person         id     generatedvaluestrategy  generationtypeidentity     columnname  person_id nullable  false updatable  false     private integer actorid      columnname  first_name nullable  false columndefinition  varchar45     private string firstname      columnname  last_name nullable  false columndefinition  varchar45     private string lastname      columnname  created_at nullable  false updatable  false     private localdatetime createdat   getters for all fields will follow from here  получать person  идентификатор 1 помощь jpastreamer нужный это выполнять следующий код applicationscoped public classpersonrepository       persistencecontext     entitymanagerfactory entitymanagerfactory      private final jpastreamer jpastreamer      public personrepository entitymanagerfactory entitymanagerfactory  jpastreamer  jpastreamerofentitymanagerfactory 1           override     public optionalperson getpersonbyidint id          return thisjpastreamerfrompersonclass 2             filterpersonpersonidequalid 3             findany          1 инициализировать jpastreamer один строка базовый jpaпровайдер обрабатывать конфигурация бд 2 источник поток являться таблица person  3 операция фильтрация обрабатываться предложение sql  where  условие выражаться типобезопасный образ помощь предикат jpastreamer подробно сказать далее несмотря выглядеть jpastreamer работать весь объект person  конвейер оптимизировать один запрос данный случай select     person0_person_id as person_id1_0_     person0_first_name as first_na2_0_     person0_last_name as last_nam3_0_     person0_created_at as created_4_0_ from     person person0_ where     person0_person_id1 такой образ создаваться объект person  соответствующий критерий поиск далее рассматривать сложный пример который выполняться поиск объект  person  симя заканчиваться фамилия начинаться б результат поиск сортироваться первый очередь имя затем фамилиидалый решать применять смещение 5 исключая первый пять результат ограничивать общий количество результат 10 конвейер поток решение задача listperson list  jpastreamerstreampersonclass filterpersonfirstnameendswithaandpersonlastnamestartswithb 1 sortedpersonfirstnamecomparatorthencomparingpersonlastnamecomparator 2 skip5 3 limit10 4 collectcollectorstolist 1 фильтр комбинировать оператор andor 2 простой фильтрация один несколько свойство 3 пропускать первый 5 результат поиск 4 возвращать 10 человек контекст запрос потоковый оператор filter sort limit skip иметь естественный отображение который делать результирующий запрос выразительный интуитивно понятный чтение оставаться компактный запрос переводиться jpastreamer следующий оператор hql select     person0_person_id as person_id1_0_     person0_first_name as first_na2_0_     person0_last_name as last_nam3_0_     person0_created_at as created_4_0_ from     person person0_ where     person0_first_name like      and person0_last_name like  order by     person0_first_name asc     person0_last_name asc limit   работать jpastreamer это выглядеть простоно это работаетjpastreamer использовать процессор аннотация формирование метамодель время компиляциион проверять класс отмечать стандартный аннотация jpa entity  каждый сущность  fooclass  создаваться соответствующий класс   fooclass создавать класс представлять атрибут сущность поле использовать формирование предикат вид  userfirstnamestartswitha  который мочь интерпретировать оптимизатор запрос jpastreamer стоить повторять jpastreamer изменять нарушать существующий кодовый база просто расширять api обработка потоковый запрос java установка расширение jpastreamer jpastreamer устанавливаться любой другой расширение quarkus помощь зависимость maven dependency groupidioquarkiversejpastreamergroupid artifactidquarkusjpastreamerartifactid version100version dependency добавление зависимость перестраивать приложение quarkus запускать процессор аннотация jpastreamer установка завершать сгенерировать поле появляться каталог  targetgeneratedsources  узнавать последний символ  имя класс например personclass примечание  jpastreamer требовать наличие базовый jpaпровайдера например hibernate причина jpastreamer нуждаться дополнительный настройка поскольку интеграция база данные обеспечиваться jpaпровайдером jpastreamer panache любой поклонник panache замечать jpastreamer разделять некоторый цель panache упрощать многий распространять запрос менее jpastreamer отличаться вселять уверенность запрос благодаря свой типобезопасный потоковый интерфейс однако никто приходиться выбирать поскольку panache jpastreamer прекрасно работать вместе друг друг примечание  пример приложение quarkus  который использоваться jpastreamer panache момент написание статья jpastreamer поддерживать шаблон active record panache поскольку полагаться стандартный jpa сущность создание свой метамодель вероятно близкий будущее это изменяться резюме jpa целое hibernate значительно упрощать доступ приложение база данные api создавать ненужный сложность помощь jpastreamer мочь использовать jpa сохранять кодовый база чистый удобный сопровождение",
    "tags": [
        "quarkus",
        "hibernate",
        "stream",
        "sql",
        "apache maven"
    ]
}
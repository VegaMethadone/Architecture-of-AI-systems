{
    "article_id": "726064",
    "article_name": "Автоматизируем тестирование микросервисов с REST-assured и Kotlin + Allure",
    "content": "все начинаться стого чтоперед мы поставлять задача покрывать тесто наш сервис длямикросервисный платформа tot pyramid который развивать последний год мыбывать вправе выбирать стек технология самостоятельно данный тест должный запускаться вci каждый присоздание мерджреквест проверять чтоизменение несломать выбор пасть наrestassured хотеться писать тест намодный молодежный kotlin вданный статья хотеть поделиться опыт написание автотест наrestassured  kotlin статья непретендовать наrocket science вней приводить простой пример основной принцип тестирование api который применяться унас вtot systems поэтому искать инструмент дляпокрытие api автотест приэт хотеть писать наkotlin этот статья длявас restassured restassured  довольно популярный javaбиблиотека длятестирование rest api уней подробный документация пример использование поддержка kotlin функцииобертка длянаписание тест вформат givenwhenthen увас стоять задача автоматизировать тест длявашего микросервис restassured вполне справляться сэта задача тестовый проект дляпример написать небольшой  сервис котиков   скачать запускать gradle эндпойнт описывать втаблица низко запрос действие get catid получать кот id get cats получать кот post cat создавать кот delete catid удалять кот put catid обновлять информация кот пример тесто быть использовать junit 5 jackson assertj gradle также allure генерация отчет впример стесто наgithub представлять структура проект мочь взять ее заоснова припроектирование свой тестовлибо изменять она подсвои задача дляначала создавать gradle проект добавлять базовый зависимость вфайл  buildgradlekts hidden text import orgjetbrainskotlingradletaskskotlincompile  plugins      kotlinjvm version 1610     idioqametaallure version 281     application   group  ruorghabr version  100  repositories      mavencentral   val junitversion  590 val restassuredversion  511 val jacksonversion  2133 val allureversion  2190  dependencies       testimplementationorgjunitjupiterjunitjupiterapijunitversion     testimplementationorgjunitjupiterjunitjupiterparamsjunitversion     testruntimeonlyorgjunitjupiterjunitjupiterenginejunitversion      implementationiorestassuredrestassuredrestassuredversion     implementationiorestassuredjsonpathrestassuredversion     testimplementationiorestassuredkotlinextensionsrestassuredversion      implementationcomfasterxmljacksoncorejacksonannotationsjacksonversion     implementationcomfasterxmljacksoncorejacksoncorejacksonversion     implementationcomfasterxmljacksoncorejacksondatabindjacksonversion     implementationcomfasterxmljacksonmodulejacksonmodulekotlinjacksonversion     implementationcomfasterxmljacksondatatypejacksondatatypejsr310jacksonversion      implementationioqametaallureallurerestassuredallureversion     testimplementationioqametaallureallurejunit5allureversion      testimplementationorgslf4jslf4jsimple200     implementationcomtypesafeconfig142      implementationorgassertjassertjcore3231    val allureconfig  allure      configuration  testimplementation     version  allureversion     autoconfigure  true     aspectjweaver  true     clean  true     usejunit5          version  allureversion        taskswithtypetest      allureconfig     usejunitplatform     systempropertiesport  propertiesport     systempropertiesurl  propertiesurl   taskswithtypekotlincompile      kotlinoptionsjvmtarget  18  файл  gradleproperties  указывать ip адрес порт сервис hidden text kotlincodestyleofficial urlhttp127001 port9009 также стоить создавать объект  config  получение системный переменная который быть подтягиваться файл  gradleproperties  hidden text object config      val url string  systemgetpropertyurl     val port int  systemgetpropertyporttoint  создавать базовый класс откоторогий быть наследоваться тест  basetest hidden text testinstancetestinstancelifecycleper_class open class basetest       beforeall     fun setup           restassuredfiltersallurerestassured            afterall     fun teardown          restassuredreset        вэт класс задавать основной конфигурация который использовать длявсех запрос также стоить создавать объект  specs  дляразличный спецификация hidden text object specs       private val logconfig  logconfiglogconfigenableloggingofrequestandresponseifvalidationfailslogdetailall     private val config  restassuredconfigconfiglogconfiglogconfig      val requestspec requestspecification  requestspecbuilder         setbaseuriconfigurl         setportconfigport         addheaderaccept applicationjson         setcontenttypecontenttypejson         setconfigconfig         build      val responsespec responsespecification  responsespecbuilder         loglogdetailbody         build   длясоздание кот нужно указывать 2поля имя порода поэтому создавать data класс hidden text jsonincludejsonincludeincludenon_null data class cat     val id int  null     val name string     val breed string  также быть десериализовывать наш респонс вобъект делать проверка нечерез синтаксис jsonpath асравнивать поле объект дляэтого написать функциюрасширение дляvalidatableresponse азаодно дляresponse hidden text функциярасширение преобразование тело ответ класс inline fun reified t validatableresponseextractas t      return thisextractbodyastclassjava   функциярасширение преобразование тело ответ класс inline fun reified t responseextractas t      return thisthenextractbodyastclassjava  ожидать чтовреспонс помимо указанный поле вернуться id котик объект длядесериализация выглядеть hidden text data class catresponse     val id int     val name string     val breed string  часто быть использовать один теж запрос например добавление котиков встречаться втест регулярно поэтому иметь смысл выносить запрос вфункциишаг пример hidden text stepдобавление котик fun addcatcat cat response      return given          specrequestspec      when          bodycat         postcat      then          specresponsespec      extract          response       длясоздание котик достаточно создавать экземпляр класс cat вызывать функция передавать нужный кот вней  addcatcat  написать простой тест насоздание котик hidden text epicкотик featureдобавление котик class addcattest  basetest       test     severityseveritylevelblocker     displaynameпроверка респонс добавление котик сервис     fun addsimplecat          val cat  catname  vasiliy breed  iii  ben         when              addcatcat          then              statuscode201             val catresponse  extractascatresponse             assertthatcatresponsenameisequaltocatname             assertthatcatresponsebreedisequaltocatbreed                    test     severityseveritylevelblocker     displaynameпроверка респонс добавление котик сервис v2     fun addsimplecatv2          val cat  catname  vasiliy breed  iii  ben         val catresponse  addcatcatextractascatresponse         assertall              assertthatcatresponsenameisequaltocatname               assertthatcatresponsebreedisequaltocatbreed                  каквидеть убирать блок given авовтор пример полностью отходить отструктура givenwhenthen это нужный добавлять тест наполучение котик hidden text epicкотик featureполучение котик class getcattest  basetest       test     severityseveritylevelnormal     displaynameполучение котик     fun getsimplecat          val cat  catname  plotva breed  ii  rag         val catid  addcatcatgetid         when              getcatcatid          then              statuscode200             val catresponse  extractascatresponse             assertthatcatresponsenameisequaltocatname             assertthatcatresponsebreedisequaltocatbreed                каквидеть добавление котик десериализовать респонс вобъект вэт пример мы достаточно id котик написать один функциюрасширение дляудобство hidden text функциярасширение получение id тело ответ fun responsegetidpath string  id int      return thisjsonpathgetintpath  такой образ переписывать строчка val catid  addcatcatextractascatresponseid val catid  addcatcatgetid удаление обновление информация окотика встатья",
    "tags": [
        "qa automation",
        "kotlin",
        "rest assured",
        "restful",
        "test automation",
        "rest api",
        "тестирование",
        "тестирование api",
        "restful api testing",
        "qa"
    ]
}
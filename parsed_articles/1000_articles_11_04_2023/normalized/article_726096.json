{
    "article_id": "726096",
    "article_name": "Что такое менеджер пакетов, и в чем разница YARN, NPM, PNPM?",
    "content": "очень хотеться пошутить пропакет спакет нонет статья продругий дляначало давать разбираться почему написать кто можетбывать полезный такой фронтенд который использовать стандартный менеджер интересоваться другой внезапно захотеться чегото новенький приходиться прочитывать один статья собирать воедино информация выбирать подходящий вариант бэкенд который переходить nodejs джуна который пакет шутка слышать вообще полезть пакет верить разработчик далекий бизнесов задача толк немного должный понимать выбирать технология строить архитектура продукт конечный итог работать хороший образ например вместо реактивный фреймворок использовать нативный js логичный предполагать скорость разработка низкий значит конечный продукт  сильно дорого приносить польза бизнес такой небольшой изменение допускать крупный аутсорс компания называть малабар малабар замечательно клиент разработчик большой стэк сотрудник привыкать юзать разный технология комуто нравиться синтаксис npm комуто душа yarn третий вообще pnpm молиться третий малабар отправлять вотпуск лететь поглядеть надубай нопроектто немогать ждать комуто приходиться заменять счастливчик напроект переводить другой разработчик который использовать npm натыкаться нановый длясебать технология скотора рано нерабатывать начинаться самый интересный проблема мочь всплывать намомент установка зависимость чтоделать заменять существовать технология надругий выход проект чужой чтовитог разработчик приходиться тратить дополнительный время наизучение новый технология приступать кзадача речь нетолько оменеджер пакет речь вцелое проунификация различный технология врамок компания навсех проект использоваться идентичный основной технология процесс онбординг сокращать доминимум аэто кстати плюсик длябизнес какой пакет столько говорить вnodejs экосистема множество инструмент дляуправление зависимость такой какрак yum rpm другой наиболее популярный npm yarn pnpm носначала проходиться побазовый вещь чтовообще такой пакет менеджер пакет далее тот знать мочь скипать переходить ксравнение впроект разработчик невсегда использовать собственный код насам дело вообще редко использовать собственный код особенно принаписание сложный логика существовать множество замечательный готовый решение который трудиться другой разработчик всемирноизвестный организация решение доступный весь пакет зависимость это илинесколько файл аккуратно объединять вместе который загружать изреестр пакет такой пакет водный проект можетбывать использовать очень грубо говорить пакет это кусок код загружать винтернет другой разработчик каждый пакет включать всебать пакет транзитивный это пакет откоторых зависеть другой пакет наизображение находиться снизу отосновной пакет пакет менеджер они разница первый менеджер становиться npm появляться вянварь 2010года ибыл доступный все разработчик довыпуск npm установка зависимостейбыл неавтоматизировать приходиться загружать библиотека изрепозиторий копировать файл впроект вручную непробовать сказать это достаточно трудоемкий процесс который занимать время особенно работать напроект множество зависимость npm значительно упрощать жизнь разработчик соответственно менеджер пакет это инструмент который помогать мы устанавливать зависимость впроект автоматизировать процесс npm  npm это официальный менеджер пакет nodejs который поставляться вместе снода устанавливаться поумолчание использовать централизованный реестр дляхранение управление зависимость также поддерживать локальный глобальный установка пакет однако впроект большой количество зависимость npm занимать очень место надиск медленно устанавливать пакет npm создавать папка node_modules длякаждый ваш проект вние загружать изинтернет сохранять надиск каждый пакет извсей иерархия зависимость увас 50проектов содневать темиж зависимость npm 50раз загружать изреестр необходимый зависимость сохранять надиск 50отдельных копия один техже пакет рано процесс небыть вообще оптимизировать наш пакет иметь одинаковый транзитивный зависимость скачиваться длякаждый свой пакет храниться вего папка втаким случай node_modules мочь достигать невероятно огромный размер хотя этот папка являться очень тяжелый прииспользование npm илиyarn виделиж мема получаться чтома впустую тратить место нажесткий диск это неедать круто особенно задействовать вразный проект ноприэтомжесткий диск увас 256гб говорить простарый версия npm стоить упоминать чтоон устанавливать пакет последовательно ждать полный установка пакет прежде переходить кследующий изначально уnpm небыть возможность кэширование пакет поначалу функция врядли входить вперечень необходимый просто факт появление npmбыл яркий событие чтозаканчиваться эпоха ручной установка однако появление yarn 2016году которыйбыл вовсем изкоробка иметь локальный кэширование пакет давать разработчик npm мотивация кразвитие функция кэширование пакетовбыл добавлять вnpm впятый версия выпускать вмай 2017года этобыть крупный обновление вкотор улучшать механизм обработка зависимость сделать надежный установка пакет становиться выводить подробный информация опроцесс аскорость установка пакет увеличиваться поинформация некоторый источник примерно 5раз кэширование позволять npm хранить загружать пакет локально повторно использовать припоследующий установка анезагружать каждый изинтернет это позволять значительно ускорять процесс установка сокращать количество трафик необходимый длязагрузка пакет yarn  какя упоминать 2016году выходить yarn это менеджер пакет разрабатывать facebook вотличие отnpm нужно устанавливать вручную какой фишка yarn workspaces установка объединение зависимость длянескольким проект достаточно популярный монорепозиторий приглянуться google facebook twitter ноиногда монорепозиторий это недань мода анеобходимость чтоэто такой представлять приложение состоять изнескольким подпроект сбольший использовать одинаковый зависимость поэтому неустанавливать зависимость отдельно длякаждый проект использовать lock файл длявсех хранить вобщий папка соответственно изэта папка один единственный команда устанавливать зависимость длявсех подпроект автоматический разрешение конфликт прислияние yarnlock файл чтотакой lockфайлы содержать точный описание зависимость пакет версия который использоваться вовремя последний установка илиобновление проект включая транзитивный пакет это позволять убеждаться чтоприследующий установка зависимость быть устанавливать теж версия чтоя рано невозникать несовместимость довольно редко новсежа встречаться ситуация получать конфликт прислияние ветка вlockфайлах какправить это боль скотора очень тяжело разбираться вобычный жизнь просто запускать команда установка пакет конфликт решаться автоматически selective dependency resolutions илиподругому возможность определять версия длятранзитивный зависимость случаться ситуация втранзитивный пакет ваш любимый библиотека попадать баг втак случай понижать версия данный пакет доболее стабильный чтонаписать вофициальный документация yarn yarn upgradeinteractive частенько мы приходиться обновлять какиелибо пакет обычно дляэтого надолибо изменять версия вpackagejson файлелибо использовать специальный команда вконсоль перечислять необходимый пакет yarn предлагать современный удобный способ обновление зависимость спомощь команда yarn upgradeinteractive который позволять взаимодействовать синтерактивный интерфейс дляобновление зависимость впроект возможность работа сплагин yarn иметь система плагин который позволять расширять функциональность добавлять новый команда возможность 2021году выходить второй версия yarn новый функция быть разрабатываться исключительно дляный ноyarn 2использует другой концепция полностью избавляться отпапка node_modules работать наоснова некий плагин дая вцелое пока недоконце стабильный поэтому сегодня рассматривать небыть pnpm performant npm  март 2016 год zoltan kochan представлять первый версия pnpm менеджер пакет решать проблема объем занимать дисковый пространство недоступность зависимость это очередь подталкивать разработчик yarn создание yarn plugnplay yarn pnp умолчание добавлять в",
    "tags": [
        "yarn",
        "pnpm",
        "npm",
        "пакетный менеджер",
        "пакетные менеджеры"
    ]
}
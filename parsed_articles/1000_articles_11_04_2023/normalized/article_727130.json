{
    "article_id": "727130",
    "article_name": "Многоязычность на Kotlin-бэкэнде",
    "content": "язык программирование kotlin часто ассоциироваться мобильный разработка android это неудивительный учитывать принимать google официальный язык разработка приносить множество необходимый удобный языковой конструкция кооперативный многозадачность сохранять совместимость уровень байткод ранний версия jvm применимость язык существенно высоко иметься библиотека создавать java разрабатывать специально kotlin позволять создавать обычный приложение например javafx использование платформенный графический библиотека kotlin native также создавать код бэкэнд c подключение база данные кеш очередь сообщение тд мобильный разработка проблема поддержка многоязычный сообщение возникать благодаря механизм ресурс число строка который мочь переопределять конкретный локать бэкэнд это становиться нетривиальный задача статья обсуждать несколько подход создание бэкэнд поддержка несколько язык прежде отмечать сценарий встречаться необходимость выполнение выбор подходящий язык сообщение использоваться подход backend driven ui структура атрибут элемент интерфейс доставляться мобильный приложение бэкэнд случай нередко текстовый сообщение передаваться непосредственно текст поскольку мочь включать дополнительный преобразование  вставка число согласование род падеж тд сервер возвращать локализовать сообщение ошибка который необходимо показывать пользователь jsonответе необходимо выполнять перевод строка язык пользовательский интерфейс например список страна регистрация  действительность некоторый случай уместно использовать база данные создавать локализовать представление например список страна тот случай содержание сообщение известно заранее либо неизменно либо являться шаблон подстановка значение например случай backend driven ui разумно искать решение непосредственно основывать код первый наиболее очевидный решение  использование обычный map языковой версия сообщение указание язык использовать класс javautillocale либо непосредственно либо получать необходимый компонент например language вернуть идентификатор язык учет регион вариант например поле sessionlocale сервер сохранять актуальный локаль сессия пользователь код возврат сообщение ошибка недопустимый операция выглядеть такой образ object messages    val invalidoperationerror  mapof     ru выполнять недопустимый операция     en an illegal operation was performed     de illegale operation durchgeführt     fr opération illégale effectuée     tr yasa dışı işlem yapıldı     cs извршен незаконит операција      fun invalidoperationsession locale   messagesinvalidoperationerrorsessionlanguage такой решение ряд недостаток прежде сообщение добавлять давать например подставлять имя пользователь количество товар корзина также выполнять согласование грамматический конструкция например изменять окончание приветствие уважаемый  уважаемый частично проблема решать использование библиотека подстановка значение например  kotlinformat  равный очень код приходиться создавать вручную приходиться делать специальный функция который принимать правильный тип аргумент поэтому рассматривать альтернативный решение поддержка многоязычность kotlinбэкэнда использовать библиотека создавать изначально java например  jtranslation  библиотека использовать jsonфайлы подгружать динамически время выполнение наш случай необходимо создавать 6 jsonфайлов каталог resourcestranslation размещать объект который ключ быть идентификатор фраза например invalid_action значение  перевод соответствующий язык далее код создаваться объект класс перевод получаться доступ строка val jtranslation  jtranslationbuilderlanguagesru languagesde languagesenbuild jtranslationgetlangwithlocalesessionlocalelanguage invalid_action дополнительно jsonстроках использовать подстановка вид  который быть размещаться значение передавать идентификатор строка значение преобразовываться строковый представление tostring также jtranslation поддерживать замена emoji записывать вид smile соответствующий юникодсимвол альтернативный решение  использование кодогенерация создание функция генерировать корректный текст учет локать другой атрибут фраза рассматривать библиотека  i18n4k  специально создавать использование kotlinприложениях библиотека работать платформа число kotlin native представлять плагин генерация код основа propertiesфайлов установка добавлять конфигурация gradle зависимость плагин также настраивать список доступный язык import orgjetbrainskotlingradletaskskotlincompile  plugins      kotlinjvm version 1720     iddecomahei18n4k version 050     другой плагин   i18n4k      sourcecodelocales  listofen de ru cs fr tr   dependencies      implementationdecomahei18n4ki18n4kcorejvm050     testimplementationkotlintest     другой зависимость    файл локализация размещать каталог srcmaini18n srccommonmaini18n проект kotlin multiplatform удобство ввод unicodeсимволов ide включать автоматический преобразование кодировка intellij idea file encodings  default encoding iso88591 transparent nativetoascii conversion включать файл properties иметь общий название prefix_language_region_variantproperties содержать пара ключзначение один строка также использовать плагин ide например  resource bundle editor  удобство редактирование перевод название префикс совпадать название сгенерировать класс например наш случай создавать файл errormessages_enproperties английский вариант errormessages_ruproperties русский тд  выполнять кодогенерация также связываться задача build gradle gradlew generatei18n4kfiles генерация мочь увидеть каталог buildgeneratedsourcesi18n4k новый файл название errormessageskt который содержать getметоды получение строка список перевод извлекать propertiesфайла например public object errormessages  messagebundle         an invalid operation was performed       jvmstatic   public val invalid_operation localizedstring  getlocalizedstring00    init      registertranslationerrormessages_en         translation of message bundle errormessages for locale en generated by i18n4k   private object errormessages_en  messagesprovider    jvmstatic   private val _data arraystring  arrayof       an invalid operation was performed    public override val locale locale  localeen    public override val size int     get  _datasize    public override fun getindex int string  _dataindex  доступ соответствующий перевод использовать вызов метод название совпадать ключ сообщение printlnerrormessagesinvalid_operation также строка мочь использоваться подстановка случай быть представлять аргумент функция допускаться использование 5 подстановка hellohello 0 from 1 printlnerrormessageshelloworld kotlin backend выбор текущий язык использовать объект конфигурация     val config  i18n4kconfigdefault     i18n4k  config     configlocale  localeen также конфигурация вызывать форматирование сообщение подстановка значение например     printlnconfigmessageformatterformathello 0 listoftest localeus насчет вариант использование фраза зависеть аргумент мочь использовать функция расширение рефлексия kotlin определять перечисление enum class gender      male     female     other  создавать строка разный приветствие hello_maleуважаемый 0 hello_femaleуважаемая 0 hello_otherздравствуйте 0 создавать функция расширение который находить подходить строка выбирать пол fun errormessagesgenderizegender gender prefix string vararg args anystring      val field  thisclassjavagetdeclaredfieldprefix_gendername     fieldtrysetaccessible     val method  fieldgetthis     return when argssize          0  methodtostring         1  method as localizedstringfactory1createstringargs0         2  method as localizedstringfactory2createstringargs0 args1         тд 5 аргумент         else         вызов использовать обычный обращение errormessages дополнительно передавать префикс необходимость значение подстановка     printlnerrormessagesgenderizegenderfemale hello maria аналогично сделать функция расширение выбор подходящий строка числовой значение ноль один 2 4 тд  использование фреймворок spring локализация реализоваться внутри также propertiesфайлы строковый ре",
    "tags": [
        "otus",
        "java",
        "kotlin",
        "localization",
        "i18n"
    ]
}
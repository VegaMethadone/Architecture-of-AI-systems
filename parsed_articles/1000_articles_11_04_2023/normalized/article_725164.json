{
    "article_id": "725164",
    "article_name": "Yet another введение в fp-ts. Часть 1. Эквивалентность и сравнимость",
    "content": "fpts построить вокруг класс тип такой монада душнивать отвечать это моноид категория эндофунктор абсолютно правый вопрос появляться еще такой моноид такой категория такой эндофунктор мгновение человек сковывать первородный ужас сходить страница рассказ г ф лавкрафт инстинкт самосохранение кричать бежать интересный собеседник обладать эмпатия приобнимать сказать бро это просто контейнер какогото значение способный соединяться цепочка такой контейнер писать фронтенд бэк нод холодильник пиво угощаться ты рассказывать библиотека fpts разный клевый штука функциональный программирование javascript существовать тонна библиотека поддерживать функциональный стиль программирование lodash ramda sanctuary  это сразу приходить голова эпоха побеждать typescript писать типобезопасность моветон lodash ramda типобезопасность обещать sanctuary проверять тип время выполнение требовать дополнительный накладный расход fpts изначально написать typescript помимо возможность функциональный программирование предлагать изящный проверка тип этот интересный библиотека реализовать множество концепция статически типизированный функциональный язык семейство ml такой haskell ocaml scala fpts все прекрасный кроме документация практический пример использование задача  освещать темный угол также показывать несколько практический пример статья быть обсуждать базовый концепция фп такой чистый функция лямбда композиция прочее это написать статья youtube заваливать тонна видеоролик индиана гаев постараться простой слово практический пример объяснять  класс тип  какой бывать использовать fpts примечание задаваться вопрос нужный лично этот ваш функциональщина однозначный ответ лэндинг форма отправка заявка кнопка жми11 моноид функтор монада явно быть лишний функциональный стиль программирование решать пласт задача который редко приходиться сталкиваться рядовой разработчик однако ваш проект сложность бизнеслогика нарастать снежный ком глубина ветвление поток управление сравнимый марианский впадина голова приходиться держать десяток граничный случай фп глоток свежий воздух fpts приносить еще типобезопасность такой класс тип наиболее близкий аналог  это интерфейс некий контракт который выполнять сущность реализовать класс тип основной отличие привычный интерфейс type classes описывать бизнеслогика  абстрактный математический свойство  наш сущность пока понятно  беда пример ниже расставлять все свой место библиотека fpts класс тип реализовать классический интерфейс typescript класс тип eq  эквивалентность класс тип eq реализовать свойство эквивалентность отвечать вопрос  равный  элемент множество себя  равный  строка число это выглядеть бессмыслица очевидно 1  1 cat  cat число строка сложный структура данные домклика работать недвижимость допускать два квартира требоваться определять одинаковый контекст определенный бизнестребование мы сравнивать квартира площадь пример код это мочь сделать лаконично лишний зависимость ваш функциональщина type tflat     area number   const flat1 tflat     area 40  const flat2 tflat     area 42  const flat3 tflat     area 40   flat1area  flat2area  false flat1area  flat3area  true элементарно ватсон программист любить сам создавать проблема доблесть решать верно статья fpts почему мы заморачиваться этот равенство реализовать помощь import  eq  from fptseq  type tflat     area number   const flat1 tflat     area 40  const flat2 tflat     area 42  const flat3 tflat     area 40   const eqflat eqtflat     equals firstflat secondflat  firstflatarea  secondflatarea   eqflatequalsflat1 flat2  false eqflatequalsflat1 flat3  true чтото становиться душновато подождать закрывать вкладка дорогой читатель момент интересно мы приходить бизнесзаказчик сказать никакой смысл сравнивать два квартира один лишь жилплощадь  вторичка   первичка   это большой разница давать реализовывать логика учет требование ока давать рад помогать type thousekind  newhouse  secondaryhouse  первичка вторичка type tflat     area number   kind thousekind   const flat1 tflat     area 40   kind newhouse  const flat2 tflat     area 42   kind secondaryhouse  const flat3 tflat     area 40   kind secondaryhouse   flat1area  flat2area  flat1kind  flat2kind  false flat1area  flat3area  flat1kind  flat3kind  false принцип код работать начинать выглядеть сомнительно задача решать все попробовать самый сделать помощь fpts type thousekind  newhouse  secondaryhouse  первичка вторичка type tflat     area number   kind thousekind   const flat1 tflat     area 40   kind newhouse  const flat2 tflat     area 42   kind secondaryhouse  const flat3 tflat     area 40   kind secondaryhouse   const eqflat eqtflat     equals firstflat secondflat  firstflatarea  secondflatarea      firstflatkind  secondflatkind   eqflatequalsflat1 flat2  false eqflatequalsflat1 flat3  false нууу использовать ваш функциональщина вообще ваш класс тип частность посмотреть проблема подругой вспомнить основа функциональный подход лежать  композиция чистый функция  класс тип мочь участвовать реализация сложный класс тип import  eq struct  from fptseq import  eq as numbereq  from fptsnumber import  eq as stringeq  from fptsstring   eq fptsnumber eq fptsstring  это  написать реализация класс тип eq строка число  type thousekind  newhouse  secondaryhouse  первичка вторичка type tflat     area number   kind thousekind   const flat1 tflat     area 40   kind newhouse  const flat2 tflat     area 42   kind secondaryhouse  const flat3 tflat     area 40   kind secondaryhouse  const flat4 tflat     area 40   kind newhouse   const eqflat eqtflat  struct   area numbereq   kind stringeq   consolelogeqflatequalsflat1 flat2  false consolelogeqflatequalsflat1 flat3  false consolelogeqflatequalsflat1 flat4  true код выглядеть  гораздо  интересно лаконичный бизнес  пока  довольный наш результат неделя бизнестребование меняться дорогой разработчик давать еще быть сравнение квартира использовать расстояние метро шаг 200 метр становиться срашновато type thousekind  newhouse  secondaryhouse  первичка вторичка type tflat     area number   kind thousekind   metrodistance number   const flat1 tflat     area 40   kind newhouse   metrodistance 540  const flat2 tflat     area 42   kind secondaryhouse   metrodistance 320  const flat3 tflat     area 40   kind newhouse   metrodistance 430  const flat4 tflat     area 40   kind newhouse   metrodistance 750   const distance_interval  200  const getdistanceinterval  distance number    mathfloordistance  distance_interval  const isequal  first tflat second tflat boolean    firstarea  secondarea    firstkind  secondkind    getdistanceintervalfirstmetrodistance    getdistanceintervalsecondmetrodistance  isequalflat1 flat2  false isequalflat1 flat3  true isequalflat1 flat4  false этот функциональность fpts выглядеть простой дубина hidden text import  eq struct  from fptseq import  eq as numbereq  from fptsnumber import  eq as stringeq  from fptsstring   eq fptsnumber eq fptsstring  это  написать реализация класс тип eq строка число  type thousekind  newhouse  secondaryhouse  первичка вторичка  type tflat     area number   kind thousekind   metrodistance number   const flat1 tflat     area 40   kind newhouse   metrodistance 540   const flat2 tflat     area 42   kind secondaryhouse   metrodistance 320   const flat3 tflat     area 40   kind newhouse   metrodistance 430   const flat4 tflat     area 40   kind newhouse   metrodistance 750      реализация eq сравнение расстояние шаг 200 метр   const eqdistance eqnumber     equals first second       const distancequant  200      return        mathfloorfirst  distancequant  mathfloorsecond  distancequant           const eqflat eqtflat  struct   area numbereq   kind stringeq   metrodistance eqdistance  вуаль   eqflatequalsflat1 flat2  false eqflatequalsflat1 flat3  true eqflatequalsflat1 flat4  false красота аналогично мочь гибко подстраивать наш логика определение равенство объект квартира изменяться требование бизнес типобезопасность  довесок просто реализовывать экземпляр eq класс тип ord  срав",
    "tags": [
        "домклик",
        "typescript",
        "fp ts",
        "функциональщина"
    ]
}
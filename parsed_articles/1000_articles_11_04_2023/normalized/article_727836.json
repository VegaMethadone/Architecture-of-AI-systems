{
    "article_id": "727836",
    "article_name": "DSL фреймворк для создания Telegram ботов",
    "content": "рождаться идея хотеть создавать фреймворк который позволять пользователь писать свой  бот telegram помощь язык специфичный конкретный область dsl визуальный представление например диаграмма uml основа предоставлять данные фреймворк генерировать необходимый pythonкод создание полнофункциональный telegramбота который сразу запускать хостинг начинать план доменноспецифический язык dsl визуальный представление  нужно разрабатывать dsl визуальный представление например umlдиаграммы который позволять пользователь описывать структура меню логика переход бот  мочь использовать комбинация json yaml xml определение dsl создавать простой графический интерфейс проектирование umlдиаграмм парсер  разрабатывать парсер который читать интерпретировать dsl визуальный представление парсер должный уметь понимать структура меню логика переход определенный пользователь переводить внутренний представление который использовать генерация код генерация код  реализовать модуль генерация код который принимать внутренний представление создавать парсер генерировать код python использовать библиотека aiogram развертывание интеграция   предоставлять возможность развертывать сгенерировать код бот хостинговый платформа интегрировать api telegram бот становиться функциональный кроме создавать простой процесс обновление бот внесение изменение dsl визуальный представление документация учебник  разрабатывать полный документация учебник помогать пользователь понимать использовать фреймворк создавать собственный бот telegram помощь предоставлять dsl визуальный представление 4 5 пункт пока стадия проработка первый сегодня сделать решать использовать yaml dsl являться человекочитаемый простой понимание простой пример структура dsl описание меню логика переход бот telegram bot   token your_telegram_bot_token   start_message welcome to the sample bot  states   start     actions        type send_message         text choose an option        type show_keyboard         options            text show random number             target_state random_number            text tell a joke             target_state joke    random_number     actions        type send_random_number         min 1         max 100         text heres a random number between 1 and 100         type back_to_start         text back to main menu    joke     actions        type send_joke         text heres a funny joke         type back_to_start         text back to main menu  пример файл yaml структурированный различный секция bot  содержать специфический бот информация такой токен стартовый сообщение states  представлять различный состояние пункт меню бот каждый состояние иметь уникальный идентификатор например start random_number joke содержать список действие actions  определять действие который должный выполнять пользователь взаимодействовать бот определенный состояние действие включать отправка сообщение показ клавиатура отправка случайный число многий другой поле  type  раздел  actions  определять тип действие который должно выполнять например отправка сообщение показ клавиатура поле  target_state  использоваться определение состояние который нужно переходить пользователь выбирать определенный опция это простой dsl который расширять включение сложный логика дополнительный действие  время прикручивать плагин miro figma следующий шаг создание парсер который читать dsl генерировать необходимый pythonкод использовать библиотека aiogram создавать парсер который читать интерпретировать yaml dsl мочь использовать библиотека  pyyaml  загрузка yamlфайла последующий обработка данные низко приводить простой реализация парсер import yaml   class botdefinition     def __init__self yaml_file         with openyaml_file r as f             selfdata  yamlsafe_loadf      def get_bot_tokenself         return selfdatabottoken      def get_start_messageself         return selfdatabotstart_message      def get_statesself         return selfdatastates   def parse_bot_definitionyaml_file     return botdefinitionyaml_file   if __name__  __main__     bot_definition  parse_bot_definitionexampleyaml     printbot_definitionget_bot_token     printbot_definitionget_start_message     printbot_definitionget_states   данный реализация класс  botdefinition  отвечать загрузка обработка yamlфайла функция  parse_bot_definition  принимать качество аргумент путь yaml файл возвращать объект  botdefinition  объект  botdefinition  предоставлять метод доступ специфический бот информация например  get_bot_token   get_start_message  также состояние действие определенный dsl например  get_states  мочь проверять реализация помощь ранее предоставлять пример yaml dsl сохранять файл имя exampleyaml запускать скрипт парсер парсер работать правильно следующий шаг создание модуль генерация код который принимать объект  botdefinition  генерировать код python использовать библиотека aiogram код определять структура меню логика переход бот telegram указывать yaml dsl your_telegram_bot_token welcome to the sample bot start actions type send_message text choose an option type show_keyboard options text show random number target_state random_number text tell a joke target_state joke random_number actions type send_random_number min 1 max 100 text heres a random number between 1 and 100  type back_to_start text back to main menu joke actions type send_joke text heres a funny joke  type back_to_start text back to main menu создавать модуль генерация код который принимать объект  botdefinition  генерировать pythonкод использование библиотека aiogram сначала создавать шаблон код бот aiogram затем использовать библиотека jinja2 рендеринг конечный код разбирать yaml данные сначала устанавливать jinja2 pip install jinja2 создавать файл шаблон имя  bot_templatepyj2  следующий содержимое import logging import random from aiogram import bot dispatcher types from aiogramcontribmiddlewareslogging import loggingmiddleware from aiogramtypes import parsemode from aiogramutils import executor  loggingbasicconfiglevellogginginfo  api_token   bot_token   bot  bottokenapi_token dp  dispatcherbot dpmiddlewaresetuploggingmiddleware   for state actions in statesitems   for action in actionsactions   if actiontype  send_message  async def  state _send_messagemessage typesmessage     await messagereply actiontext  parse_modeparsemodehtml  endif    if actiontype  show_keyboard  async def  state _show_keyboardmessage typesmessage     keyboard_markup  typesreplykeyboardmarkuprow_width2      for option in actionoptions      button  typeskeyboardbutton optiontext      keyboard_markupaddbutton      endfor      await messagereplychoose an option reply_markupkeyboard_markup  endif   endfor   endfor    register message handlers  for state actions in statesitems  dpmessage_handlercommands statelower  async def  statelower _command_handlermessage typesmessage      for action in actionsactions      await  state _ actiontype message      endfor   endfor   async def on_startdp     await botsend_messagechat_idconfigadmin_id textbot has been started  async def on_shutdowndp     await botsend_messagechat_idconfigadmin_id textbot has been stopped      await dpstorageclose     await dpstoragewait_closed      await botsessionclose  if __name__  __main__     from aiogram import executor     executorstart_pollingdp on_startupon_start on_shutdownon_shutdown   создавать скрипт python который считывать объект  botdefinition  рендерит код бот использовать jinja2 from jinja2 import environment filesystemloader  import parser_bot   def generate_bot_codebot_definition     env  environmentloaderfilesystemloader     template  envget_templatebot_templatepyj2      bot_token  bot_definitionget_bot_token     states  bot_definitionget_states      rendered_code  templaterenderbot_tokenbot_token statesstates      with opengenerated_botpy w as f         fwriterendered_code   if __name__  __main__      first parse the yaml file to create a botdefinition object     bot_definition  parser_botparse_bot_definitionexampleyaml       then generate the bot code ",
    "tags": [
        "фреймворк",
        "telegrambot",
        "dsl",
        "aiogram",
        "parser",
        "code generation"
    ]
}
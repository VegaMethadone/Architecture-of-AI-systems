{
    "article_id": "725540",
    "article_name": "Как мы создавали свой тренажёр по программированию — опыт Нетологии",
    "content": "соглашаться хороший образовательный курс ждать интерактив большой объем практический задание возможность быстро получать обратный связь еще  молниеносно человеческий фактор никто отменять стараться наш эксперт проверять работа программирование аналитика быстро это все равный происходить моментально скорость обработка задание влиять результат ученик мы очень хотеться скорость увеличивать менее важный сокращать трудозатраты проверять эксперт мочь сосредотачиваться качественный обратный связь именно поэтому появляться идея создавать онлайнтренажер студент мочь сам писать код работать ошибка брать подсказка получать мгновенный обратный связь приступать следующий задание привет звать мария выволокина  product manager нетология рассказывать создавать тренажер программирование автопроверка задача разный язык программирование почему решать создавать тренажер программирование практика  ждать студент отработка теория некоторый базовый навык необходимо закреплять решение большой количество задача это значить преподаватель эксперт вынуждать тратить десяток час проверка однотипный задание ученик удобно тренировочный задание находиться один платформа приходиться искать тренировочный задание сторонний ресурс также студент ждать моментальный обратный связь это значит  быстро получать реакция свой задание двигаться далеко сохраняться мотивация интерес дальнейший учеба тренажер программирование  это среда встроенный платформа который студент писать код получать вывод также получать мгновенный обратный связь благодаря автопроверка задача разный язык программирование задача который должный решать наш тренажер  уменьшать число рутинный проверка задание преподаватель  повышать эффективность образовательный процесс учитывать учитывать проектирование важный фактор который повлиять решение запуск проектирование тренажер качество образование нужно понимать снижать качество образовательный составляющая практический задание мы важный появление тренажер студент становиться плохо справляться практика качество целевой показатель выбирать соотношение количество студент который успешно справляться тренажер он приступать показатель сравнивать показатель успешный выполнение домашний задание поток тренажер мы важно уронить метрика  исследовать рынок учитывать опыт конкурент проводить анализ существующий момент решение среди иностранный обучать платформа среди отечественный наиболее интересный мы показываться продукт отечественный компания  тренажер хекслет яндекспрактикум копировать чужой решение лоб хотеться поэтому решать разрабатывать свой уникальный продукт собирать фидбэк преподаватель понимать самый трудоемкий процесс  проверка синтаксис код гдето забывать двоеточие гдето запятая выбирать тот встроенный функция поставлять отступ далее максим сахаров старший консультант data science базиссофт кандидат технический наука преподаватель курсы python анализ данные математика data science долго смотреть писать программа преподаватель начинать пробовать писать самостоятельно такой ошибка обязательно появляться поэтому тренажер становиться свой род набор дидактический материал помогать отрабатывать механический навык задание он простой определять требовать размер выборка построить доверительный интервал средний значение месяц подготовить mvp тренажер доска miro описание mvp тренажер программирование ожидать внедрение тренажер проходить быстро адаптировать задание тренажер разрабатывать новый добавлять готовый оказываться задание тренажер составлять недостаточно корректно ошибка формулировка это оказываться один основной сложность формулировка задание должный простой очевидный машина  это инструмент который проверять задание определенный критерий студент понимать она нужно решать именно становиться уделять внимание основательно подходить разработка такой задание это кропотливый работа методист связка преподаватель что собирать тренажер первоначальный версия тренажер python дальнейший добавлять примерно один язык программирование месяц продолжать это делать python добавлять java javascript sql html bash swift александр мищенко тимлид разработка отдел контент методология реализация тренажер основывать технология виртуализация изолированный контейнер использовать docker yandexcloud часто такой решение называть песочница суть код который писать студент выполняться изолированно случайный намеренный образ вносить какието изменение чужой процесс начинать проектировать технический реализация тренажер очень ограниченный бюджет мало человек закапываться экзотический технология взять использовать свой работа каждый день момент готовиться переезд yandexcloud наш разработчик написать маленький тестовый сервис отдел sre оно совместно отрабатывать основной процесс cicd первый взгляд весь выглядеть очень просто подготовить docker image необходимый среда взять код который выполнять помещать код контейнер запускать код получать результат использование docker наш задача позволять еще подготавливать огромный разнообразие среда исполнение любой задание мочь доработка настраивать использовать готовый образ разный задание один сторона  легкость мочь использовать разный среда исполнение рамка один курс получать очень гибкий инструмент весь этот оркестр както управлять первый попробовать качество оркестратор  kubernetes мы подходить kubernetes  этот программный обеспечение оркестровка контейнеризированный приложение автоматизация развертывание масштабирование координация условие кластер задача  обеспечивать работа сервис мы нужно запускать краткосрочный процесс разный важно среда исполнение docker image api оказываться очень удобный kubernetes  замечательный программный обеспечение наш задача следующий  swarm спойлер отказываться сразу swarm существенный плюс  api полностью совместимый api docker понимать этот временный решение очень ограничивать ресурс разработчик написать приемлемый срок недостаток выявляться запуск проект продакшн точно основной недостаток  нестабильность система александр мищенко тимлид разработка отдел контент методология запущенный образ плохой код мочь полагать весь кластер это устраивать swarm помогать мы запускать тренажер минимальный затрата важно подсвечивать узкий место показывать многий подводный камень это хороший опыт благодаря который намного понимать какой должный наш продукт точка зрение неубиваемость итог приходить вывод мы писать свой оркестратор полагаться получать опыт итог заменять swarm собственный разработка балансировщик оркестратор запуск докерконтейнер наш контейнер отличие k8s долговечный должный работать ограниченный время ограниченный ресурс код написать студент потенциально опасный система отслеживать зависать контейнер уничтожать далее иметь несколько независимый докерхост вывод строй один несколько целое должный влиять работа тренажер объяснять принцип пример 3 отдельный докерхост h1 h2 h3 очередь задание t1 t2 t3 t4 t5  tn распределять задание t1h1 t2h2 t3h3 t4h1 допускать это задание убивать хост t5h2 t6h3 t7h1 получать ответ хост недоступный t7h2 т д упавший h1 перезагружать очищать лишний процесс либо происходить освобождение дисковый хранилище принимать мера зависеть ситуация все это автоматический режим хост рабочий состояние автоматически доступный запуск контейнер тренажер быть работать один работать докерхост большой временный задержка также подход позволять мы использовать прерывать виртуальный машина экономить наш затрата отличать наш сервис swarm  кластер swarm хотя один нод начинать тормозить это сказываться весь кластер свой разработка постараться сделать хоста максимально независимый отличать наш разработка k8s  kubernetes первый очередь должный обеспечивать постоянный работа запущенный сервис каждый запущенный задание ограничивать время также каждый запущенный контейнер запускать разный параметр например нужно выполнять код написать студент нужно выполнять тест интегрировать тренажер платформа ока сделать система который уметь запускать код проверять результат далее вставать вопрос это все заставлять работать рамка основной платформа момент готов",
    "tags": [
        "тренажёр",
        "программирование",
        "студенты",
        "python",
        "docker",
        "swarm",
        "kubernetes",
        "задачи для программистов",
        "автопроверки",
        "анализ данных"
    ]
}
{
    "article_id": "727742",
    "article_name": "F# на примере решения олимпиадной математической задачи",
    "content": "задача сложный явно уровень всероссийский школьный олимпиада однако ее решение требовать перебор несколько десяток вариант давать возможность ошибаться иметься красивый решение требовать внимательность аккуратность автор находить столь удобный задача приносить  makondo  большой спасибо решение быть использовать visual studio code расширение обеспечивать интерфейс jupyter notebook использовать интерпретатор f весь код настоящий статья выполнять интерпретатор f который входить состав  дистрибутив visual studio постановка задача итак сам задача находить количество значение который промежуток 0 1 принимать функция промежуток 0 1  множество число который мало 1 0 квадратный скобка обозначаться операция взятие целый часть число например 55  5  подготовка решение исследование функция f данный функция видно ее формула представлять себя сумма девять функция который выдавать неотрицательный целый число каждый этот функция кусочнопостоянный неубывающий ее график представлять себя лесенка ступенька равный длина  k  ступенька лесенка короче  k   2 напромежутке01 оказываться два ступенька первый 0 половина второй половина 1 поэтому сам функция  f  также являться неубывающий кусочнопостоянный выдавать целый число     x  01  функция выдавать  0   x   1 функция  f  выдавать сумма целый число 2 10 этот сумма равный 54 целый число который равный 0 мало равный 54 существовать 55 штука такой образ ответ задача 55 несложно доказывать каждый девять функция  x  1  начинаться очередной ступенька  x   1 входить промежуток который нужно находить колво значение поэтому уменьшать верхний граница 54    реализация функция f порядок реализовывать f сам функция  f   самый дело знать это решение задача скоро пригождаться хотя тестирование  создавать начинать коллекция целый число 2 10 который фигурировать формула пусть это список let ks   2  10  вроде  ks  заводить всякий случай именовать коллекция этот  k  естественно она использовать реализация наш функция последующий решение задача let f x  listsumby  float     x  int  ks менее лаконичный вариант let f x       let fk k  int  float k  x      listsumby fk ks разъяснение синтаксис сначала рассматривать второй нелаконичный вариант ключевой слово  let  служить также заведение величина который являться функция f функция также принимать называть величина  заголовок функция слово  let  указываться имя заводить функция затем пробел скобка запятая имя ее параметр знак    служить отделение заголовок тело функция друг друг тело функция представлять себя один выражение блок код состоять выражение заведение другой величина т ч функция нужно записывать одинаковый отступ отношение заголовок функция выдавать значение вычислять последний выражение свой тело поэтому тело функция завершаться заведение величина тк область видимость имя заводить тело функция величина этот тело ограничиваться тело функция  f  состоять два строка первый строка заводиться вспомогательный функция  fk  второй представлять себя выражение результат который возвращать значение функция  let fk k  int  float k  x  функция  fk  иметь параметр  k  свой тело выполнять следующий действие преобразовывать свой параметр тип float помощь функцииоператор  float  умножать x поэтому интерпретатор определять функция  f  параметр  x  должный иметь тип  float  округлять результат умножение маленький целый преобразовывать тип int помощь функцииоператор  int  f иметься целый 7 оператор применение  принимать говорить процедурный язык  вызов функция основный придумывать лексема компилятор распознавать разбирать выражение обнаруживать например два величина подвыражение подряд тот соединять какимлибо оператор такой образ  a b  означать применять величина   величина  b  величина  a  должный являться функция оператор применение ассоциативный слева это означать выражение  a b   c  интерпретироваться  a b c   a b c  основной оператор применение иметь очень большой приоритет поэтому параметр функция int приходиться заключать скобка  второй строка   listsumby fk ks применять функция  sumby  модуль  list  величина  fk  наш список число  ks  данный модуль входить состав стандартный библиотека f распространяться вместе компилятор интерпретатор функция  listsumby  применять свой первый параметр каждый элемент список затем суммировать получать результат применение вариант плохой он заводиться именованный функция  fk  этот  имя использоваться лишь однажды автор статья удаваться придумывать  подходить имя оно помогать понимать код запутывать первый лаконичный вариант лишний именовать программный объект отсутствовать вместо функция  fk  оно использоваться выражение    float     x  int оно представлять себя композиция три функция разделять оператор композиция     выражение  a  b  означать сконструировать величина  a   b  функция который применять свой аргумент сначала функция a  результат применять функция  b  каждый функция выражение  float     x  int  соответствовать один три действие тело  fk  перечислять выше следовать иметь вид такой композиция возможный лишь действие выполняться конвейерный каждый получать вход результат предыдущий аргумент функция  fk  передавать свой результат следующий возвращать функция  fk  скобка вокруг оператор умножение экранировать грамматический свойство результат вычисление выражение      обычный функция два параметр который применять оператор умножение это означать вместо  a  b  написать     a b  затем      применяться  x  результат конструироваться функция один неименованный параметр применение функция ко весь ее параметр лишь первый называться каррирование вычурный вариант реализация функция  f  один строка происходить каррирование функция  f_x_k  функция l istsumby  let f x       let f_y_k y k  int  float k  y       let adder_on_fk_and_x  listsumby f_y_k x     adder_on_fk_and_x ks шутка говорить f поддерживать функция несколько параметр возможность указывать несколько параметр заведение функция синтаксический сахар сподобный язык также поддерживать функция несколько параметр просто адепт знать это верный правильный утверждать f работать применять функция ко весь ее аргумент сразу делать это последовательно аргумент сначала применять первый аргумент затем результат применение применять ко второй аргумент тд пока заканчиваться аргумент это самый быстрый реализация тест показывать реализация процедурный стиль оказываться быстро    let f n x      let mutable acc  0     for k  2 to n do         acc  acc   int  float k  x      acc наш задача сходить самый быстрый численный решение лоб приступать решение задача математический решение сходу придумывать удаваться быть использовать численный договариваться ограничиваться тип  float   int  быть использовать другой числовой тип который позволять повышать точность решение ииль производительность следовать замечать мы сложно перепутывать значение выдавать функция f ее аргумент тк быть иметь разный тип  f делать неявный преобразование тип итак нужно придумывать численный метод самый простой  взять какоенибудь конечный множество точка промежуток 01 подсчитывать колво различный значение который выдавать функция элемент подход гарантировать быть собирать значение оказываться выдавать 54 целый число 0 53 задача решать лоб качество такой множество быть брать значение промежуток  0 1  отстоять друг друг один расстояние такой множество легко сгенерировать список помощь оператор ранжирование         0  step  1  step  хотя документация это сказать конструкция использовать целочисленный тип качество накопитель получать значение функция  f  быть использовать тип  set int  добавлять множество элемент служить функция  set add  получать вход элемент множество изготавливать копия множество добавлять копия элемент элемент еще иметься такой образ множество который применять оставаться изменять соответствовать подход функциональный программирование итак let bruteforce stepfloat aset x1 x2      listfold  fun accset x  setadd f x accset  aset         x1  step  x2  step  разъяснение синтаксис list  fold  принимать 3 параметр функциюсворачиватель два параметр ",
    "tags": [
        "численные методы",
        "функуиональное программирование"
    ]
}
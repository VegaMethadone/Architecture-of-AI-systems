{
    "article_id": "725042",
    "article_name": "Эффектно и эффективно. 6 инструментов для анимации в React Native",
    "content": "все привет звать евгений прокопьев мобильный разработчик сбермаркет пять год работать react native любовь это красивый анимация нравиться встречать приложение роль юзер любить делать позиция разработчик особенно все сразу получаться лагать статья хотеть рассказывать помощь какой инструмент добиваться качественный анимация react native  начинать animated reanimated посмотреть работать внутри затем рассказывать делать библиотека svg lotte opengl skia какой задача каждый подходить статья являться обзор исследование работа каждый инструмент капот некоторый инструмент постараться копнуть достаточно глубоко поехать почему анимация это важный короче ради перфоманс юзер ожидать приложение определенный поведение например появляться модалка она смахивать вниз поведение приложение соответствовать ожидание мочь расстраивать пользователь уходить вернуться еще бывать красиво нарисовать дизайнер самобытный интерфейс мочь запасть душа вызывать вауэффект повышать лояльность анимация далеко наименее важный часть приложение  animated начинать встраивать react native библиотека animated представлять набор метод работа анимация пример хотеть изменять прозрачность блок ноль единица  это сделать помощь следующий код const mycomponent       const animationvalue  userefnew animatedvalue0current   const run         animatedtiminganimationvalue        tovalue 1       duration 2000     start         render           видео видно jsпоток фризиваться серый квадратик 2fps анимация останавливаться  это дело давать посмотреть почему происходить это работать react native изначально проектироваться такой принцип javascript тред который управлять все находиться нативка старт анимация jsдвижок ждать следующий вызов requestanimationframe рассчитывать значение который должно следующий кадр искать нод который присваивать метод setnativeprops прокидывать ui тред самый дорога операция являться сериализация парсинг значение передавать параметр один тред помимо javascript должный исполнять наш логика обрабатывать входить исходить запрос анимация выглядеть js работать частота 60fps это полагаться изначальный схема работа animated api ребята react native это понимать время дорабатывать стандартный библиотека добавлять возможность запускать анимация uiпотоке попробовать знакомый пример запускать анимация javascriptтред полностью фризиваться тот 2fps анимация работать const mycomponent       const animationvalue  userefnew animatedvalue0current   const run         animatedtiminganimationvalue        tovalue 1       duration 2000       usenativedriver true     start         render            происходить это убирать ненужный работа javascriptтреде перекидывать часть логика uiтред подробно старт анимация js рассчитывать граф описывать анимация себя соотноситься значение какой интерполяция необходимо производить весь это отправлять uiтред совершенно неважно происходить javascript анимация проходить лаг новый вариант работа animated api все мы другой библиотека все простой попробовать анимировать например свойство width получать ошибка devрежиме это прод получать краш  посмотреть случаться пойти исходник увидеть файл reactnativelibrariesanimatednativeanimatedhelperjs указывать определенный свойство который поддерживаться нативный анимация такжечто usenativedriver поддерживать любой свойство который заставлять макет перерисовываться тот менять ширинувысотуотступ дословно исходник styles allowed by the native animated implementation in general native animated implementation should support any numeric or color property that  doesnt need to be updated through the shadow view hierarchy all nonlayout properties  итог animated показывать хороший перфоманс использовать свойство который перерисовывать макет анимировать кроме поддерживать свойство смело использовать библиотека animated плюс минус плюс работать коробка некоторый случай нативный перфоменс работать событие скролл минус очень плохой перфоменс использование usenativedriver неудобно создавать анимация несколько состояние условие работать usenativedriver встраивать система жест мы предлагать reanimated невозможность анимировать сторона uiтреда любой свойство нравиться многий разработчик поэтому написать библиотека решающий проблема самый популярный  reanimated библиотека предлагать использовать sharedvalue вместо animatedvalues помечать некоторый функция магический слово worklet давать попробовать написать простой пример const mycomponent       const animation  usesharedvalue0   const run       worklet   animationvalue  withtiming 1      duration 2000           const tap  gesturetaponstart        anim          render         gesturedetector gesturetap            gesturedetector     видно jsпоток полностью зафричь стабильный 2fps работать анимация обрабатывать нажатие кнопка  какаято магия давать разбираться это работать reanimated отличие большинство похожий библиотека становиться уходить управление анимация сторона js элегантно решать проблема фриз поток старт reanimated создавать jsпоток который связывать uiпотоком jsi jsi javascript interface  это новый способ общаться поток написать плюс работать синхронный режим получаться поток который мочь синхронно обрабатывать анимация значит main jsтред полностью освобождать вызывать создание sharedvalue главный jsпотоке сам значение создаваться поток ui затем reanimated предоставлять мы ссылка главный jsпотоке reanimated jsпотоке это давать мы возможность управлять анимация любой jsпотока особенность jsпоток создавать reanimated связанный ui синхронно jsi значит любой изменение немой быть сразу отрабатывать также мочь изменять анимированный значение главный jsпотока быть обрабатывать асинхронно bridge это сделать решение проблема параллельный запуск анимация разный поток хотеть завязываться какието жест мочь это сделать полностью uiпотоке это синхронно спасибо workletам хотеть запускать анимация js мочь запускать асинхронно все равный быть попадать uiпоток запуск асинхронный самый workletы  это способ помечать функция помещать именно reanimated jsпоток парсинг наш код бабель функция который помечать workletдирективой быть скопировать reanimated jsпоток главное js поток оставаться позволять управлять анимация любой поток вместе контекст переменный который определять контекст поэтому внутри такой функция мы доступный переменная вне пример работать плевать полностью замораживать jsтред абсолютно все происходить reanimated jsпотоке код высоко добавлять gesturehandler вызов функция run перенести uiпоток являться best practices использовать reanimated короче случай мы подходить animated api хотеть анимировать свойство лейаут например ширина случай анимироваться нативный сложный взаимосвязь анимированный значение мы требоваться контроль  плюс минус плюс нативный перфоменс прекрасно работать жест работать весь свойство реализовать текстмаска прозрачный работа анимация любой сложность минус совместимость animated api библиотека rn svg делать дизайнер нарисовать анимация несколько левитировать объект мы это реализовать мочь взять rn svg знакомый reanimated указывать пример код перемещение девушка фон аналогичный способ перемещаться остальной объект анимация  useeffect   floatvalue  withrepeat withsequence withtiming1 duration 2000 withtiming1 duration 2000    1 true  girlfloat const animatestyle  useanimatedstyle     transform      translatey interpolate        floatvalue        1 1        10 10           return   animatedsvg      styleanimatestyle            это все делать помощь svg например помощь создавать интерактивный интерфейс видно все работать дело помощь sharedvalue reanimated изменять число строка объект массив булев значение пример нить представлять вид строка svg который лет рассчитывать какойто наш логика зависимость обновлять это работать ui поток использовать svg обычно реализовать радиальный прогрессбары который очень любить фитнес приложение делать разный график условие большой интерактивность плюс минус плюс  полный управление очень мало весить минус двойной работа анимация делать дизайнер разработ",
    "tags": [
        "анимации",
        "react native",
        "reanimated",
        "animated",
        "under the hood",
        "skia",
        "lottie",
        "svg",
        "opengl"
    ]
}
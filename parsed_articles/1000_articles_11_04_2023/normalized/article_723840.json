{
    "article_id": "723840",
    "article_name": "Пришло время пересмотреть структуру проектов на .NET",
    "content": "это  немного вольный перевод статья maybe its time to rethink our project structure with net 6 tim deschryver подход создание сервис помощь minimal apis который помогать мы сделать архитектура приложение чистый простой легкий поддержка развитие  пост казаться вдохновлять продолжение идея  vertical slice architecture  некоторый ответ  излишний разделенность несвязность обработчик mediatr место вызов  c релиз net 6 появляться новый упрощенный подход быстрый создание сервис   minimal apis  этот статья появляться новый подход появляться новый вопрос связанный организация код внутри проект давать вначале посмотреть выглядеть minimal apis такой minimal apis minimal apis правда сводить конфигурация код минимум отказываться контроллер  startupcs  команда  dotnet new web  создавать новый проект один файл код   programcs  webapplication    appsettingsjson    programcs    webapplicationcsproj  programcs  использоваться toplevel statements настройка сборка запуск приложение все занимать 4 строка код var builder  webapplicationcreatebuilderargs var app  builderbuild   appmapget   hello world   apprun запускать код сервис который уметь принимать запрос отвечать это выглядеть непривычный  рано структура папка проект net web api состоять файл  programcs  метод main запуск api файл  startupcs  метод configureservices configure настройка сервис пайплайн обработка запрос папка  controllers  файл контроллер содержать эндпоинт приложение webapplication    appsettingsjson    programcs    startupcs    webapplicationcsproj  controllers        controllercs большинство приложение пример который видеть этот структура сохраняться служить основа новый слой строиться поверх мера рост проект сложность структура существовать api вероятно выглядеть вариация такой разделение технический зона ответственность рамка один проект либо разный слой разделяться несколько проект webapplication    appsettingsjson    programcs    startupcs    webapplicationcsproj  configurationextensions        servicecollectioncs        applicationbuildercs controllers         commands         queries         modelsdtos         interfaces         infrastructure         подобный структура увидеть проект dotnetarchitectureeshoponweb  основывать принцип книга architecting modern web applications with aspnet core and azure  это отраслевой стандарт следовать незнакомый проект структура быстро сориентироваться посмотреть контроллер устройство сразу мочь понимать какой действие уметь делать сервис общаться другой уровень приложение minimal api диктовать мы первоначальный структура проект самый время пересматривать она несколько вариант api один файл самый простой способ добавлять функциональность minimal apis  это просто продолжитьдобавлять эндпоинт обработчик вспомогательный метод конфигурация файл  programcs  файл быстро раздуваться разный код смешать один место var builder  webapplicationcreatebuilderargs builderservicesaddscopedicustomersrepository customersrepository builderservicesaddscopedicartrepository cartrepository builderservicesaddscopediordersrepository ordersrepository builderservicesaddscopedipayment paymentservice   var app  builderbuild appmappostcarts          appmapputcartscartid          appmapgetorders          appmappostorders            apprun api контроллер второй вариант  вернуться знакомый привычный все еще мочь добавлять контроллер проект использовать шаблон приложение оставаться проект контроллер webapplication    appsettingsjson    programcs    webapplicationcsproj  controllers        cartscontrollercs        orderscontrollercs использовать контроллер нужно зарегистрировать приложение помощь метод iservicecollectionaddcontrollers сделать маппинг обработчик маршрут помощь mapcontrollers  var builder  webapplicationcreatebuilderargs builderservicesaddcontrollers builderservicesaddscopedicustomersrepository customersrepository builderservicesaddscopedicartrepository cartrepository builderservicesaddscopediordersrepository ordersrepository builderservicesaddscopedipayment paymentservice   var app  builderbuild appmapcontrollers apprun проблема текущий структура проект такой структура делить приложение слой зона ответственность код  маршрутизация бизнеслогика хранение данные добавлять новый функциональность приходиться изменять существовать файл несколько слой возможно создавать новый время отладка приходиться перемещаться многочисленный файл слой способ реализация простой сложный эндпоинтов случай сильно отличаться  нужно вносить изменение несколько слой приложение простой сложный эндпоинт двигаться одномуконвейер реализация простой эндпоинт становиться значительно сложно необходимо сожаление код требоваться выше вероятность совершать ошибка еще контроллер иметь тенденция раздуваться время domain driven api переходить традиционный структура папка разделять приложение горизонтальный слой доменноориентированный структура который приложение группироваться домен каждый домен приложение сгруппировывать модуль фич отдельный папка структура простой приложение использовать модульный подход выглядеть примерно webapplication    appsettingsjson    programcs    webapplicationcsproj  modules    cart          cartmodulecs    orders           ordersmodulecs первый взгляд это незначительный изменение оно немного запутывать неочевиднооткуда начинать чтение код понимать преимущество структурыпосмотреть подробно файл структура похожий domain layer описывать статья domain model structure in a custom net standard library  такой модуль модуль состоять два часть внутренний логика обработчик метод подключение модуль кпроект минимальный реализация модуль  это класс два метод первый настройка diконтейнера второй регистрация эндпоинтов это чемто похоже старый  startupcs  новый  programcs  отдельный модуль основной преимущество все нужный модулюизолировать внутрия быстро понятькакий зависимость потреблять это облегчать поиск ненужный код полезно написание тестовпотой позволять сделать изолированный система модуль public static class ordersmodule      public static iservicecollection registerordersmodulethis iservicecollection services              servicesaddsingletonnew orderconfig         servicesaddscopediordersrepository ordersrepository         servicesaddscopedicustomersrepository customersrepository         servicesaddscopedipayment paymentservice         return services            public static iendpointroutebuilder mapordersendpointsthis iendpointroutebuilder endpoints              endpointsmapgetorders                                  endpointsmappostorders                                  return endpoints       подключать модуль мы нужно вызывать  programcs двасозданный метод модуль это сделать модуль подключать приложение var builder  webapplicationcreatebuilderargs builderservicesregisterordersmodule   var app  builderbuild appmapordersendpoints apprun подход позволять сохранять  programcs  простой четко разделять модуль собственный зависимость настройка общий инфраструктура например логирование аутентификация мидлвара swagger  приложение также оставаться  programcs  использоваться модуль узнавать настраивать популярный библиотека посмотреть minimal apis at a glance by david fowler minimalapiplayground by damian edwards  добавлять новый модуль должный снова создавать класс модуль добавлять метод регистрация настройка затем вызывать  programcs  помощь небольшой абстракция часть рутина автоматизировать автоматический регистрация модуль автоматизировать процесс регистрация новый модуль мы понадобиться добавлять новый интерфейс  imodule  интерфейс быть использовать поиск модуль реализовывать данный интерфейс приложение искать модуль помощь рефлексия регистрировать каждый находить модуль приложение public interface imodule      iservicecollection registermoduleiservicecollection builder     iendpointroutebuilder mapendpointsiendpointroutebuilder endpoints    public static class moduleextensions       this could also be added into the di container     static readonly listimodule registeredmodules  new listimod",
    "tags": [
        "minimal api",
        ".net 6",
        ".net 7",
        "c#",
        "asp.net core",
        "mvc"
    ]
}
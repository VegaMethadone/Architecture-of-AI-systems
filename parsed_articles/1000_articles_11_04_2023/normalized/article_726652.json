{
    "article_id": "726652",
    "article_name": "Создаем чат-бот для распознавания изображений на основе нейронной сети MobileNetV2",
    "content": "автор статья виктория ляликов все привет сегодня рассматривать решение задача многоклассовый класификация основа датасет овощ фрукт помощь сверточный нейронный сеть архитектура mobilenetv2 создавать чатбот который классифицировать изображение сегодня никто удивлять чатбот который мочь вести диалог естественный язык наш день школьник учить создавать свой чат бот почему создавать бот который видеть рассматривать процесс создание пока самый простой бот который качество сообщение принимать фото отвечать он изображать поиск набор данный классификация изображение распознавание цветок животное тип раковый опухоль тд останавливать свой выбор датасет который содержать различный изображение фрукт овощ состоять 36 класс дальнейший доработка такой бот использовать поиск рецепт основа несколько изображение датасет fruits and vegetables image recognition доступный  kagglecom  состоять 3825 изображение такой фрукт овощ банан яблоко груша виноград апельсин киви арбуз гранат ананас манго огурец морковь стручковый перец лук картофель лимон помидор редька свекла капуста салат шпинат соевый боб цветной капуста болгарский перец перец чили репа кукуруза сладкий кукуруза сладкий картофель паприка халапеньо имбирь чеснок горох баклажан данные содержать 100 изображение обучение 10 изображение валидация 10 изображение тестирование некоторые папка немного мало приступать решение задача многоклассовый классификация загружать необходимый библиотека определять путь изображение определять некоторые параметр import cv2 import pathlib import tensorflow as tf import numpy as np import matplotlibpyplot as plt from tensorflowkeraslayers import dense from tensorflowkerasmodels import model from tensorflowkerascallbacks import callback modelcheckpointearlystopping reducelronplateau from tensorflowkeraspreprocessingimage import imagedatagenerator from kerasapplicationsmobilenet_v2 import mobilenetv2 from tensorflowkerasapplications import mobilenet_v2 from tensorflowkeras import layers   директория обучение train_dir  pathlibpathdatasetsfruits1train  директория тестирование test_dir  pathlibpathdatasetsfruits1test  директория валидация val_dir  pathlibpathdatasetsfruits1validation img_height  224 img_weigth  224 загружать изображение быть помощь полезный утилита  image_dataset_from_directory  библиотека  keraspreprocessing  вернуть  tfdatadataset  который возвращать пакет изображение подкаталог вместе метка класс сохранять класс овощ фрукт список  class_names  train_ds  tfkerasutilsimage_dataset_from_directorytrain_dir test_ds  tfkerasutilsimage_dataset_from_directorytest_dir val_ds  tfkerasutilsimage_dataset_from_directoryval_dir class_names  dictziptrain_dsclass_names rangelentrain_dsclass_names num_classes  lenclass_names 36 класс посмотреть изображение работа изображение очень подходить сверточный нейронный сеть поэтому основа взять mobilenetv2 предобученный большой количество изображение база imagenet mobilenetv2 являться облегченный глубокий нейронный сеть который использовать сверточный блок глубина 53 слой сеть иметь 2 тип блок остаточный блок шаг 1 рисунок слева блок шаг 2 уменьшение размер рисунок справа каждый блок иметь 3 различный слой сверток 1х1 иметь активационный функция relu6 fsmax06 глубинный сверток сверток 1х1 линейный функция загружать изображение наш предобученный нейронный сеть необходимо преобразовывать формат который принимать наш модель перевести тензор плавать точка затем производить нормализация изображение интервал 0 255 интервал 0 1это сделать использование класс imagedatagenerator данный класс удобный полезный брать изображение прямо папка также позволять расширять набор данные счет создание копия изображение изменять различный свойство изображение смещение поворот увеличение тд подход позволять модель обобщать извлекать различный признак достаточно передавать конструктор класс набор различный значение необходимый мы параметр обо все позаботиться train_generator  imagedatagenerator preprocessing_function  mobilenet_v2preprocess_input rotation_range  32 zoom_range  02 width_shift_range  02 height_shift_range  02 shear_range  02 horizontal_flip  true fill_mode  nearest использоваться предобученный нейронный сеть перевод изображение тензор плавать точка быть использовать готовый метод  mobilenet_v2preprocess_input воспользоваться метод  flow_from_directory  применение получать преобразование наш изображение обучать валидационный набор данный train  train_generatorflow_from_directorytrain_dir target_size  img_heightimg_width  изображение иметь 3 цветовой канал color_mode  rgb  создавать бинарный признак метка класс  class_mode  categorical batch_size  32 shuffle  true seed  123  validation  train_generatorflow_from_directoryval_dir target_size  img_heightimg_width  изображение иметь 3 цветовой канал color_mode  rgb  создавать бинарный признак метка класс  class_mode  categorical batch_size  32 shuffle  true seed  123 обращать внимание указывать параметр shuffle  true говорить изображение разный класс быть перемешиваться сначала быть поступать изображение первый папка второй тд затем последний это необходимый мочь легко обращаться метка класс переходить построение модель загружать предварительно обучать версия сеть размер входной изображение 224 224 3 весы imagenet mobilenet_  mobilenetv2 input_shape  img_heightimg_width3 include_top  false weights  imagenet pooling  avg блокировать возможность изменение значение переменный предобученный модель оставлять возможность обучаться последний слой классификация mobilenet_trainable  false создавать 2 обычный слой 128 нейрон последний слой классификация количество нейрон равный количество необходимый мы класс активационный функция  softmax inputs  mobilenet_input x  dense128 activation  relumobilenet_output x  dense128 activation  relux outputs  densenum_classes  activation  softmaxx собирать модель сетисостоять предобученный модель добавлять новый слой mobilenet  modelinputs  inputs outputs  outputs использовать метод  modelcheckpoint  сохранение весы модель основываться потеря этап проверка метод earlystopping ранний остановка обучение early_stopping  earlystopping monitorval_loss modemin patience  2 verbose1 restore_best_weightstrue  checkpoint modelcheckpointfruit224mobileh5                         monitor  val_loss                         mode  min                        save_best_only  true  callbacks  early_stopping checkpoint компилировать подгонять модель использовать оптимизатор адам категориальный перекрестный энтропия mobilenetcompileoptimizer loss categorical_crossentropymetrics  accuracy  history  mobilenetfit train validation_data  validation batch_size  32 epochs  20 callbacks  callbacks оценивать модель тестовый данные использовать метод evaluate eval_loss eval_accuracy  mobilenetevaluatetest посмотреть точность тестовый значение  получать предсказывать значение тестовый изображение pred  mobilenetpredicttest  получать номер класс максимальный вес pred  npargmaxpredaxis1  сопоставлять класс labels  trainclass_indices labels  dictvk for kv in labelsitems pred  labelsk for k in pred  получать предсказывать класс y_test  labelsk for k in testclasses  оценивать точность from sklearnmetrics import accuracy_score acc  accuracy_scorey_test pred printfaccuracy on the test set 100acc2f отличный результат модель обучать вес сохранять переходить работа чатбот прежде начинать разработка бот необходимо зарегистрировать получать уникальный id владелец бот чей аккаунт создаваться создание свой бот telegram специальный бот botfather  находить подтверждать начало диалог набирать команда  start  далее вводить команда  newbot  вводить имя бот mytestbot username бот recfood_bot username должный обязательно заканчиваться bot уникальный работа бот быть использовать библиотека aiogram предоставлять множество удобный функция управление бот обработка событие работа клавиатура интеграция другой сервис тд устанавливать pip install aiogram далее работа бот мы понадобиться токен бот который являться уникальный идентификатор предос",
    "tags": [
        "mobilenetv2",
        "машинное обучение",
        "исскуственный интеллект",
        "чат бот"
    ]
}
{
    "article_id": "725706",
    "article_name": "Разворачиваем Kubernetes-кластер на bare metal под управлением Deckhouse и создаем в нем виртуальные машины",
    "content": "новый релиз kubernetesплатформы deckhouse v143  появляться система виртуализация  основывать современный технология kubevirt cilium linstor позволять удобный привычный пользователь платформа режим запускать виртуальный машина управлять жизненный цикл статья рассматривать это практика развертывать deckhouse baremetalсервере запускать немой виртуальный машина протестировать обеспечиваться связь компонент кластер помощь магия cilium виртуализация кластер новый системный виртуализация появляться возможность запускать привычный виртуальный машина вм прямо kubernetes работать они ресурс кластер это полезный работа приложение требоваться какието специфический инструмент работа который невозможный k8s также случай переход старый инфраструктура вм контейнеризация приложение случай развертывать один часть приложение кластер другой подымать рядом отдельный вм создавать средство deckhouse объединять кластер один сеть подготовка сервер установка мы понадобиться сервер соответствующий минимальный требование менее 4 ядро cpu менее 8 гб ram менее 40 гб дисковый пространство httpsдоступ хранилище образ контейнер registrydeckhouseio сервер должно устанавливать пакет container runtime например containerd docker также понадобиться персональный компьютер который производиться установка должный соответствовать следующий требование ос windows 10 macos 1015 linux ubuntu 1804 fedora 35 устанавливать docker запуск инсталлятор deckhouse инструкция установка  ubuntu   macos   windows  httpsдоступ хранилище образ контейнер registrydeckhouseio sshдоступ ключ сервер который masterузлом будущее кластер качество сервер тест 1uсервер supermicro следующий характеристика 2 процессор intelr xeonr cpu e5620  240ghz 16 ядро 40 гб оперативный память 256 гб ssd корень ос 320 гб отдельный диск хранение данный виртуальный машина первый очередь устанавливать ос выбирать подходить список поддерживать ред ос 73 alteros 7 astra linux special edition 172 centos 7 8 9 debian 9 10 11 rocky linux 8 9 ubuntu 1804 2004 2204 наш случай это  ubuntu server 22042 lts  устанавливать обычный режим разбивать диск раздел выбирать конец установка никакой дополнительный софт кроме opensshсервера загружаться свежий ос настраивать доступ ключ основной пк  sshcopyid ipадрес сервер команда срабатывать ключ заранее сгенерировать сгенерировать команда  sshkeygen t rsa  подключаться сервер убеждаться настраивать нужно  ssh 192168238 welcome to ubuntu 22042 lts gnulinux 515060generic x86_64    documentation  httpshelpubuntucom   management     httpslandscapecanonicalcom   support        httpsubuntucomadvantage    system information as of wed mar  1 112313 am utc 2023    system load  00                temperature             460 c   usage of    27 of 29235gb   processes               135   memory usage 2                 users logged in         0   swap usage   0                 ipv4 address for enp3s0 192168238     introducing expanded security maintenance for applications    receive updates to over 25000 software packages with your    ubuntu pro subscription free for personal use       httpsubuntucompro  expanded security maintenance for applications is not enabled  0 updates can be applied immediately  enable esm apps to receive additional future security updates see httpsubuntucomesm or run sudo pro status   last login wed mar  1 103401 2023 from 192168235 работать отключаться сервер выполнять команда  exit  нажимать сочетание клавиша  ctrl  d  установка deckhouse сервер конфигурация будущий кластер переходить  страница конфигурация  будущий кластер раздел getting started официальный сайт deckhouse нужно указывать шаблон доменный имя вебинтерфейс будущий компонент кластер такой grafana kubernetes dashboard шаблон иметь формат  sexamplecom   s  имя домен системный приложение кластер нажимать кнопка  далее установка  следующий страница отображаться сгенерировать содержимое файл конфигурация  configyml  вводить ранее шаблон доменный имя появляться секция  publicdomaintemplate   секция общий параметр кластер clusterconfiguration  использовать версия api deckhouse platform apiversion deckhouseiov1  тип секция конфигурация kind clusterconfiguration  тип инфраструктура bare metal static облако cloud clustertype static  адресный пространство podов кластер podsubnetcidr 101110016  адресный пространство serviceов кластер servicesubnetcidr 102220016  устанавливать версия kubernetes kubernetesversion 123  домен кластер clusterdomain clusterlocal   секция первичный инициализация кластер deckhouse initconfiguration  использовать версия api deckhouse apiversion deckhouseiov1  тип секция конфигурация kind initconfiguration  секция параметр deckhouse deckhouse    использовать канал обновление   releasechannel stable   configoverrides     global       modules          шаблон который использоваться составление адрес системный приложение кластер          например grafana sexamplecom доступный домен grafanaexamplecom         publicdomaintemplate sexamplecom      включать модуль cnicilium     cniciliumenabled true      конфигурация модуль     cnicilium        режим работа тоннель       tunnelmode vxlan   секция параметр bare metal кластер staticclusterconfiguration  использовать версия api deckhouse apiversion deckhouseiov1  тип секция конфигурация kind staticclusterconfiguration  список внутренний сеть узел кластер например 1004024 который  использоваться связь компонент kubernetes kubeapiserver kubelet себя  каждый узел кластер иметь сетевой интерфейс  ресурс staticclusterconfiguration создавать internalnetworkcidrs  1921682024 нужно обращать внимание момент последний секция сгенерировать конфигурационный файл   staticclusterconfiguration  нужно указывать сеть который смотреть основной сетевой интерфейс сервер т борт несколько    ваш машина сетевой интерфейс секция удалять  модуль реализовать cni заменять  cniflannel   cnicilium  это необходимый работа виртуальный машина  сетевой взаимодействие организовывать база  cilium  также указывать параметр работа тоннель  tunnelmode vxlan  сохранять получать содержимое файл  configyml  полагать любой отдельный каталог установка deckhouse установка платформа использоваться специальный подготовить dockerобраз который необходимо передавать создавать конфигурационный файл sshключи доступ masterузел переходить каталог создавать файл выполнять команда docker run pullalways it v pwdconfigymlconfigyml v homesshtmpssh registrydeckhouseiodeckhouseceinstallstable bash некоторый время образ скачаться хранилище запуститься терминал отображать приглашение командный строка внутри создавать контейнер deckhouse root9134e1cd790b   выполнять команда dhctl bootstrap sshuserusername sshhostmaster_ip sshagentprivatekeystmpsshid_rsa    configconfigyml    askbecomepass запрос пароль sudo вводить пароль пользователь сервер sudo сервер настраивать такой образ запрашивать пароль вводить параметр  askbecomepass  установка занимать 15 30 минута процесс отображаться подробный лог завершение снова увидеть приглашение командный строка контейнер финальный настройка кластер оставаться выполнять несколько шаг кластер готовый работа добавлять конфигурация kubectl обычный пользователь вызывать каждый sudo  mkdir kube  sudo cat etckubernetesadminconf  kubeconfig убеждаться вызов команда доступный повышенный привилегия  kubectl get no name                  status   roles                  age     version virtualizationhabr   ready    controlplanemaster   3d20h   v12315 наш кластер состоять один узел нужно снимать taint выполнять сервер команда kubectl patch nodegroup master type json p op remove path specnodetemplatetaints ваш кластер состоять несколько узел вместо снятие taintа  добавлять кластер дополнительный узел  нужно подождать несколько минута пока deckhouse переконфигурироваться проверять статус команда kubectl n d8system exec deploydeckhouse  deckhousecontroller queue list ответ отображать текст описание модуль интересовать последний часть summary  main queue empty  68 other queues 1 active 67 empty 1 task  total 1 task to h",
    "tags": [
        "kubernetes",
        "виртуальная машина",
        "kubevirt",
        "виртуализация",
        "devops"
    ]
}
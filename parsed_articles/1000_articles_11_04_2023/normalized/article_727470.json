{
    "article_id": "727470",
    "article_name": "Добро пожаловать в мир приключений по API-серверу Kubernetes. Часть 1",
    "content": "kubernetes состоять несколько компонент значительный часть взаимодействие итоговый пользователь система осуществляться помощь apiсервера представлять себя отправной точка многий функция который проект создавать время свой существование расширять поддержание дополнительный произвольный функциональность поэтому apiсервер оказываться ограниченный место который изначально задумывать размещение крайний мера хороший размещение поведение apiсервера kubernetes соответствовать ожидание понимать почему система выполнять нежелательный действие особенно речь идти производительность хотя доступ исходный код проект непросто осуществлять навигация он определять какой ветвь код использоваться большинство сложный система разрушение код мелкий компонент обратный сборка помогать гораздо быстро определять именно происходить системный сбой дополнительно модифицировать компонент соответствие пользовательский кейс новый серия статья мир приключение apiсерверу kubernetes k8s asa погружаться деталь работа apiсервера получать представление работать также какой компонент взаимодействовать параллельно поэкспериментировать замена пользовательский компонент создавать инструментарий рассматривать другой пользователь модифицировать соответствие пользовательский кейс знать возможно построить наш собственный  k8s as интерфейс хранилище большинство apiсерверов базовый функция apiсервера kubernetes  прием данные хранение возврат запрос сосредотачиваться apiсервер хранить данные что пойти речь статья модуль  apiserver   нужный подробность пакет  storage наш хороший друг  etcd сервер api  etcd вызов  storageinterface  напрямую  пропускать справочный информация  разработка  runtimescheme кодирование декодирование прохождение трансформация определение  configmap   занятый человек  итоговый мысль модуль  apiserver    первый несколько параграф серия сосредотачиваться один модуль кодовый база kubernetes  модуль apiserver  представлять себя самопровозглашенный  универсальный библиотека создание агрегированный apiсервера kubernetes  набор пакет универсальный функциональность она ожидать apiсервера  audit authentication authorization  многий другой некоторый пакет содержать дополнительный пакет который следовать знакомый схема предоставление интерфейс затем один несколько конкретный реализация интерфейс такой пример   пакет storage пакет  storage    пакет  storage  нужный хранение данные говорить формально предоставлять  интерфейс операция связывать база данные  центр вышеупомянутый интерфейс находиться  storageinterface  который скрывать себя операция связывать хранилище быть фундаментальный компонент слой apiсервера интерфейс довольно простой содержать 8 метод основной операция который ожидаться хранение извлечение метод включать versioner versioner versioner   это метод доступ который возвращать реализация  интерфейс  versioner  предоставлять пакет  storage  последний использоваться абстрагировать управление версия ресурс createctx contextcontext key string obj out runtimeobject ttl uint64 error create  отвечать добавление данные форма  runtimeobject  обращаться базовый реализация хранилище предоставлять key поддерживать установка time to live  ttl  срок действие данные  key  должный истекать определенный период позволять передавать отдельный  runtimeobject out  который использовать представление состояние объект подготовка сохранение deletectx contextcontext key string out runtimeobject preconditions preconditions validatedeletion validateobjectfunc cachedexistingobject runtimeobject error delete  отвечать удаление данные заданный  key  возврат данный вид  runtimeobject  это позволять задавать  preconditions  который должный выполнять успешный выполнение операция мочь предоставлять  uuid  объект  resourceversion  задавать нужно функция проверка объект  validatedeletion  последний представлять себя простой хук вид  funcctx contextcontext   obj runtimeobject error  последний предоставлять аргумент  cachedexistingobject  использовать оптимизация процесс удаление случай состояние желаемый версия объект подлежать удаление известно версия кэшировать объект соответствовать версия  resourceversion   preconditions  выполнять проверка это связанный устаревать версия кэшировать объект случай мы нужно извлекать новый версия повторный попытка watchctx contextcontext key string opts listoptions watchinterface error watch  возвращать  watchinterface  который позволять наблюдать изменение данный предоставлять  key  течение определенный период время интерфейс  watch  представлять себя простой мощный абстракция поддерживать два операция  resultchan chan event stop  обеспечивать высокий степень свобода реализация однако  listoptions  который позволять указывать версия ресурс запуск просмотр пропускать немного базовый реализация такой параметр  recursive bool  указывать предоставлять  key   префикс объект который соответствовать должный включать просмотр когдалибо устанавливать флаг  w  watch  выполнение команда  kubectl  мочь увидеть ответ тип  error you may only specify a single resource type  это пример базовый механизм хранение организация данные внутри который передаваться конечный пользователь getctx contextcontext key string opts getoptions objptr runtimeobject error get  извлекать данные заданный  key  возвращать  objptr  параметр позволять игнорировать ошибка связанный  key  находить также указывать ограничение версия ресурс извлекать объект getlistctx contextcontext key string opts listoptions listobj runtimeobject error getlist  похожий  watch  набор опция вместо предоставлять интерфейс получение обновление ресурс возвращать вид список объект guaranteedupdatectx contextcontext key string destination runtimeobject ignorenotfound bool preconditions preconditions tryupdate updatefunc cachedexistingobject runtimeobject error guaranteedupdate  похожий  delete  немного сложно принимать определенный вызывающий сторона  updatefunc  форма  funcinput runtimeobject   res responsemeta output runtimeobject ttl uint64 err error  функция вызывать повторно проверка предварительный условие повторять любой попытка сохранение изменять объект сбой  tryupdate  выбирать выход цикл вернуть сообщение ошибка такой обновление обеспечивать устойчивый гибкий операция вызывать объект возможность определение должно текущий состояние приводить конфликт   countkey string int64 error count   это самый простой доступный метод возвращать количество объект предоставлять  key  часто бывать префикс отличие другой метод вызывающий сторона нужно явно определять это такой хотя углубляться обработчик конечный точка kubernetes api который знакомый увидеть некоторый команда  kubectl  метод  clientgo  который вызывать мочь сопоставлять выполнение этот операция хранение кулиса хотя интерфейс  storage  сообщать мы мочь взаимодействовать решение хранение данный говорить мы самый дело сохраняться наш хороший друг etcd прежде пойти далеко должный порекомендовать пойти прочитывать  пост   майкл гаш  внутренность  etcd  сосредотачиваться взаимодействие kubernetes  etcd  время  storageinterface  замечать высокий степень сходство  grpc api  предоставлять  etcd  метод интерфейс настолько реализация  etcd  становиться относительно легкий получать представление работать  etcd  мочь загружать последний версия вместе  etcdctl  официальный ролик  etcd_verv356   curl l httpsgithubcometcdioetcdreleasesdownloadetcd_veretcdetcd_verlinuxamd64targz o tmpetcdetcd_verlinuxamd64targz  tar xzvf tmpetcdetcd_verlinuxamd64targz etcdv356linuxamd64etcd etcdv356linuxamd64etcdctl stripcomponents1  rm f tmpetcdetcd_verlinuxamd64targz примечание  обязательно перемещать  etcd   etcdctl   каталог ваш  path   etcd version etcd version 356 git sha cecbe35ce go version go11615 go osarch linuxamd64 запускать  etcd  фоновый режим начинать выполнять операция  etcdctl     etcd  devnull 21  1 442084   etcdctl member list 8e9e05c52164694d started default httplocalhost2380 httplocalhost2379 false   etcdctl get  prefix   etcdctl put hello world ok   etcdctl get hello hello world   etcdctl",
    "tags": [
        "network",
        "kubernetes",
        "k8s",
        "slurm",
        "it компании",
        "it инфраструктура",
        "карьера программиста",
        "карьера ит специалиста"
    ]
}
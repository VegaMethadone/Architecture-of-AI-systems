{
    "article_id": "726622",
    "article_name": "Оптимизация бюджета с помощью Telegram-бота",
    "content": "привет влад это статья перемена обстановка повлечь себя кардинальный изменение механизм расчет мой бюджет дальнейший разработка средство подсчет возникновение идея оставаться определяться тип проект именно представлять webприложение мобильный приложение бот функционал необходимо внедрять первый очередь поиск аналог создание информационный база разработка авторский инструмент хотеться посмотреть аналог похожий тема оказываться множество мобильный приложение огромный система рассчитать учет личный средство указывать быть необходимость находиться крайне просто поскольку хотеться какогото компактный решение выбор пасть создание телеграммбот выписывать тезис функциональный составлять бот который хотеть использовать бот    актуальный валютный курсы  далее добавление криптовалютный курс  конвертация валютный пара поддержка арифметический операция   ведение бюджет учет расход единый база данные локализация другой язык этот опция изначально  предусматриваться определяться основной функционал необходимо разбираться инструментарий стек технология который разрабатывать данный бот выбор технический стек выбор пасть любимый я nestjs строгий структура идеально подходить маленький проект осуществление возможность масштабирование очень пригождаться создание локализация добавление новый модуль мой проект создание единый база данные использоваться postgresql углубляться рутина разработка необходимо находить инструмент разработка nestjs счастие такой находиться итак список hypeertech  nestjstelegraf   модуль обеспечивать быстрый простой способ создание telegramботов глубокий интеграция приложение nestjs toonvanstrijp  nestjsi18n   библиотека работа язык проект порадовать очень гибкий настройка данный модуль генерация тип typeorm  typeorm   orm библиотека основной цель который являться возможность писать функциональный стиль весь код переходить чистый sql также я использовать библиотека нуждаться представление такой axios  использовать создание запрос удалять api dotenv  работа локальный переменный     первый разрабатывать модуль становиться расчет курс валюта основной проблема он  откуда брать актуальный курсы большинство ариисточник либо платный либо неактуальный поэтому поискать бесплатный источник останавливаться  fawazahmed0  currencyapi  качество api получение курс криптовалюта выбирать  binance api  инструмент источник известно переходить непосредственно реализованный функционал    базовый функциональность рис1 экран приветствие изначально старт бот капот происходить запись пользователь telegram_id language_code дальнейший такой образ происходить работа бюджет текущий пользователь расход также локализация    далее начало работа бот нужно выбирать доступный пункт  начинать первый пункт  ведение бюджет  рис2 добавление информация бюджет итак вход доступный подпункт который  этот добавление данный бюджет второй  отображение данный текущий бюджет начинать работа бот следовать вводить изначальный значение выбирать пункт добавление данный бюджет открытие пункт выходить краткий справка заполнение справка четко описывать тот значение который принимать бот случай правильный занесение бот отвечать данные добавлять такой образ вводить также дробный значение вплоть сотая далее проверка вводить значение воспользоваться пункт     ведение бюджет  отображение бюджет итог возможность получать краткий справка текущий бюджет валюта мочь абсолютно любой лишь подходить формат 34 буква верхний регистр вводить новый значение добавлять валюта происходить перезапись данные такой нехитрый образ обходить аналогичный пункт свой функциональность внесение доход ибо считать данный функциональность бот излишний    рис3 справка текущий бюджет данные бюджет вводить начинать добавлять информация расход аналогично исключение формат вводить данные расход необходимо делить категория один решение становиться добавление группа расход одноименный таблица функционал внесение расход нажатие пункт учет расход  добавление расход появляться справочный информация категория формат вводить данные аналогия заносить данные формат описывать пример удачный попытка бот отвечать данные добавлять занесение происходить соотношение валюта бюджет валюта расход отсутствие данный валюта бюджет бот отвечать данные текущий валюта либо данный сумма расход превышать сумма занести бюджет  рис4 пример ошибка функционал получение расчет сумма курс валюта рис5 выбор основной валюта нажатие пункт выпадать меню следовать выбирать главный валюта относительно который быть производиться дальнейший расчет далее появляться подменивать сверху указывать текущий валюта расчет несколько подпункт  курсы валюта получать курсы весь перекрестный пара либо получать курсы текущий валюта также введение основной валюта сразу вводить сумма выходить режим необходимо нажимать соответствующий кнопка  специально usd отдельный конвертация usdt популярный криптовалюта отдельно хотеться отмечать работа локализация умолчание вход бот сторонний язык ставиться английский помимо русский переключение язык отдельный команда меню   lang развертывание экземпляр бот развертывание бот происходить максимально просто вначале нужно проверять устанавливать компьютер nodejs ссылка  httpsnodejsorgen  мочь скачать версия ваш операционный система затем поставлять глобально пакет yarn команда npm i g yarn  нужно склонировать репозиторий команда git clone нужный каталог затем производить установка зависимость команда yarn install  далее создавать файл env  путем копирование подобный файл который вводить данный токен бот процесс создание бот botfather описывать становиться также данный ваш учетный запись postgressql она хостинг адрес основной бд быть записываться данные бот  создавать сценарий запись бот докер контейнер либо следовать путем который пойти  запускать бот демон процесс pm2 запуск pm2 необходимо выполнять команда npm i g pm2 выполнять последовательно команда yarn build pm2 start yarn startprod такой образ запускать свой экземпляр бот дальнейший развитие целое основной функционал создавать хватать мочь отмечать редактирование категория довольно изначально считать это большой проблема также аналогичный функциональность хватать расход это мой мнение лишний быть какието предложение помимо сказать готовый это обсуждать комментарий исходник телеграмма бот доступный  ссылка  fixexpencebot исходный код находиться ссылка",
    "tags": [
        "telegram bot",
        "финансы",
        "курсы валют",
        "nest.js",
        "postgresql",
        "typescript",
        "typeorm",
        "i18n",
        "pm2"
    ]
}
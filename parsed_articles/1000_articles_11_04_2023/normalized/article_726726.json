{
    "article_id": "726726",
    "article_name": "IT-Забавы. 1. Обход конем шахматной доски с получением Магического квадрата",
    "content": "задача находить обход конь весь шахматный доска ход образовывать непрерывный цепочка посещать поле 1 раз номер 1 64 сумма номер клетка обход каждый столбец равный  каждый строка давать сумма 260  маршрут замыкать поле 64 ход поле 1    маршрут симметричный относительно центр    оба диагональ сумма 260   необязательный дополнительный требование история обход условие 12 решать многие рекомендовать решать доска 5х4 большой доска любой форма гладкий периметр метод простой делать ход самый изолированный клетка количество черный белый поле должно позволять обход обход условие 16 решать 100 год назад весь условие 17 встречать теория конь менять цвет поле каждый ход доска nxn магический сумма равный s  nnn12  обход конь сумма 1й диагональ четный s четный n делиться 4 81216 обход симметричный замыкать иначе маршрут состоять 63 ход 32й ход симметричный конь неверно существовать обход симметричный сам относительно вертикаль диагональ поворот центральный симметрия обход каждый маршрут поле 1 поле 64 обратный маршрут обратный нумерация немой сохраняться свойство 17 первый маршрут посчитать средний ветвление возможный продалжение каждый глубина метод монтекарло становиться ясный форма дерево перебор это пирамидаелк луковицаюл самый толстый часть район 3040 ход оптимизировать глуб ветвлять ширина 30 1419 1525e13 31 1103 1682e13 32 1219 2049e13 33 0946 1939e13 34 1064 2062e13 35 0825 1701e13 36 0947 1610e13 37 0728 1173e13 38 0849 0995e13 попытка решение писать резидентный программа dos висеть прерывание бездействие система просто случайно искать решение находить делфи 5 быстро написать перебор симметричный вариант относительно центр 5 минута сказать самый близкий решение иметь диагональ сумма 256 264  поной перебор несимметричный маршрут 300 тыс год celeron 800 август 2022 взять чулан xeon2400 12 core ram 40gb  w7  rad2007  2 ящик пиво поехать алгоритм перебор маршрут отсечение бесперспективный ветвь задействовать рекурсивный метод type tboard  record доска который прыгать конь   carray064 of integer1непосещое поле0посещ   cntcolcntrowarray07 of integer08 счетчик своб поле   sumcolsumrowarray07 of integer64260 недостающий 260 сумма   is_endarray063 of booleanразрешенные финишный поле   procedure init   procedure initendnintegerbcyclebooleanfalse end  procedure tsolvergofedinteger f  поле который ступать конь нумерация 063 e  финишный поле выявлять единственный претендент d  глубина дерево номер ход  var n ncol nrow ndig c1 restinteger  chrecord next f64array07 of integer cntchintegerendходы    function getstbooleanгенерируем возможный ход конь   begin   end  begin   with board do begin     считать колонка число своб поле нехватка 260 сумма столбец     ncolf mod 8c1cntcolncol1restsumcolncold     if c13 or ok_sumrestdc1 then begin сумма хороший       cntcolncolc1sumcolncolrest       nrowf div 8 считать строка параметр       c1cntrownrow1restsumrownrowd       if c13 or ok_sumrestdc1 then begin         cntrownrowc1sumrownrowrest         cf0logd1fставим конь 0         if d62 then finishinge         else if getst then with ch do  делать ребенок            for ncntch downto 0 do             gonextnf64nd1         cf1incsumrownrowdinccntrownrowвосстановление       endif row       inccntcolncolincsumcolncoldвосстановление     endif col   endwith end рис 1 группа грейд симметричный поле ускорение симметрия 15  доска симметрия относительно центр горизонталь поворот 90  каждый позиция 7 симметричный добавлять симметрия обратный обход число анализировать позиция снижаться 16  оставлять качество стартовый поле a1 b1b2 с1с2с3 d1d2d3d4 10 64 рис 1  вводить понятие  допустимый финишный поле  это отсекать симметрия обратный обход данный стартовый поле браться допустимый подходить цвет грейдомрис 1 менее  стартовый поле b1 финишный мочь черный поле кроме a1 h8 маршрут конец поле a1 h8 просматривать стартовый поле a1   стартовый поле d4 финишный мочь d5 e4 другой поле анализироваться стартовый ускорение распараллеливание 10  взять вариант первый 10 ход отбрасывать симметричный друг друг оставаться 17 млн  создавать управляющий поток bigboss расчетный поток worker 11 штука поток брать база цепочка первый 10 ход считать возможный продолжение синхронизация критический секция таймер эвента  расчетный время снижаться 600 год ускорение свойство ход конь 100 6 год  3040 ход возникать узел дерево перебор который двигаться далеко например поле b3 с2 занятый а1 также поле желающий финальный 1 либо подходить таблица допустимый финишный поле  вводить проверка генератор ход ускорение свойство магический квадрат 100 20 день отслеживать сумма каждый столбец строка диагональ лень например 49 ход строка 7 заполнять поле сумма должный 196 214 наиболее эффективный оказываться проверка 5х заполнять поле  добавлять этот фильтрация позиция генерация ход ускорение оптимизация код 4 раз 5 сутки выделять кусок код замеривать время выполнение  выявлять почистить огрех  заменять возможность глобальный переменный переменный стек  понаставить оператор with  протестировать отключать проверка переполнение выход индекс предел диапазон 6 неиспользованный идея  битборд magicbords  выявление 2х непроходимый соседний столбец строка  частичный сумма диагональ  сколько ход сделать заполнение данный строкистолбец  ассемблерный вставка команда popcnt  нейросеть basic zxspectrum 128k результат находить 158 принципиально разный обход условие 14 симметричный 18 замкнутый 65 условие 7 находить 0 хороший обход иметь сумма диагональ 260 256 264 рис 2 наиболее близкий желать 4346012441206322  0225424564234019  4744270417382162  2603483728611839  0750296005163558  3053064936591215  5108553213105734  5431520956331411",
    "tags": [
        "перебор",
        "brutal force",
        "ход конем"
    ]
}
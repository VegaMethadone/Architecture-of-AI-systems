{
    "article_id": "727744",
    "article_name": "Custom View в Android — краткое руководство",
    "content": "обзор возможность кастомный  view  пример код kotlin конец статья ждать бонус вид ссылка полезный статья обучать видео данный тема введение    понадобиться реализация собственный view    способ создание custom view    иерархия view android жизненный цикл view конструктор view метод view    onattachtowindow    onmeasure    onlayout    ondraw    onsizechanged    onsaveinstancestate   onrestoreinstancestate    ontouchevent обновление view    invalidate    requestlayout атрибут custom view дополнительный материал изучение разработчик android создавать сложный экран использование custom view итог решать уходить ios разработка 1 введение обычно термин  custom view  обозначать  view  который  sdk android  другой слово  это пользовательский реализация  view  который содержать собственный логика визуальный интерфейс понадобиться реализация собственный view  специфичный дизайн анимация стандартный  view  недостаточно функциональность нужно добавлять новый возможность график функция сложный диаграмма  специфичный обработка жест свайп тапа зум поворот элемент двойной касание другой комбинация жест взаимодействие элемент интерфейс  улучшение производительность например оптимизация отображение большой количество графический объект карта большой количество маркер способ создание custom view  расширение функциональность стандартный  view   viewgroup допускать мы хватать стандартный возможность  button  создавать свой класс наследоваться класс  androidwidgetbutton  затем переопределять метод отображение обработка событие подход использоваться дополнение функциональность существующий элемент  view  изменение внешний вид  создание кастомный класс  view  ноль способ подходить хотеть создавать свой собственный элемент  view  создавать класс который наследоваться класс  view  затем переопределять метод отображение обработка событие метод пригождаться создание сложный уникальный пользовательский интерфейс кастомный прогрессбар график диаграмма  использовать существовать библиотека использовать существовать библиотека который предоставлять набор готовый компонент метод построение ui мочь настраивать ваш проект подход позволять сэкономить время разработка ограничивать возможность библиотека  пример   mpandroidchart  создание различный график диаграмма иерархия view android 2 жизненный цикл view полный версия жизненный цикл  view  создание   custom view  использовать лишь метод приставка  on  поэтому схема упрощать 3 конструктор view создание  view  начинаться конструктор различный параметр  context   attributeset   defstyleattr   defstyleres   view  иметь четыре конструктор нужно переопределять хотя class testview  view      constructorcontext context  supercontext     constructorcontext context attrs attributeset  supercontext attrs     constructorcontext context attrs attributeset defstyleattr int  super         context         attrs         defstyleattr           constructor         context context         attrs attributeset         defstyleattr int         defstyleres int       supercontext attrs defstyleattr defstyleres    kotlin использовать  jvmoverloads  этот аннотация генерировать возможный комбинация параметр конструктор который мочь использовать вызов java class testview jvmoverloads constructor     context context attrs attributeset  null defstyleattr int  0 defstyleres int  0   viewcontext attrs defstyleattr       your code here  1 конструктор один параметр  context использоваться случай  view  хотеть создавать код xml 2 конструктор два параметр  context attributeset использоваться создание  view  использование xmlмакета конструктор получать значение атрибут  view  указывать xmlразметке использовать настройка свойство ваш  custom view  3 конструктор три параметр  context attributeset defstyleattr вызываться создание  view  помощь xmlразметки задание значение стиль  defstyleattr  тема 4 конструктор четыре параметр  context attributeset defstyleattr defstyleres также использоваться создание view использование xmlмакета стиль тема ииль ресурс стиль 4 метод view 1 метод onattachtowindow вызов данный метод наш  view  прикрепляться наш  activity  знать другой элемент который также находиться экран 2 метод onmeasure конечный цель метод  onmeasure   определять размер расположение ваш  view  экран качество параметр принимать два переменный  widthmeasurespec   heightmeasurespec  который очередь представлять себя требование измерение ширина высота ваш  view  переопределение данный метод необходимо указывать ширина высота ваш  view  самостоятельно использовать метод  setmeasureddimension  class customviewcontext context attrs attributeset  viewcontext attrs       override fun onmeasurewidthmeasurespec int heightmeasurespec int          superonmeasurewidthmeasurespec heightmeasurespec         val width  measurespecgetsizewidthmeasurespec         val height  measurespecgetsizeheightmeasurespec         setmeasureddimensionwidth height       measurespec   это класс использовать определение размер  view  android  view  помещаться экран нужно знать какой место предоставлять правильно располагаться отображаться  measurespec  состоять два основной компонент размер режим измерение режим измерение один три тип exactly  точно  размер  view  должный задавать точно например dp px это указывать макет  view  атрибут  androidlayout_width   androidlayout_height  значение фиксированный ширина высота at_most    view  любой размер который превышать указанный максимальный размер например  layout_widthwrap_content  это означать  view  иметь любой размер пока превышать размер родительский контейнер unspecified  неопределенный  размер  view  любой ограниченный размер родитель каждый измерение  view  ширина высота использоваться отдельный  measurespec  передаваться метод  onmeasure  качество аргумент получать размер  view  основа  measurespec  использовать метод  measurespecgetsize   measurespecgetmode  getsizemeasurespec int   извлекать размер заданный объект  measurespec  getmodemeasurespec int   извлекать режим заданный объект  measurespec  пример использование  measurespec  метод  onmeasure  override fun onmeasurewidthmeasurespec int heightmeasurespec int      val desiredwidth  100  предполагаемый ширина view     val desiredheight  100  предполагаемый высота view      val widthmode  measurespecgetmodewidthmeasurespec     val widthsize  measurespecgetsizewidthmeasurespec     val heightmode  measurespecgetmodeheightmeasurespec     val heightsize  measurespecgetsizeheightmeasurespec      val width  when widthmode          measurespecexactly  widthsize  задавать конкретный размер ширина         measurespecat_most  mindesiredwidth widthsize  размер должный превышать заданный размер         else  desiredwidth  задавать предпочтительный размер точный максимальный размер задавать           val height  when heightmode          measurespecexactly  heightsize  задавать конкретный размер высота         measurespecat_most  mindesiredheight heightsize  размер должный превышать заданный размер         else  desiredheight  задавать предпочтительный размер точный максимальный размер задавать           setmeasureddimensionwidth height  устанавливать фактический размер view  3 метод onlayout метод  onlayout  вызываться каждый изменение размер позиция  view  число создание перерисовка обычно метод переопределяться  custom view  случай немой дочерний  view  который нужно размещать определенный порядок 4 метод ondraw основной метод разработка собственный  view  переопределение метод  ondraw  использоваться объект  canvas  2dхолст который рисовать графический элемент также метод использовать объект  paint   path  который определять стиль форма рисовать элемент 1 canvas canvas  предоставлять мы метод рисование фигура линия текст другой элемент экран например drawcolorcolor int   заливать область цвет указанный аргумент drawlinestartx float starty float stopx float stopy float paint paint   рисовать линия задавать два точка drawrectleft float top float right float bottom float paint paint   рисовать прямоугольник зад",
    "tags": [
        "android",
        "разработка для android",
        "андроид",
        "custom view",
        "kandinsky art"
    ]
}
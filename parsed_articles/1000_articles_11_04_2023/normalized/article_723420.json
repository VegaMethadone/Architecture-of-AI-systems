{
    "article_id": "723420",
    "article_name": "ArrayPool<T>: подводные камни",
    "content": "автоматический сборка мусор упрощать разработка программа избавлять необходимость отслеживать жизненный цикл объект удалять вручную однако сборщик мусор полезный инструмент главный враг путь высокий производительность  иметь смысл помогать оптимизировать частый аллокация аллокация большой объект   уменьшение аллокация современный net предусматривать  spanmemoryt   stackalloc  поддержка  span  структура другой средство объект куча обходиться например объект слишком большой стек использоваться асинхронный код  объект переиспользовать самый крупный объект  массив net встраивать несколько реализация  arraypoolt    статья рассказывать внутренний устройство реализация  arraypoolt  net подводный камень который мочь сделать пулинг неэффективный concurrentструктурах данные также пулинг объект отличный массив   allocator vs pool   пул рассматривать аллокатор объект одинаковый интерфейс два метод выполнять функция  new   delete  хороший реализация нативный аллокатор также переиспользовать память  delete  участок память сразу отдаваться операционный система обратно переиспользоваться новый объект внутри программа тот работать пул   возникать вопрос делать пул managedобъектов вместо переход нативный аллокатор     это требовать меньший изменение код который объект использовать также  некоторый  api принимать  arraysegmentt   memoryt   это помогать сохранять код кроссплатформенный использование сторонний аллокатор обычно предполагать подключение нативный  библиотека    managedобъекты мочь иметь ссылка другой managedобъекты ссылаться managedобъекты память который управлять сборщик мусор  дефрагментация куча перемещение объект такой ссылка быть обновлять становиться невалидный     отличие пул аллокатор пул сохранять часть объект например превышение вместимость  собирать сборщик мусор аллокатор должный гарантировать отсутствие утечка память   arraypoolt   net встраивать два разный реализация абстрактный класс  arraypoolt  тк невозможно сохранять массив каждый размер поотдельность слишком вызов  rentn  пул возвращать массив размер n внутри пул хранить массив длина равный степень двойка   первый  пул создаваться помощь  arraypooltcreatearraypooltcreatemaxarraylength maxarraysperbucket  второй  статический  arraypooltshared  также сделать реализация  arraypoolt    разбор отличие пул добывать  arraypooltshared   arraypooltcreate  начинать бенчмарка кроме этот реализация протестировать также реализация который переиспользовать просто аллоцировать новый массив бросать совесть gc    threads  16  iterations  641024  arraysize  1024 benchmark public void arraypoolconcurrent    var tasks  new taskthreads   for int i  0 i  threads i        tasksi  taskrun             for int j  0 j  iterations j                var arr  poolrentarraysize           имитация использование массив сложность oarraysize          просто мы нужный сразу вернуть пул         randomsharednextbytesarr         poolreturnarr                   taskwaitalltasks          pool         mean      allocated       create    17009 ms        277 kb      shared     1496 ms        241 kb         new     6977 ms  107208502 kb    код связывать работа пул занимать 13 ms замеривать отдельно   пул создавать  arraypoolbytecreate  оказываться медленно аллокация оператор  new  гораздо медленно  arraypoolbyteshared  вычет оверхед торопиться делать вывод один бенчмарка тестировать лишь частный случай списывать реализация пул  далее разбираться пул устраивать внутри почему результат получаться такой   отмечать пул  лишь вспомогательный компонент бенчмаркать нужно алгоритм сервис который пул использоваться  сравнивать улучшаться производительность переиспользование объект самый быстрый реализация пулинг  тот который содержать никакой синхронизация другой поток однопоточный код просто сохранять массив поле класс использовать всякий пул нужно хранить несколько объект однопоточный алгоритм подходить обычный  queuetstackt    arraypooltcreate     метод  create   createmaxarraylength maxarraysperbucket создавать  configurablearraypoolt  нужно осторожный  значение максимальный длина массив пуля умолчание  лишь  1024  1024  ее превышение массив быть аллоцироваться сохраняться пуля поэтому  arraypool  создаваться большой массив  параметр приходиться переопределять   реализация  configurablearraypoolt  очень  простой      массив пуля сгруппировывать размер размер  степень двойка   массив один размер храниться список основа массив   каждый список защищать многопоточный доступ помощь spinlock     изза блокировка этот реализация пул масштабироваться множество поток итог основной ее применение становиться большой массив случай который время работа пул пренебрежимо малый сравнение обработка давать который массив заполняться   arraypooltshared     это статический пул разделять весь код программа реализация называться  tlsoverpercorelockedstacksarraypoolt  данный момент никакой настройка иметь максимальный размер массив пуля  230 элемент  tls  название значит  threadlocalstorage  исходить догадываться счет пул работать быстро многопоточный среда   пуля реализовать двухуровневый хранение объект первый уровень  локальный набор массив каждый поток храниться  threadstatic  поле доступ локальный часть пул требовать синхронизация другой поток однако локально храниться максимум один массив каждый размер использование статический поле возможный тк пул глобальный тот создаваться единственный экземпляр нестатический пуля оптимизация приходиться использовать  threadlocal    второй уровень  разделять поток отличие  configurablearraypoolt  каждый размер храниться список массив несколько  количество логический ядро max  64  каждый список защищать отдельный блокировка это снижать конкуренция поток  идти разный блокировка один вместо  spinlock  реализация  shared  пул использоваться обычный  lockmonitor    speed  memory tradeoff   оптимизация thread local слот иметь цена пуля скопиться большой количество крупный массив раздувать память приложение пример низкий первый поток создавать новый массив возвращать пул массив попадать thread local слот первый поток итог попытка получать массив размер другой поток  переиспользование происходить выделять новый массив итог большой массив выгодно использовать реализация пул общий набор объект поток    thread 1 var pool  arraypoollongshared var arr1  poolrent102410241024 poolreturnarr1  taskrun      thread 2   var arr2  poolrent1024  1024  1024   consolewritelinearr1  arr2 wait   очистка память gc   отчасти решение предыдущий проблема  arraypoolt  предусматривать очистка память сборка мусор помощь хак  финализатор  пул узнавать срабатывание сборщик мусор периодически выбрасывать избыток массив помогать освобождать память   этот поведение желательный преждевременный удаление большой массив находиться large object heap приводить излишний фрагментация куча это еще повод задумываться использование другой механизм переиспользование большой массив   штраф невозврат массив пул   бенчмарк который начинать случай  arraypooltshared  пробивать первый уровень пулинг  thread local возникать вопрос насколько производительный второй уровень  per core locked stacks особенно учитывать он блокировка замер сделать бенчмарк использовать сразу массив пул                             код бенчмарка                            threads  16  iterations  1024  arraysize  1024 benchmark public void arraypoolconcurrent_twoarrays    var tasks  new taskthreads   for int i  0 i  threads i        tasksi  taskrun             for int j  0 j  iterations j                var arr1  poolrentarraysize         var arr2  poolrentarraysize         randomsharednextbytesarr1         randomsharednextbytesarr2         poolreturnarr2         poolreturnarr1                   taskwaitalltasks                                pool         mean       allocated    allocator       138 ms   214630676 kb      create       230 ms         288 kb      shared        33 ms         253 kb    нагрузка связанный пул занимать 24 ms  второй уровень  shared  пул бесплатный пул прежний достаточно п",
    "tags": [
        ".net",
        "c#",
        "memory management",
        "pooling",
        "pool"
    ]
}
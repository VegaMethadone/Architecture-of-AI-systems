{
    "article_id": "726698",
    "article_name": "От Amazon Lex до GPT-4: как сделать бота со «своими» данными?",
    "content": "тема chatgpt другой модель openai хайп один свет клин сходиться всетака сходиться попробовать разбираться обходиться сегодня код общий понятие боль страдание представлять нужно сделать чатбот который мочь отвечать вопрос пользователь основание ваш собственный данные товар интернетмагазин база знание служба поддержка маркетинговый статья тп список кафе коворкинг мой случай недавнний время подобный диалог сводиться выбор  интересовать это  нажимать сюда интересовать другой  нажимать туда понимать  дождаться оператор  очень дружелюбный вполне предсказуемый понятно делать такой развесистый логика очень долго ok давать добавлять дружелюбие сделать natural language interface тип  show me 10 cafes with sockets close to me in london  верить маркетолог человек такой написать лишь находить желать один первый подобный распознаватель человеческий язык становиться сервис amazon lex также google dialogflow еще десяток подобный amazon lex v2 is an aws service for building conversational interfaces for applications using voice and text amazon lex v2 provides the deep functionality and flexibility of natural language understanding nlu and automatic speech recognition asr so you can build highly engaging user experiences with lifelike conversational interactions and create new categories of products amazon lex v2 enables any developer to build conversational bots quickly with amazon lex v2 no deep learning expertise is necessaryto create a bot you specify the basic conversation flow in the amazon lex v2 console amazon lex v2 manages the dialog and dynamically adjusts the responses in the conversation using the console you can build test and publish your text or voice chatbot you can then add the conversational interfaces to bots on mobile devices web applications and chat platforms for example facebook messenger звучать красиво уметь вычленять сущность обычный текст ходить api данные мой пример высоко понадобиться написать utterance  show me  count   type  with  sockets  close to me in  region   описывать сущность исходный фраза получаться json  count 10 type cafe sockets many region london  беда похожий фраза  give me 10 coworking in riga  нужный utterance самый простой запрос  5 workplaces nearby   третий  общий останавливаться несколько сотня utterances тупой перестановка слово место прогон тест занимать около час другой боль  это диалог например второй запрос искатель коворкинг  what about cafes  lex передача контекст 3мя способ ограниченный количество код функция amazon lambda еще lex вариант использование обучение датасет сотня тысяча вопрос ответ дальнейший автоматический ответ наверное подходить колцентр однотипный запрос переходить chatgpt возможность который ходить легенда развенчивать миф модель доступный api глупый вебинтерфейс чат память контекст  получаться работа каталог товар нужно передавать целиком каждый запрос это пролезать 32k токен самый дорогой модель gpt432k еще каждый сообщение нужно передавать предыдущий запрос ответ сохранение контекст примерно работать 9999 типовой бот который брать деньги пользователь начинать 10го ответ пример занавес общий второй вариант реализация задумывать  это токенизация векторизация исходный текст статья каталог товар токенизация векторизация пользовательский запрос нахождение несколько самый близкий подходящий вектор cosine similarity упрощенно работать семантический поиск нужный чатовый модель однако дружелюбность диалог ответ использовать чатовый модель передавать вместе запрос находить вектор соответствующий оригинальный текст   несколько   статья       еще      действие проводить свой собственный модель модель openai например textembeddingada002 api любой общедоступный модель например  nlp cloud  вектор хранить csv специализированный векторный бд например  qdrant  подобный вариант становиться фактический стандарт именно он основывать большинство поисковый плагин chatgpt плюс несколько низкий цена векторизация производиться загрузкеизменение исходный данные хранение особенно локальный бд также какаято возможность сохранять контекст таскать весь диалог каждый обращение чатова модель минус исходный данные должный текстовый точно описательный каталог кафе enumпараметров jsonформате подходить должно пример диалог бот модель обучать 10 статья снижение вес мало есть появляться сервис упрощать реализация стек подготовка данные получение код чат свой сайт например  databerry   spellbook  также неплохой альтернативный модель например  vicuna  векторный эксперимент переходить третий вариант  перевод человеческий запрос json помощь чатова модель оказываться это самый простой дешевый быстрый вариант реализация мой первоначальный идея  модель вместе запрос пользователь передаваться инструкция convert the question below to json data mostly questions are related to cafes and coworkings with different amenities use only following parameters skip unknown parameters and parameters that not in question just output json data without explanation notes or error messages parameters   count integer from 0 to 5  type one of cafe coworking and anticafe  region any city  sockets one of none few and many  noise one of quiet medium and noisy  size one of small average and big  busyness one of low average and high  view one of street roofs and garden  cuisine one of coffee  snacks and full  roundclock one of true and false  большинство случай ответ приходить вполне нормальный json тип  count 5 type cafe sockets many region london  который передавать далеко api микросервис текстовый генеративный модель текстовой генеративный модель отвечать одинаково заморозок  temperature0  примерно 10 случай тупить добавлять несуществующий параметр забывать закрывать json причем аналогичный повторный запрос обрабатываться нормально бороться это бесполезно несуществующий параметр недопустимый значение убирать отвалидировать ответ jsonсхеме также предлагать пользователь спрашивать бот еще слово свежий модель gpt4 оказываться умный предсказуемый рандомный параметр добавлять стоить 6 дорого ждать gpt4turbo получаться бот поспрашивать  workplacesdigitalbot  бюджет  10месяц  пока начинать зарабатывать самостоятельно  сохранение контекст",
    "tags": [
        "amazon lex",
        "openai",
        "chatgpt",
        "chatbot",
        "json",
        "api",
        "векторизация",
        "nlp",
        "nlu"
    ]
}
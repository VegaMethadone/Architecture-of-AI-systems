{
    "article_id": "725704",
    "article_name": "Как подружить Алису с ChatGPT",
    "content": "chatgpt говорить ленивый чегото хватать например голос давать попробовать соединять голосовой помощник алиса chatgpt такой образ смочь взаимодействовать chatgpt помощь голос помощь голос мы отвечать быть ограничение подробно описывать далеко данный статья столько chatgpt сколько писать навык алиса интересно разбираться написать навык вечер chatgpt api официальный api chatgpt открыто использование нужный api_key c сайт openai  httpsplatformopenaicomaccountapikeys  апи платный триал лимит бесплатный использование первый месяц сейчаспохоже зайти туда нужный vpn взаимодействие быть пользоваться официальный питоновский библиотека  openai код взаимодействие chatgpt модель import os  import openai  openai_api_key  osenvironopenai_api_key async def aquerymessage prev_messagesnone     messages       if not prev_messages         all_messages       else         all_messages  prev_messagescopy     all_messagesappendmessage     for m in all_messages         messagesappendrole user content m      chat  await openaichatcompletionacreatemodelgpt35turbo messages  messages     reply  chatchoices0messagecontent     reply  replystrip     return reply  aquery  принимать текст запрос chatgpt также опциональный список предыдущий запрос  prev_messages  смочь держать chatgpt контекст наш предыдущий сообщение мочь поддерживать диалог openaichatcompletionacreate  функция  запрос chatgpt  model  это модель который использовать  messages  список объект запрос  суть весь код взаимодействие chatgpt api навык алиса такой навык алиса навык рассматривать какуюто подпрограмма который алиса запускать произносить специальный фраза активация далее общение происходить напрямую навык миновать алиса единственный фраза который обрабатывать режим алиса хватить  технически навык это выделять post https endpoint  алиса посылать post запрос текст озвучивать пользователь ожидать ответ тексто который должный озвучивать навык создавать платформа yandex cloud functions зарегистрироваться yandex cloud создавать платежный аккаунт cloud functions навык алиса тарифицироваться сожаление создание платежный аккаунт доступный пользователь россия казахстан поэтому быть делать наш собственный сервер иметь сервер ip доступный извне домен включать https быть считать это настраивать работать разработка сервер первый проблема вытекать именно алиса посылать запрос наш сервер ждать алиса  ждать ровно 3 секунда  ответ приходить этот время алиса сказать навык отвечать просто выкидывать навык этот время входить время отправка запрос получение ответ обработка запрос оставаться мало время понятно генерация ответ gpt занимать случай запрос пользователь просто просить подождать позвать поздно пользователь скучно например проигрывать музыка который загружать навык однако навык   инициализировать разговор пользователь должный сказать чтото активировать навык поздно это достаточно неудобно приходиться каждый спрашивать навык готовый ответ начинать запуск сервер быть использовать fastapi mainpy from fastapi import fastapi request  from dotenv import load_dotenv load_dotenv  app  fastapi  apppostpost async def postrequest request     request  await requestjson     response           session requestsession         version requestversion         session_state requestgetstate getsession          response              end_session false                    заполнять необходимый информация     await handle_dialogresponse request     printresponse     return response запускать сервер uvicorn mainapp host 0000 port 5000  просто написать обработчик post json запрос получать запрос  httpsyandexrudevdialogsalicedocrequesthtml  подготавливать словарь который быть возвращать наш ответ  httpsyandexrudevdialogsalicedocresponsehtml  подробный запрос ответ прочитывать данный ссылка сказать большинство случай мы нужный текст запрос пользователь  requestrequestoriginal_utterance  ответ вернуть  responseresponsetext  запрос другой поле яндекс проводить обработка текст запрос возвращать это мы например получать именовать сущность который называть пользователь свой запрос например имя адрес интент session_state позволять хранить данные запрос навык первый время достаточно смочь сохранять контекст поддерживать беседа пользователь функция  handle_dialog  отвечать обработка запрос отправка ответ chatgpt  cut_word  алиса алиса answers  dict   async def handle_dialogresreq     if reqrequestoriginal_utterance          подтягивать предыдущий сообщение пользователь который сохранять навык                 session_state  resgetsession_state          messages  session_stategetmessages                    получать текст запрос пользователь              request  reqrequestoriginal_utterance                   алиса активировать случайно отправлять алиса первый слово запрос         for word in cut_word             request  requestlstripword          request  requeststrip           отвечать вопрос слушать текущий вопрос         if message not in session_state              асинхронно обращаться chatgpt              task  asynciocreate_taskaskrequest messages                           ждать призрачный надежда апи успевать давать ответ 1 секунда             await asynciosleep1                           сохранять контекст предыдыущая запрос навык             messagesappendrequest             session_statemessages  messages              if taskdone                  успевать получать ответ просто отвечать пользователь                 reply  taskresult                 del answersrequest             else                 reply  успевать получать ответ спрашивать поздно                 session_statemessage  request         else              успевать отвечать предыдущий вопрос игнорировать ввод пользователь               пока отвечать предыдущий вопрос old_request             old_request  session_statemessage                           ответ              if old_request not in answers                 reply  ответ пока готовый спрашивать поздно             else                  ответ предыдущий вопрос готовый                  возвращать пользователь                 answer  answersold_request                 del answersold_request                 del session_statemessage                 reply  fотвечаю предыдущий вопрос old_requestn answer     else          этот первый сообщение  представляться         reply  умный chat бот спрашивать чтонибудь     resresponsetext  reply reqrequestoriginal_utterance  пустой это значить пользователь активировать навык приветствовать заводить словарь  answer  словарь ключ  вопрос пользователь значение ответ нейросеть хранить сессия пользователь вместо память например redis код запрашивать ответ chatgpt укладываться 1 секунда отвечать пользователь пока готовый предлагать спрашивать поздно следующий запрос пользователь игнорировать нужный мы активировать запрос навык навык инициировать разговор повторный запрос ответ готовый снова просить повторять запрос поздно также хранить история предыдущий запрос момент предыдущий запрос навык проходить достаточно время лампочка алиса тухнуть задавать следующий вопрос должный разбудить очевидно единственный способ это позвать колонка задавать вопрос однако смотреть колонка узнавать активировать именно поэтому использовать  cut_word  просто удалять имя колонка начало запрос chatgpt это видеть незачем последний функция async def askrequest messages     try         reply  await gptaqueryrequest messages     except exception as e         tracebackprint_exc         reply  удаваться получать ответ     answersrequest  reply     return reply   это обертка наш функция обращение gpt3 модель обрабатывать ошибка обновлять наш словарь answers принцип это весь код находить  github  публикация навык далеко мы опубликовывать навык наш обработчик должный доступный сервер яндекс https кроме сервер должный иметь публичный ip  подробно подключать новый навык платформа диалог яндекс написать  инструкция    качество webhook url использовать url наш обработчик адрес обработчик хотеть публиковать навык мочь сделать приватный случай от",
    "tags": [
        "алиса",
        "chat",
        "python",
        "fastapi"
    ]
}
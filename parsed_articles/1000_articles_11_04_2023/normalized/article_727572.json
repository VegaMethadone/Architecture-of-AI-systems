{
    "article_id": "727572",
    "article_name": "Artery AT32F403A. Работа с USB",
    "content": "итак продолжать знакомить смикроконтроллер мк at32f403a  первый статья посвящать знакомство стаймер мигание светодиод пора продолжать изучение интерфейс данный мк  пожалуй неошибиться сказать чторабота сusb являться пожалуй один изосновный безэтого практически никуда дополнительно мы понадобиться приложение терминал дляwindows использовать com port terminal v15sviridov скачать  поссылка  немного отвлекаться сказать счем приходиться сталкиваться приразбор пример работа гуру программирование мк посмеяться ной вэт дело новичок  итак запускать пример работа сusb все работать запускать пример работа ссап все работать копировать код спример can вusb can нерабатывать копировать код спример usb всап usb нерабатывать чудо также попрошлый работа сstm помнить пронастройка тактирование поправлять терминология неверный пока сней несталкиваться примерыжа работать  начинать пошагово смотреть строчка вобоих пример находить функция void system_clock_configvoid can работать частота crm_pll_configcrm_pll_source_hext_div crm_pll_mult_60 crm_pll_output_range_gt72mhz usb работать частота crm_pll_configcrm_pll_source_hext_div crm_pll_mult_48 crm_pll_output_range_gt72mhz значит пора искать это укитаец настраиваться отдельный приложение at32_new_clock_configuration_v3005 оно насать artery вархив первый пост запускать приложение выбирать project new at32f403a издокументация китаец прочитывать чточастота накотора работать usb должнабывать отделять отобщий работа usb должнабывать начастота 48мгц это кстати следовать изназвание функция впример низко увидеть менять настройка нажимать generate code мы предлагать выбирать папка сохранять файл создавать папка clk at32f403a нажимать сохранять впапка появляться два подпапка src inc все приступать кизучение находить пример работа usb это папка at32f403a_407_firmware_library_v214projectat_start_f403aexamplesusb_devicevirtual_comport копировать получать ранее файл папка clk at32f403asrc  файл at32f403a_407_clock папка virtual_comportsrc замена папка clk at32f403ainc  оба файл at32f403a_407_clockh at32f403a_407_confh папка virtual_comportinc замена  запускать пример папка virtual_comportmdk_v5 компилировать проект f7 открывать mainc пугаться код намного прошлый пример находить main функция функция приводить быть код инициализация    config nvic priority group    nvic_priority_group_confignvic_priority_group_4    system_clock_config     at32_board_init  убирать     usart gpio config     usart_gpio_config  мы требоваться убирать     hardware usart config usart2     usb_usart_configlinecoding  мы требоваться убирать     select usb 48m clcok source   говорить ранее 48мгц частота работа usb    usb_clock48m_selectusb_clk_hext   мы требоваться убирать настраивать выше частота     enable usb clock    crm_periph_clock_enablecrm_usb_periph_clock true     enable usb interrupt    nvic_irq_enableusbfs_l_can1_rx0_irqn 0 0     usb core init    usbd_core_initusb_core_dev usb cdc_class_handler cdc_desc_handler 0     enable usb pullup    usbd_connectusb_core_dev usb подцеплять pa11 pa12 вроде все компилировать f7 запускать режим debug нажимать f5 режим debug простой f8 зарабатывать чтото все удачно компьютер услышать звук подключать usb устройство заходить терминал нажимать поиск поздравлять подключаться добавлять таймер led наш проект первый статья делать таймер 500 мс 1 секунда 1999 3999 число рассчитать основа системный частота который поменять выше поэтому отличаться первый пост   таймер    enable tmr1 tmr2 clock    crm_periph_clock_enablecrm_tmr1_periph_clock true   crm_periph_clock_enablecrm_tmr2_periph_clock true     tmr1 tmr2 configuration     time base configuration     systemclock2400010000  1hz    tmr_base_inittmr1 1999 crm_clocks_freq_structahb_freq  10000  1   tmr_cnt_dir_settmr1 tmr_count_up   tmr_base_inittmr2 3999 crm_clocks_freq_structahb_freq  10000  1   tmr_cnt_dir_settmr2 tmr_count_up     overflow interrupt enable    tmr_interrupt_enabletmr1 tmr_ovf_int true   tmr_interrupt_enabletmr2 tmr_ovf_int true     tmr1 overflow interrupt nvic init    nvic_priority_group_confignvic_priority_group_4   nvic_irq_enabletmr1_ovf_tmr10_irqn 0 0     enable tmr1 tmr2    tmr_counter_enabletmr1 true   tmr_counter_enabletmr2 true       led   init_led   at32_led_offled3  гасить зеленый   at32_led_onled2  зажигать красный тип устройство включать сделать индикация usb соединение объявлять переменный uint8_t usb_ready  0 менять код прерывание usb void usbfs_l_can1_rx0_irqhandlervoid    usbd_irq_handlerusb_core_dev   usb_ready  1  код таймер писать   iftmr_flag_gettmr1 tmr_ovf_flag  reset      if usb_ready  1        at32_led_onled2      else        at32_led_toggleled2          usb_ready  0     tmr_flag_cleartmr1 tmr_ovf_flag     выход получать связь красный диод гореть выдергивать usb разъем красный диод начинать мигать частота 500 мс самый интересный обмен информация сделать отправка терминал серийный номер процессор at32 добавлять переменный uint32_t cortex_id cortex_id_2 cortex_id_3 uint8_t buttontx_buffer_usb10  0x0a 0xbc 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 добавлять новый функция строка начало код include stringh код таймер писать   iftmr_flag_gettmr2 tmr_ovf_flag  reset      cortex_id  uint32_t 0x1ffff7e8  получать 1 часть серийный номер мк     cortex_id_2  uint32_t 0x1ffff7ec  получать 2 часть серийный номер мк     cortex_id_3  uint32_t 0x1ffff7f0  получать 3 часть серийный номер мк      memcpybuttontx_buffer_usb2 uint32_tcortex_id_3 4     memcpybuttontx_buffer_usb6 uint32_tcortex_id_2 4     usb_vcp_send_datausb_core_dev buttontx_buffer_usb 0x000a  этот функция отвечать отправка данные usb      0x000a  это длина пакет мой случай 10 байт      at32_led_toggleled3  весело мигать зеленый диод     tmr_flag_cleartmr2 tmr_ovf_flag    обращать внимание брать 2 3 часть серийный номер проверять мк меняться 3 часть номер особо смысл использовать 1 2 часть номер  смотреть терминал отлично научаться принимать данные терминал открывать функция main смотреть тело while все оттуда удалять оставлять следующий код while1      data_len  usb_vcp_get_rxdatausb_core_dev usb_buffer     ifdata_len  0          work_with_mmc       просто приходить пакет data_len становиться отличный 0 переходить функция work_with_mmc написать функция обявлять переменный uint8_t usb_crc  0 uint8_t receivedusbdata13  0  пример слать терминал строка hex aae00708031902af0000000099  void work_with_mmcvoid    uint8_t i2   memcpyreceivedusbdata usb_buffer data_len  копировать принятый пакет usb_buffer receivedusbdata количество data_len     if data_len  13   проверять пакет длина     if receivedusbdata0  0xaa   нулевой байт равный aa продолжать       usb_crc  0       for i2  0 i2  12 i2          usb_crc  usb_crc  receivedusbdatai2               if 0xffusb_crc  receivedusbdata12    проверять crc          отправлять получать пакет обратно usb         memcpybuttontx_buffer_usb0 uint8_treceivedusbdata3 10          usb_vcp_send_datausb_core_dev buttontx_buffer_usb 0x000a                 видеть все достаточно простой менять нулевой байт пакет мочь сделать управляющий пакет работа мк частность менять магнитола режим работа прошивка разный настройка терминал общемто весь заключение хотеть еще поделиться наблюдение режим debug просматривать переменный некоторый значение писаться слева направо справа налево хотя дальнейший вычисление они верный например анализ код stm32 значение переменная показывать 8b08 код at отображаться 088b это связанный знать смочь разбираться убирать терминал эхо tx знать подсказывать целый работа мешать полный код mainc include at32f403a_407_boardh include at32f403a_407_clockh include usbd_coreh include cdc_classh include cdc_desch include usbd_inth include stringh   addtogroup at32f403a_periph_examples          addtogroup 403a_usb_device_vcp_loopback usb_device_vcp_loopback         uint8_t usb_crc  0 uint8_t receivedusbdata13  0  uint16_t data_len uint32_t timeout uint8_t send_zero_packet  0 uint32_t cortex_id cortex_id_2 cortex_id_3 uint8_t buttontx_buffer_usb10  0x0a 0xbc 0x00 0x",
    "tags": [
        "artery",
        "at32f403a",
        "keil"
    ]
}
{
    "article_id": "726354",
    "article_name": "Архитектура front-end приложений — react, react native, angular. Обзор",
    "content": "предисловие начинать цикл статья наш компания легко непринужденный тема мир frontend надеяться статья полезный связанный мир frontend предупреждать backend разработчик скучноватый изза давно стандартизировать  провожать собеседование позиция react разработчик обычно задавать общий вопрос архитектура  строить архитектура свой приложение почему обсуждение начинать рассказывать небольшой часть материал статья 5 содержание приводить тезис который собирать общий картина мой видение обычно получать положительный обраток поэтому решать излагать материал развертывать быть отправлять ссылка кто это пригождаться  статья рассматривать ключевой взгляд подход построение архитектура frontend приложение что приходить ход заказной разработка называть свой подход модульный одинаково понимать термин внутри команда простой место банальный очень показывать разработка мобильный приложение react native frontend angular react видеть проблема применять vue поэтому договариваться сразу описывать первый очередь нужно рассматривать призма frontend разработка архитектура frontenda бэкенд разработчик молодец давно стандартизировать свой подход архитектура масштабирование приложение практика написать умный книжка главное  прочитывать нужный терпение желание вникать писать фигня написать  никто показывать фронтенд разработчик относительно бэкенд давно узнавать оказываться разработчик нужный фреймворка  ускорение  избавление страдание итог архитектура фронт зачастую скудный практика чтото менее годный применять it гигант деваться некуда нужный микросервис фронт сеньер испарина лоб писать код делать остальной пропасть  архитектура приложение react уровень tutorial новичок api components containers тп надеяться кто подгорать начинать какой свойство должный обладать хороший архитектура выделять 5 основной свойство хороший архитектура описание смысл закладывать каждый выглядеть очевидно важность становиться высокий  простота подход должный описывать простой понятный правило создание структура легко доносить коллега обучать практика правило трактоваться однозначно граница определять четко поэтому спор расположение файл отнесение кудатый туда сводиться минимум это сильно экономить время разработка масштабируемость код правило принцип который порождать структура выдерживать рост проект оставаться понятный удобно работать структура приходиться полностью рефакторять годдва плотный разработка масштабируемость команда структура позволять участник команда работать раздел проект определенный доля изоляция друг друг например коллега работать фич оплата пользователь третий  общий модуль форма проект универсальность структура правило должный зависеть бизнес логика проект тематика архитектура должный позволять быстро начинать обсираться 4 месяц разработка удобный быстрый навигация нужно находить компонент сразу понимать искать размер проект играть определять роль разбирать пример архитектура components store containers термин container components вводить дэн абрамов придумывать redux простой понятный подход начинать изучать redux пример такой подход пестреть многий туториал reactjs суть подход проект делиться компонент исключение компонент который иметь связь redux например компонент авторизация понятный входной выходной данные обычный переиспользуемый компонент подключать redux отправлять какой либо actions компонент доставать данные стор использовать он  становиться контейнер компонент лежать доселе  components  отправлять  containers минус подход горизонтальный рост папка components containers проект разрастаться расти количество компонент каждый папка  components containers решение  группировать компонент бизнес логика возможный лишний перемещение подключать компонента redux нужно перемещать соответствующий папка  containers  проект пестреть такой перемещение архитектурный построить неправильно недостаточно удобный элемент бизнес логика находиться разрозненный место например проект появляться блог появляться api загрузка интерфейс описывать сущность компонент страница навигация бизнес сущность один место представлять  работать это сложно проект разрабатываться команда ежегодно расти кодовый база пример структура проект подход components containers atomic design методология разделение компонент который создавать чтото вроде матрешка каждый группа свой назначение зона ответственность быть углубляться почитать   суть подход компонент придумывать правило группировка бизнес логика сложность подход выделять следующий группа компонент атом   базовый элемент который далеко делиться кнопка ссылка элемент текст молекула это компоновка атом молекула переиспользовать атом например группа кнопка кнопка  текст который переиспользовать далеко организм компоновка молекула атом сложный интерфейс фич например форма расчет стоимость проект который кнопка составной молекула элемент шаблон это layoutы который представлять себя правило расположение элемент внутри мочь содержать любой элемент атом молекула организм страница   элемент навигация который содержать шаблон который располагаться контент внутри минус подход сложно заставлять выучивать история бесконечный спор   проходить четкий граница группа компонент перемещение компонент компонента мочь перемещаться группа изменение степень сложность пример реализация подход atomic design вакуум feature oriented отдельно упоминать чтовсообщество встречаться называть  feature oriented  подход несложно догадываться чтоон строиться вокруг фич приложение нагуглить пример наэта тема ктото называть модуль  суть подход основной дляразделение проект компонент являться неиха технический происхождение абизнес логика чтото это напоминать неужели domain driven design ном создавать папка  posts   users  всам первый подход components containers вчем разница отличие какраз воснова разделение негруппировывать попапка users posts компонент вобщий папка components становиться слишком создавать отдельный модуль илифич users posts авнутри находиться чтоотноситься кэтимый модуль наглядно  рисунок ниже слева  components containers справа  feature oriented минус подход непонятно внутри верхний уровень менее ясно твориться внутри фич  каждый художник лепить знать  следом прикладывать пример структура папка такой проект пример реализация подход feature oriented feature sliced design архитектурный методология frontend проект разработка свежий  2021 год собираться хороший ребята учитывать ошибка который давно научаться избегать архитектура бэкенд придумывать решать фронт ссылка проект   суть подход доменный подход деление слой сегмент изолировать модуль правило работа слой возникать циклический зависимость продуктовый составлять features многий другой документация постоянно дополняться проект огромный респект минус подход порог вхождение новичок сложно вкатываться правило обсуждение идти тема полагать конкретный случай наш опыт использование сводиться то взять вооружение некоторый фишка подход чистый вид использовать исключать постепенно это прийти собеседовать фронтендер мало упоминать слышать подход новичок 12 год опыт  практически пример подход feature sliced design модульный подход наш велосипед глобально основываться  модуль  подход  domain driven design   модуль суть знакомый деление проект модуль  фич создавать папка modules пользователь пост конструктор сценарий появляться модуль users posts scenariosconstructor просто shared модуль взять некоторый фишка feature sliced design например public api ниже разделение модуль компонент логика находиться рядом друг друг такой проект просто работать легкий ориентироваться структура удалять рефакторять модуль просто увидеть общий картинка функциональность мало вероятность помешать друг друг разработка функциональность означать бизнес логика существовать функциональный инфраструктурный модуль такой core udui общий компонент привязывать бизнес логика domain driven design внутри модуль состоять простой уровень это подсматривать эрик эванс domain driven design domain store ui схема модульный подход каждый слой модуль ограничение иметь доступ использова",
    "tags": [
        "reactjs",
        "архитектура",
        "front end",
        "angular",
        "react native",
        "feature sliced design"
    ]
}
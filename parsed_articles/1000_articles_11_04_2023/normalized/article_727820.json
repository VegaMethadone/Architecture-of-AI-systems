{
    "article_id": "727820",
    "article_name": "Managed Kubernetes the hard way",
    "content": "все привет звать путилин дмитрий добрый кот telegram  коллектив frsolutions поддержка irbgeo  telegram  продолжать серия статья k8s статья поделиться свой опыт разработка managed k8s yandex cloud рассказывать создавать конфигурация который легко адаптировать запуск любой облако onpremises решение изменять некоторый настройка заинтересовывать построение гибкий масштабировать kubernetesкластеров материал обязательно предыдущий статья базовый организация сертификат вkubeadm  сертификат k8s иликакраспутывать вермишель часть 1  какначать использовать внешний pki сторедж vault дляхранение выписывание сертификат дляk8s controlplane  сертификат k8s иликакраспутывать вермишель часть 2  какразвертывать kubernetes кластер попринцип hard way  kubernetes the hard way  проблема измоеголичный опыт мочь сказать чтоmanaged решение воблако иливонпремсервер это отличный инструмент длясоздание свой продукт зачастую достаточно однакобывать ситуация нужно гибкость возможность настройка аmanaged решение предоставлять ограниченный набор функция длянасбывать критично использовать сетевой плагин cilium снашимь настройка также мы требоваться флаг featuregates который подефолт вyandex k8s api впринцип небеда мочь развертывать стационарный k8s закастомизировать какна угодно возникать следующий вопрос какой инструмент взять выстраивать процесс каксделать создавать кластерабывать одинаковый выбор инструмент дляданный задача однозначно требоваться cloud native инструмент поэтому выбор пасть наterraform оставаться вопрос какнастраивать узел нуженли мы ansible puppet saltstack 3месяцев поиск золотой пилюля понимать чтодлясоздание кластер мы потребоваться terraform cloudinit архитектура каквоснова наш продукт лежать terraform один изусловия работа сним сервисноресурсный модель срм  ресурс выступать компонент отбалансировщик нагрузка доконфигураци cloudinit длянашего кластер также cpm позволять менять одинаковый тип ресурс беспотребность всмена процесс деплоить кластер такой образ описывать модуль создание инфраструктура подyandex cloud vk cloud итп поменять намеример модуль yandex cloud намодуль vk cloud получать тотже результат новдругой окружение сертификат наиболее значимый сложный этап разрабатывать подход работа сертификат проблема упоминать предыдущий статья определять основной спецификация сертификат описывать ресурс vault который создаваться основа содержимое  спецификация  однако возникать вопрос доставка ключейтокен мастерузлый клиент узел мочь запрашивать сертификат указанный спецификация рассматривать несколько вариант решение проблема получение secret_id role_id approle использовать временный токен который иметь ограниченный доступ токен должный иметь достаточно длительный срок жизнь виртуальный машина успевать запускать клиент указывать использование токен допустимый использование сервис iam облачный провайдер сохранение secret_idrole_id каждый машина облако затем использовать cloudcli получение необходимый секрет прямо хост предпочитать второй вариант выбирать подходить наш случай однако первый вариант полезный тот облако поддержка сервис iam переменный окружение написание код понимать описывать каждый модуль входной выходной переменный  это трудоемкий процесс особенно возникать повтор некоторый время решать иметь смысл выделять отдельный модуль содержать переменная который использоваться несколько модуль такой образ смочь уменьшать объем входной аргумент каждый модуль приводить компактный формат  каталог variable k8s_global_vars    description  modulek8sglobal vars   type         any   default         создание структура модуль также уделять внимание принцип записывать  забывать  это означать хотеть добавлять переменный нехотеть добавлять соответствующий вывод output мы нужно использовать структурный массив который добавлять нужный мы переменный глобальный вывод оставаться единый блок например locals     k8saddresses       local_api_address            formats1  join slicesplitlocalk8s_networkservice_cidr 0 3      dns_address                  formats10 join slicesplitlocalk8s_networkservice_cidr 0 3       idp_provider_fqdn            formatauths           localcluster_metadatabase_domain     base_cluster_fqdn            formatss             localcluster_metadatacluster_name localcluster_metadatabase_domain     wildcard_base_cluster_fqdn   formatsss      localcluster_metadatacluster_name localcluster_metadatabase_domain     etcd_server_lb_fqdn          formatsss etcd  localcluster_metadatacluster_name localcluster_metadatabase_domain      output k8saddresses    value  localk8saddresses  cloud init генерация cloudinit конфигурация являться менее важный аспект поскольку этот конфигурация передаваться виртуальный машина создание первый версия вынужденный описывать каждый файл создавать шаблон выносить отдельный модуль логический смысл например модуль containerd включать конфигурационный файл шаблон systemd сервис однако подход слишком трудоемкий поддержка изза большой количество модуль решать использовать подход подобный kubeadm сначала попытаться развертывать кластер помощь kubeadm выясняться выполнять первоначальный настройка система такой установка пакет добавление конфигурационный файл запуск сервис поэтому начинать разработка инструмент который мочь настраивать система требуемый состояние результат работа становиться fraimctl  инструмент который заменять множество шаблон один команда  fraimctl init  такой образ мы оставаться описывать  базовый  конфиг  fraimctl устанавливать компонент готовить конфига базовый  конфиг  kubeadm генерить статика манифест чекиваться кластер подымать базовый  конфиг  keykeeper клиент который запрашивать сертификат несколько задача который должный выполнять полностью отказываться kubeadm планировать перенести этап создание конфигурационный файл keykeeper kubeconfig static pod manifests fraimctl кроме добавлять функционал проверка готовность сертификат кластер также этап маркировка узел это позволять мы полностью отказываться использование kubeadm зависеть инструмент fraimctl упоминаться ранее инструмент создавать возможность полный отказ использование kubeadm настройка кластер использование пример конфигурациооной файл fraimctlconf  apiversion fraimaiov1alpha   kind containerd   spec      service       extraargs          this document provides the description of the cri plugin configuration           the cri plugin config is part of the containerd config          default etccontainerdconfigtoml         config etckubernetescontainerdconfigtoml      configuration       extraargs         version 2         plugins           iocontainerdgrpcv1cri             containerd               runtimes                 runc                    runtime v2 introduces a first class shim api for runtime authors to integrate with containerd                     the shim api is minimal and scoped to the execution lifecycle of a container                   runtime_type iocontainerdruncv2                   options                      while containerd and kubernetes use the legacy cgroupfs driver for managing cgroups by default                       it is recommended to use the systemd driver on systemdbased hosts for compliance of the singlewriter rule of cgroups                       to configure containerd to use the systemd driver set the following option                     systemdcgroup true      downloading        name containerd         src httpsgithubcomcontainerdcontainerdreleasesdownloadv166containerd166linuxamd64targz         checksum           src httpsgithubcomcontainerdcontainerdreleasesdownloadv166containerd166linuxamd64targzsha256sum           type sha256         path usrbin         owner rootroot         permission 0645         unzip           status true           files               bincontainerd              bincontainerdshim              bincontainerdshimruncv1              bincontainerdshimruncv2              bincontainerdstress              binctr         name runc         src httpsgithubcomopencontainersruncreleasesdownloadv113runcamd64      ",
    "tags": [
        "linux",
        "devops",
        "sre",
        "k8s",
        "kubernetes"
    ]
}
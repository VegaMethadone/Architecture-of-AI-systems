{
    "article_id": "728818",
    "article_name": "Архитектура вокруг бизнеса и бизнес вокруг успешной архитектуры",
    "content": "деятельность проект начинаться разный начало  наличие спрос новшество наличие решение текущий проблема экономия другой сочетание внутренний внешний фактор наш случай экономия решение текущий проблема родить сначала интересный решение маленький стартап перерасти актуальный продукт поскольку начинать существующий проблема давать вникать отталкиваться смочь описывать архитектура ее профит издержки конкретный решение рынок существовать разный способ работа электронный почта который глобально делиться группа большой публичный сервис коробочный onpremise решение почта хостинг ограничение большой публичный сервис любой сервис  инсталляция возникать нюанс поддержка обслуживание процесс вставать поток зажиматься рамка каждый следующий инцидент рано поздно превращаться уровень сервис  советский столовая  ниже хотеться клиент череда первый инцидент обретать вместе опыт обслуживание крупный почта зажимать следующий критичный рамка давать техподдержка доступ лог email сервер крайне нежелательно вообще просто отказывать один тысяча клиент запрос заниматься отладка  баг свой сервис  999 клиент 1000 работать  большой сервис плюс любой доступный возможность должный интерфейс api свой черный список давать туда следовать напарываться злоумышленник репутационный потеря такой ограничение неизбежный отпадать клиент тысяча целое большой сервис прежний большой сервис давать какуюто статистика бывать действительно техподдержка решать это никак отпадать клиент корпсектор ставить onpremise принцип довольный лимит тариф все однозначно сложный вообще посчитать юнитэкономика большой структура тяжело ее потеря прозрачность общий картина соответственно цена страховочный наценка сверху лимит мочь клиент достаточно неожиданный нелогичный число письмо час число вход imap час далее вроде критично 2 клиент тысяча это упираться определенный ниша бизнес это упираться 100 клиент ограничение коробочный onpremise решение картина обратный  все часто бывать это сложный например почта  ее минимальный использование админ нужно знать smtpimap вообще читать rfc кейс интересный начинаться потребность навык знать rfc практически применять знание знать почтовка хранить письмо устраивать ее бд кластеризация ha становиться сложный малоэффективный задача далее все упираться человек inhouse который уметь почта сложно находить долго учить ресурс сеть обеспечение отказоустойчивость навык работа ha опыт проведение испытание издержки владение железомvps  потребность сервис резервный копирование человек online готовый быстро починять далее трудность интеграция коробочный решение api какой осзависимое который мало уметь вообще связываться хотеться ограничение почта хостинг достаточно просто расписывать очень нужно  минимальный почта ее характеристика начинать ее хостинг развивать продукт заканчивать лимит зажимать все сторона упираться все  начинать интерфейс заканчивать место почта решение тот искать искать первый очередь приютить десяток свой почтовка несколько десяток почтовка наш клиент saas модель оказываться удивительно преемственный email сервис ее решаться проблема публичный сервис onpremise решение почта sharedхостинга никакой трудность saas развертка давать клиент 100 функциональность ui api число прямо сразу лог почтовый сервер некоторый переработка удобство прочтение статистика api она мало  прямо бд view который клиент забирать любой свой данный любой срез узел завязывать joinами пересчитывать лимит тариф saas очень прозрачный unitэкономика достаточно посчитать ресурс сервер нужда ограничение число пользователь число письмо час далее клиент хотеть экономить терпеть медленный почта  выбор хотеть шустрый  все видеть интерфейс держать рекомендовать запас ресурс цена per user часто избыточный процент 30 пользователь смотреть почта неделя письмо получать редко поддержка человек  решать saasпрофайдером почта работоспособный ha построить проводить испытание учебный авария далее владение железо интеграция взять переваривать saasпровайдер превращать json api понятный цена поддержка решение продукт интересный компания клиент значит развиваться развиваться архитектура микросервис 12 штука часть работать режим ondemand уступать ресурс самый важный  обработка smtp ui точка зрение деплоить сервис оркестрация вообще наиболее простой удобный путем клиент выделяться отдельный vps внутри docker  dockercompose это инстанс почта немой система нужный ее работа кроме хранение файл письмо  файловый хранилище внешний монтироваться сервер  второй инстанс находиться hotstandby режим иметь 1 запущенный сервис smtpсервер ожидать полететь письмо письмо начинать лететь  запускаться остальной сервис инстанс переходить режим hotswap active два инстанс стоять балансировщик который достаточно простой  принимать входить письмо буферизовать отправлять бакенд который active  ждать получение лог бакенд таймаут лог бакенд происходить проблема  активный инстанс помечаться аварийный письмо переотправляться hotstandby инстанс естественно такой переключение срабатывать принцип достаточно  причина то почтовый бакенд упасть помещаться простой логика выходить строй аварийный инстанс нужно восстаналивать просто выключать вместо просто развертывать новый инстанс вводить схема качество hotstandby который ждать свой час такой схема помогать мы перенос сервер физический размещение цод основное  нужный момент достаточно просто выключать активный инстанс почта сам начинать работать hot standby инстанс заблаговременно утаскивать датацентр архитектура итог приживаться почта пересаживать она комуто сэкономить деньги saas оказываться дешево публичный сервис выгодно onpremise решение кто добавлять живучесть почта комуто админ упрощать жизнь группа почтовка бизнес архитектура архитектура бизнес изначальный задача звучать дух сигнал sos звучать решать наш проблема сервис продавать клиент рынок деньги шаг  решаться взять развитие продукт сделать технический решение становиться развиваться продукт проявляться издержки особенность 40 продакшин среда отдельный независимый релиз число расти близкий план  рост порядок несколько подряд привычно обслуживать свой чужой saasсистемы один направление искать человек это трудно особенно срывать башня devopsпроцесса который применимый принцип сводить процесс стандартный администрирование обновление софт группа сервер iac должный настоящий привычно период обслуживание 15000 сервер который 14000 отличаться друг друг очень многое рынок труд сложный задача  часто голова sre примерно такой iac это комич ansible git далеко действительность проект большой число разный сервер вообще помогать сервер быть разный это логичный забывать один версия ос библиотека прочее сразу режим нормальный рынок труд это закрывать достаточно нужный человек уметь электронный почта нужно разрабатывать свой инструмент ее диагностика обслуживание начинать почему рассказывать успешно внедрять a b c готовый решение ваш технический проблема частично решающий кусочек пазл архитектор лишь собирать пазл картина мука выбор следующий формат kubernetesdockercompose kubernetes приходиться сильно урезать прямой уровень dockercompose dockercompose приходиться чутьчуть надстраивать снаружи внешний балансировщик итог завязнуть сетка решать достраивать урезать postgresqlmysql postgresql решать очень задача прямо бд удобно есть ресурс saas критично mysql простой дешевый ресурс объем влезать функциональность который засовывать  засовывать ondemand сервис ресурс все экономить деньги клиент свой нерв логика база база хранение письмо файловый вариант бд прочее останавливаться файловый вариант maildir оптимально обслуживание дешево ресурс внешний хранилище масса вариант останавливаться nfs репликация блочный устройство резервный хранилище режим activehotstandby nfs  maildir давать максимальный скорость банчмарка минимальный потреблять ресурс nfs хранилка обычный ext4 чутьчуть хитрый форматирование входить балансировщик самый трудный выбор написать свой база postfix  наиболее просто отлаживать остановка работа ресурс приемлемый  оказываться сделать проект внедрять вообще ",
    "tags": [
        "email",
        "saas сервисы",
        "архитектура приложений"
    ]
}
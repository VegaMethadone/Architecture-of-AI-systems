{
    "article_id": "729004",
    "article_name": "Как устроен massively parallel processing (MPP) в Trino",
    "content": "наш повседневный практика доподлинно известно массивномассовопараллельный вычисление это крутой именно означать термин массивность параллельность реализовать конкретный система данный статья отвечать оба вопрос проанализировать внутренний архитектура популярный mppдвижка большой данные  trino  такой mpp популярный термин зачастую скрывать себя вязкий смесь технология маркетинг который легко улавливать суть написать поисковик запрос massively parallel processing прочитывать несколько технический статья известный вендор  компания ibm  писать  parallel processing environments are categorized as symmetric multiprocessing  smp  or massively parallel processing  mpp  systems in a symmetric multiprocessing smp environment multiple processors share other hardware resources in a massively parallel processing mpp system many computers are  physically housed in the same chassis  неплохо причем chassis далее статья in an mpp environment performance is improved because  no resources must be shared  among physical computers in an mpp system a file system is commonly  shared  across the network стоп стоп shared shared ладно посмотреть документация  greenplum  mpp  also known as a shared nothing architecture  refers to systems with two or more processors that cooperate to carry out an operation each processor with its own memory operating system  and disks  коллега pivotal скромно ставить знак равенство massively parallel processing shared nothing некорректный 2023 год например мы snowflake который  заявлять  свой массивность использовать sharednothing архитектура snowflakes architecture is a hybrid of traditional shareddisk and sharednothing database architectures similar to shareddisk architectures snowflake uses a central data repository for persisted data that is accessible from all compute nodes in the platform but similar to sharednothing architectures snowflake processes queries using mpp massively parallel processing compute clusters where each node in the cluster stores a portion of the entire data set locally самый дело весь многообразие mppсистем скрываться компактный общий знаменатель описывать  википедия  массовопараллельный архитектура  класс архитектура параллельный вычислительный система особенность архитектура состоять  память физически разделять  один емкий определение  microsoft  massively parallel processing mpp is the coordinated processing of a single task by multiple processors each processor using its  own os and memory  and communicating with each other using some form of messaging interface иной слово этот mpp  это несколько машина скоординированный выполнять один тот задача очевидно этот определение подходить большой количество продукт пора совершенно разный архитектура характеристика рассматривать реализация идея mpp пример trino такой trino trino   это распределять аналитический sqlдвижок выполнение федеративный запрос технически trino представлять себя набор вычислительный узел который подключаться ко внешний источник данные получение sqlзапроса trino определять какой источник данные задействовать подтягивать необходимый данные источник осуществлять финальный обработка кластер отдавать результат пользователь такой образ trino относить класс mppдвижков машина shared storage данные находиться удаленный архитектура наш команда заниматься разработка продукт  cedrusdata   форк trino стероид российский рынок наш основный фокус текущий год являться улучшение производительность реализация mpp trino один важный фишка trino  возможность запускать sqlзапросы озеро данные напр s3совместимому хранилище рассматривать реализация mpp trino пример sqlзапроса набор файл parquet озеро данный apache parquet   это популярный колоночный формат хранение данные отдельный файл parquet хранить набор запись большой датасет обычно организовывать несколько файл parquet аналитический движок вроде trino apache spark рассматривать совокупность такой файл единый логический таблица рассматривать выполнение следующий sqlзапроса озеро данные схема  tpcds  select d_year d_moy sumss_net_paid from store_sales join date_dim on ss_sold_date_sk  d_date_sk group by d_year d_moy where ss_customer_sk   данный запрос считать объем продажа месяц определенный клиент соединять таблица факт  store_sales  справочник  date_dim  таблица  store_sales  представлять себя большой количество parquet файл партиционированный дата таблица  date_dim  представлять единственный файл parquet  date_dim      part1parquet  store_sales         ss_sold_date_sk2450836       part1parquet       part2parquet     ss_sold_date_sk2450837       part1parquet       part2parquet       part3parquet        параллелизм фрагмент распределенный sqlдвижки выполнять запрос задействовать несколько узел выполнение некоторый операция узел должный обмениваться друг друг промежуточный результат например выполнение операция агрегация необходимо убеждаться запись один тот значение атрибут  group by  оказываться один узел организация выполнение распределенный запрос планировщик движок анализировать какой распределение данный необходимо конкретный оператор вставлять специальный оператор  exchange   shuffle  который перераспределять данный кластер мера необходимость далее план запрос нарезаться фрагмент граница  exchange  такой образ каждый фрагмент иметь строго выход несколько вход таблица фрагмент подробно оператор exchangeshuffle почитать наш  блог  случай trino план оптимизация выглядеть следующий образ aggregation   join     tablescanstore_sales     tablescandate_dim расстановка оператор  exchange  trino отвечать правило  addexchanges  который определять требование оператор распределение входить поток данные вставлять  exchange  требовать текущий распределение совпадать  слово общий случай существовать несколько допустимый расстановка  exchange  конкретный sqlзапроса подумать какой альтернативный расстановка рассматривать запрос написать комментарий стоимость выполнение план разный расстановка  exchange  сильно варьировать значит мы нужный  costbased оптимизация  сожаление trino расставлять  exchange  эвристически мы это нравиться поэтому cedrusdata делать  новый costbased оптимизатор  основа алгоритм cascades пользоваться случай передавать привет  apache calcite   gporca   вернуться основной тема план trino работа правило  addexchanges  aggregationfinal               финальный агрегация   exchangehashd_year d_moy  перераспределение d_year d_moy     aggregationpartial         предварительный агрегация d_year d_moy       join         filterss_customer_sk           tablescanstore_sales         exchangebroadcast      доставлять давать date_dim store_sales           tablescandate_dim план разбиение фрагмент см  planfragmenter   fragment 1  exchangebroadcast   tablescandate_dim   fragment 2 exchangehashd_year d_moy   aggregationpartial     join       filterss_customer_sk         tablescanstore_sales       remotefragmentid1   fragment 3 aggregationfinal   remotefragmentid2 данный этап впервые задумываться параллелизм простой случай мочь выполнять фрагмент другой согласно граф зависимость  123   однако фильтр  ss_customer_sk  являться высокоселективный выгодный стратегия оказываться одновременный выполнение первый второй фрагмент trino выбор стратегия вертикальный параллелизм фрагмент отвечать компонент  executionpolicy   исторически trino использовать  наивный алгоритм  который безусловно запускать фрагмент параллельно подобный стратегия плохо работать ряд случай множество фрагмент начинать конкурировать ограниченный ресурс кластер сеть cpu ram например это особенно актуальный  динамический фильтр  который подробно поговорить trino использовать называть  phased алгоритм  данный алгорит стараться откладывать выполнение тот фрагмент который большой вероятность быть заблокировать ожидание результат другой фрагмент большинство случай это приводить ускорение запрос нижний фрагмент сталкиваться меньший конкуренция ресурс быстро завершать работа следовательно быстро разблокировать родитель  наш пример проигнорировать нюанс работа динамиче",
    "tags": [
        "trino",
        "mpp",
        "sql",
        "bigdata"
    ]
}
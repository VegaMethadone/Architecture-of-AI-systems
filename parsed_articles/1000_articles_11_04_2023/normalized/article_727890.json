{
    "article_id": "727890",
    "article_name": "Как защищать свои ключи SSH. Почему не сертификаты?",
    "content": "март 2023 год популярный сайт хостинг код github случаться  инцидент утечка секретный ключ rsa ssh  который использоваться операция хост  githubcom     такой инцидент  редкость часто квалифицироваться человеческий ошибка недосмотр какогото конкретный сотрудник который случайно выкладывать секретный данные открытый доступ данный случай сотрудник случайно закоммитил секретный ключ открытый репозиторий    просто возлагать вина отдельный человек система безопасность допускать такой ошибка следовать задумываться изменение система первый очередь     случаться github   официальный версия  середина март 2023 год компания внезапно обнаруживать свой секретный ключ rsa ssh свой публичный репозиторий служба безопасность сразу удалять начинать расследование смена секретный ключ производить течение тридцать минута пользователь git увидеть предупреждение возможный взлом скриншот вверху       warning remote host identification has changed   it is possible that someone is doing something nasty someone could be eavesdropping on you right now maninthemiddle attack it is also possible that a host key has just been changed the fingerprint for the rsa key sent by the remote host is sha256univztkscsdhcc0u9e8bujqxvupkzidtmczcvj3td2s please contact your system administrator add correct host key in sshknown_hosts to get rid of this message host key for githubcom has changed and you have requested strict checking host key verification failed  это предупреждение многие испугать хотя самый смена ключ состояться результат атака штатный режим продолжение работа штатный режим достаточно удалять старый ключ следующий команда      sshkeygen r githubcom  вручную обновлять файл  sshknown_hosts  удалять оттуда старый публичный ключ добавлять новый     githubcom sshrsa aaaab3nzac1yc2eaaaadaqabaaabgqcj7ndnxqowgcqnjshclrqpeiiphntvttvdp6mhbl9j1anuky4ue1gvwnglvlohgeyrnzamgrk6pkcuxadbc7qtbw8gikhl7agcsorc56sjmybczfxd1nwzaoxsdpgvsmerobyfnqltv9hwcqbywinir5dig6jtj72pcepejcygxke2yefxv1jhnskgblwnlhscqb2umyrkqyytrltl38tgxkxcflmo5z8cnfgwowrvruj16z6xyvxvjjwbz0wqz75xk5tksb7fnyeies4tt4jks4dhpeauc5ybdyirygm4gc7uenztnzyavwq7b381ak4qdrwt51zqexkbqptunnejqotwvqnj4kqx5quci0thsykoxjcxmpuwzbhjpcg56i2ab6cmk2jghn57k5mj0mndbxa4wnwh6xopwjzk5nyu2zb3nazps5hpqsp1vn1wsjk    автоматический обновление ключ производить следующий команда      sshkeygen r githubcom  curl l httpsapigithubcommeta  jq r ssh_keys    sed e sgithubcom   sshknown_hosts  корректный обновление увидеть  правильный отпечаток      sha256univztkscsdhcc0u9e8bujqxvupkzidtmczcvj3td2s   инфраструктура ключ ssh  разбираться происходить    знать работать инфраструктура публичный ключ pki асимметричный криптография например протокол tls каждый сервер пара открытыхзакрывать ключ заходить сайт предъявлять tlsсертификат открытый ключ браузер производить ряд криптографический операция проверять сертификат сгенерировать эфемерный ключ шифрование текущий сессия    этот инфраструктура использоваться практически протокол применение tls включая smtp imap ssh   использовать tls участвовать традиционный инфраструктура pki    вместо ssh использовать модель  trust on first use  tofu первый заход сервер спрашивать доверять открытый ключ обычно нажимать кнопка продолжать жить далеко    весь это прекрасный работать момент ключ меняться  ssh начинать жаловаться несоответствие мочь происходить чтото ужасный тип mitm ктото перехватывать ваш трафик    следовать проверять новый ключ убеждаться легитимный это довольно утомительный процедура обычный пользователь поэтому многие просто нажимать случай реальный mitmатаки злоумышленник рассчитывать именно такой отношение     плохой текущий сертификат ssh  сразу возникать вопрос  почему использовать сертификат хост ssh     openssh действительно поддерживать сертификат немного странный образ  собственный формат  который значительно простой формат сертификат x509 tls    суть сертификат ssh содержать следующий       открытый ключ     список имя хост который подходить     подпись центр сертификация    существовать никакой заранее установленный набор доверенный центр уц поэтому любой сгенерировать сертификат имя  githubcom  теоретически это проблема безопасность реальность являться проблема сертификат хост ssh практически никто проверять    принцип  использовать обычный pkiсертификаты ssh  это плохой идея противоречить существующий стандарт методика применение    оставаться один использовать секретный ключ github  массовый сервис тысяча сервер все нужный доступ один закрывать ключ очевидно девопс отвечать развертывание закрывать ключ новый система мера ввод эксплуатация отсюда риск ключ случайно оказываться неправильный место открытый репозиторий     делать  текущий ситуация владелец серверовдомен порекомендовать один защищать свой приватный ключ ssh    простой ситуация некоммерческий использование инструмент вроде утилита  melt  безопасный бэкап восстановление sshключей        коммерческий использование хранилище ключ обезопасить изолировать интернет отдельный машина существовать аппаратный модуль hsm специально предназначать выполнение криптографический операция гарантировать никто смочь добираться закрытый ключ    проблема hsm недостаточно быстрый обработка миллион запрос который работать github ситуация некоторый специалист рекомендовать развертывать служба hsm который  ежеминутный  выдавать сервер новый сертификат хост ssh подписывать закрытый ключ hsm клиент настраивать доверие ключ который подписываться сертификат иметь значение закрытый ключ сервер  клиент увидеть действительный сертификат доверять ключ изменяться ограничение срок действие сертификат защищать утечка ключ    такой становиться возможный нужно слегка изменять клиентский инструментарий данный момент openssh иметь возможность делать tofu удостоверять центр сам ключ сделать запрос  sshgitgithubcomwhatever  получать запрос доверие уц github вручную добавлять строка  certauthority githubcom ключ  файл  known_hosts  пользователь практически никто готовый такой операция польза внедрение инфраструктура незначительный    самый важный мочь сделать повышение безопасность экосистема ssh  это упрощать использование сертификат это означать улучшение поведение клиентский софт  писать  специалист безопасность linuxразработчик мэттью гарретт matthew garrett обращать внимание openssh поддерживать протокол ротация ключ сервер набор несколько доверенный ключ который клиент кэшировать затем аннулировать старый ключ всетака подход сертификат выглядеть предпочтительный универсальный решение проблема    итог происходить инцидент нужно запоминать важный совет  хранить пароль ключ прочий секретный параметр один каталог код  идеал должный построить такой система безопасность который принцип допускать подобный инцидент",
    "tags": [
        "ssh",
        "tls",
        "tofu",
        "сертификаты ssh",
        "openssh"
    ]
}
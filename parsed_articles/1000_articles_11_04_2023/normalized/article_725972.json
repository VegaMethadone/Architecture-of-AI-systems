{
    "article_id": "725972",
    "article_name": "msgspec: быстрый и экономичный парсинг JSON на Python",
    "content": "библиотека  msgspec  функция например кодирование поддержка messagepack альтернативный формат который быстро json другой регулярно парсить файл json проблема производительность память просто нужный встраивать схема попробовать msgspec   ниже рассказывать библиотека подробно итак обрабатывать большой файл json python сбой аварийный завершение нужно     убеждаться использоваться слишком память   спарсить файл быстро   идеал также заранее убеждаться данные валидный иметь правильный структура     объединять решение несколько библиотека  один схема быстрый парсинг хитрый прием уменьшение потребление память  это новый библиотека  msgspec    json orjson   начинать два другой библиотека встроенный модуль json python быстрый  библиотека orjson  вернуться пример мой статья  потоковый парсинг json  спарсить файл размер 25 мб который кодироваться список объект json например словарь это событие github пользователь выполнять определенный действие репозиторий   id2489651045typecreateeventactorid665991loginpetroavgravatar_idurlhttpsapigithubcomuserspetroavavatar_urlhttpsavatarsgithubusercontentcomu665991repoid28688495namepetroav6828urlhttpsapigithubcomrepospetroav6828payloadrefmasterref_typebranchmaster_branchmas to homework and assignments from mits 6828 operating systems engineering done in my spare timepusher_typeuserpublictruecreated_at20150101t150000z     наш цель  выяснять какой репозиторий взаимодействовать пользователь   это делаться встроенный модуль json стандартный библиотека python   import json  with openlargejson r as f     data  jsonloadf  user_to_repos   for record in data     user  recordactorlogin     repo  recordreponame     if user not in user_to_repos         user_to_reposuser  set     user_to_reposuseraddrepo printlenuser_to_repos records   orjson отличаться два строка   import orjson  with openlargejson rb as f     data  orjsonloadsfread  user_to_repos   for record in data       same as stdlib code    сколько память время занимать вариант    usrbintime f ram m kb elapsed e python stdlibpy  5250 records ram 136464 kb elapsed 00042  usrbintime f ram m kb elapsed e python with_orjsonpy  5250 records ram 113676 kb elapsed 00028   потребление память одинаковый orjson быстро  280 мс против 420 мс   рассматривать msgspec   msgspec декодирование кодирование основа схема json   соответствующий код  msgspec  подход парсинг несколько отличаться   from msgspecjson import decode from msgspec import struct  class repostruct     name str  class actorstruct     login str  class interactionstruct     actor actor     repo repo  with openlargejson rb as f     data  decodefread typelistinteraction  user_to_repos   for record in data     user  recordactorlogin     repo  recordreponame     if user not in user_to_repos         user_to_reposuser  set     user_to_reposuseraddrepo printlenuser_to_repos records   код длинный подробно msgspec позволять определять схема запись парсинг который выполнять   очень полезно схема поле нужный хотя запись json поле смотреть пример высоко указывать msgspec нужный мы результат парсинг msgspec    usrbintime f ram m kb elapsed e python with_msgspecpy  5250 records ram 38612 kb elapsed 00009   намного быстро гораздо мало память   итог решение один  потоковый  ijson            пакет   время   озу   постоянный память   схема           stdlib json   420 мс   136 мб             orjson   280 мс   114 мб             ijson   300 мс   14 мб             msgspec   90 мс   39 мб                 потоковый решение парсинг использоваться постоянный объем память остальной решение потребление память зависеть размер входной данные msgspec потребление память значительно маленький это решение намного быстро   плюс минус парсинг схема   msgspec указывать схема создавать объект python нужный мы поле потребление оперативный память мало декодирование быстро нужно тратить время память создание тысяча бесполезный объект python   кроме проверка схема получать просто один запись хватать поле присутствовать значение неверный тип например целочисленный вместо строковый парсер указывать это стандартный библиотека json проверка схема выполняться отдельно   сторона     потребление память декодирование попрежнему зависеть входной файл потоковый парсер json такой ijson использовать постоянный память время парсинг какой большой входной файл   указание схема подразумевать написание больший объем код меньший гибкость работа неполный данные         профессия data scientist   профессия fullstackразработчик наpython 16 месяц                               краткий каталог курс                           data science иmachine learning     профессия data scientist   профессия data analyst   курс математика data science   курс математика иmachine learning data science   курс поdata engineering   курс machine learning иdeep learning   курс поmachine learning     python вебразработка     профессия fullstackразработчик наpython   курс python вебразработка   профессия frontendразработчик   профессия вебразработчик     мобильный разработка     профессия iosразработчик   профессия androidразработчик     java иса     профессия javaразработчик   профессия qaинженер наjava   профессия сразработчик   профессия разработчик игра наunity     отоснова вглубина     курс алгоритм иструктура данные   профессия c разработчик   профессия белый хакер     атакже     курс поdevops   курсы",
    "tags": [
        "skillfactory",
        "json",
        "orjson",
        "python",
        "данные",
        "парсинг",
        "разбор",
        "программирование",
        "производительность",
        "память"
    ]
}
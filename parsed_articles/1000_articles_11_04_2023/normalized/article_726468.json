{
    "article_id": "726468",
    "article_name": "Начинаем работу с PyTorch 2.0 и Hugging Face Transformers",
    "content": "пост разбирать работа pytorch 20 hugging face transformers пример finetune модель bert классификация текст pytorch 20  производительность скорость работа удобный python оставаться такой динамический ранее разбирать следующий шаг настройка окружение установка pytorch 20 загрузка подготовка датасет finetune оценка модель bert помощь hugging face trainer запуск инференс тестирование модель краткий введение pytorch 20  pytorch 20 точно 114 полностью обратно совмещать спредыдущий версия непотребовать какихлибо изменение всуществующий код pytorch номогать оптимизировать код добавлять  model  torchcompilemodel  команда pytorch объяснять появление новый версия всвоем  faq   выпускать значительный новый функция который нанаш взгляд менять каква использовать pytorch поэтому называть это 20вместо 114 среди этот новый функция полный поддержка torchdynamo aotautograd primtorch torchinductor это позволять pytorch 20 достигать ускорение время обучение 132 раз  40 архитектура модель   huggingface transformers  подробно pytorch 20 узнавать официальный  get started  примечание туториал создавать запущенный инстанс aws ec2 g5xlarge включая gpu nvidia a10g 1 настройка окружение установка pytorch 20  первый шаг  устанавливать pytorch 20 библиотека hugging face  transformers   datasets   установка pytorch 20 cuda 117 pip install torch20 extraindexurl httpsdownloadpytorchorgwhlcu117 upgrade quiet  также ставить последний версия  transformers   который включать нативный интеграция pytorch 20  trainer   установка transformers dataset pip install transformers4271 datasets290 accelerate0171 evaluate040 tensorboard scikitlearn  установка gitlfs загрузка модель логово hugging face hub sudo aptget install gitlfs yes пример версионирование модель быть использовать  hugging face hub  загружать модель hub вначале необходимо зарегистрироваться  hugging face  вход учетный запись сохранение токен ключ доступ диск использовать  login  пакет  huggingface_hub  from huggingface_hub import login  login   token  add your token here   add_to_git_credentialtrue  2 загрузка подготовка датасет  быть обучать модель классификация текст датасет  banking77  датасет banking77 содержать текстовый обращение клиент область банковскогофинансовый сектор состоять 13 083 обращение размечать 77 интент класс  загрузка banking77 быть использовать метод  load_dataset  библиотека   datasets  from datasets import load_dataset   dataset id from huggingfacecodataset dataset_id  banking77   load raw dataset raw_dataset  load_datasetdataset_id  printftrain dataset size lenraw_datasettrain printftest dataset size lenraw_datasettest посмотреть пример набор данный from random import randrange  random_id  randrangelenraw_datasettrain raw_datasettrainrandom_id  text i cant get google pay to work right label 2 обучение модель нужно предварительно преобразовывать текст токен это делаться токенизатор также преобразовывать токен соответствующий идентификатор предобученный словарь подробно токенизация узнавать  глава 6  hugging face course  from transformers import autotokenizer   model id to load the tokenizer model_id  bertbaseuncased  load tokenizer tokenizer  autotokenizerfrom_pretrainedmodel_id   tokenize helper function def tokenizebatch     return tokenizerbatchtext paddingmax_length truncationtrue return_tensorspt   tokenize dataset raw_dataset   raw_datasetrename_columnlabel labels  to match trainer tokenized_dataset  raw_datasetmaptokenize batchedtrueremove_columnstext  printtokenized_datasettrainfeatureskeys  dict_keysinput_ids token_type_ids attention_masklable 3 finetune оценка модель bert помощь hugging face trainer подготовка данные начинать обучение модель быть использовать модель  bertbaseuncased  первый шаг загрузка модель помощь класс  automodelforsequenceclassification  hugging face hub создавать модель весы предобученный модель bert голова сверху специально наш задача классификация передавать количество класс 77 наш набор данный имя метка сделать вывод результат читабельный from transformers import automodelforsequenceclassification   model id to load the tokenizer model_id  bertbaseuncased   prepare model labels  useful for inference labels  tokenized_datasettrainfeatureslabelsnames num_labels  lenlabels label2id id2label  dict dict for i label in enumeratelabels     label2idlabel  stri     id2labelstri  label   download the model from huggingfacecomodels model  automodelforsequenceclassificationfrom_pretrained     model_id num_labelsnum_labels label2idlabel2id id2labelid2label  быть мониторять качество модель время обучение  trainer  поддерживать оценка время обучение определять  compute_metrics  использовать библиотека  evaluate  расчет  метрика f1  тестовый набор данные import evaluate import numpy as np   metric id metric  evaluateloadf1   metric helper method def compute_metricseval_pred     predictions labels  eval_pred     predictions  npargmaxpredictions axis1     return metriccomputepredictionspredictions referenceslabels averageweighted последний шаг  определять гиперпараметр  trainingarguments  обучение добавлять параметр pytorch 20 быстрый время обучение использовать последний улучшение pytorch 20 передавать опция  torch_compile   trainingarguments  также использовать интеграция  trainer  hugging face hub загрузка весы модель логово метрика репозиторий время обучение from huggingface_hub import hffolder from transformers import trainer trainingarguments   id for remote repository repository_id  bertbasebanking77pt2   define training args training_args  trainingarguments     output_dirrepository_id     per_device_train_batch_size16     per_device_eval_batch_size8     learning_rate5e5 num_train_epochs3  pytorch 20 specifics     bf16true  bfloat16 training torch_compiletrue  optimizations     optimadamw_torch_fused  improved optimizer      logging  evaluation strategies     logging_dirfrepository_idlogs     logging_strategysteps     logging_steps200     evaluation_strategyepoch     save_strategyepoch     save_total_limit2     load_best_model_at_endtrue     metric_for_best_modelf1      push to hub parameters     report_totensorboard     push_to_hubtrue     hub_strategyevery_save     hub_model_idrepository_id     hub_tokenhffolderget_token     create a trainer instance trainer  trainer     modelmodel     argstraining_args     train_datasettokenized_datasettrain     eval_datasettokenized_datasettest     compute_metricscompute_metrics  запуск обучение использем метод  train   trainer   start training trainertrain сравнение время обучение также запускать обучение опция  torch_compile  train_runtime 6962701 train_samples_per_second 431 eval_f1 0928788 использовать опция  torch_compile  оптимизация  adamw_torch_fused   время обучение уменьшаться   525  сравнение обучение pytorch 20 train_runtime 4577964 train_samples_per_second 6555 eval_f1 0931773 такой образ время обучение снижаться 696 457 секунда значение  train_samples_per_second  вырастать 43 65 значение f1метрики такой обучение использование  torch_compile  pytorch 20 невероятно мощный  сохранять наш результат токенизатор hugging face hub создавать карточка модель  save processor and create model card tokenizersave_pretrainedrepository_id trainercreate_model_card trainerpush_to_hub 4 запуск инференс тестирование модель посмотреть инференс модель текстовый пример финальный классификатор получать помощь  pipeline  библиотека  transformers  from transformers import pipeline   load model from huggingfacecomodels using our repository id classifier  pipelinesentimentanalysis modelrepository_id tokenizerrepository_id device0  sample  i have been waiting longer than expected for my bank card could you provide information on when it will arrive   pred  classifiersample printpred  label card_arrival score 09903606176376343 заключение вэт пост разбираться какиспользовать pytorch 20дляобучения модель классификация текст нанабор данные banking77  pytorch 20 это мощный инструмент позволять ускорять время обучение  внаш пример запущенный наnvidia a10g смочь д",
    "tags": [
        "pytorch",
        "transformers",
        "huggingface",
        "machine learning",
        "bert",
        "nlp",
        "data science",
        "neural networks"
    ]
}
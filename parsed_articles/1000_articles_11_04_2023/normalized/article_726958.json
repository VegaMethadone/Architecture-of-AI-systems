{
    "article_id": "726958",
    "article_name": "Istio в разрезе: что умеет и не умеет самый популярный Service Mesh (обзор и видео доклада)",
    "content": "доклад препарировать  istio  дабы понимать работать какой подводной камень правильно пользоваться это второй доклад istio service mesh первый сделать конференция kuber conf 2021  ждать внедрение istio  рекомендовать ознакомляться сначала несколько простой видеоверсия доклад  посмотреть youtube  50 минута ниже  основной выжимка текстовый вид такой service mesh помощь service mesh реализовать разный паттерный управление tcpтрафиком проект настраиваться декларативный язык помощь api kubernetes бонус получать расширенный возможность наблюдаемость проект емко определение термин раскрывать предыдущий доклад возможность service mesh какой вызов стоять вы решать внедрять istio главный  надежность приложение  istio повлиять latency надежность компонент проект вырастать прочее сложность istio  всякий сталкиваться istio знать это сложный штука один интерфейс который предоставлять istio набираться десяток документация вопрос доклад давать необходимый знание ждать istio что готовиться действовать тот иной ситуация самый главное правильно пользоваться базовый принцип работа istio рассматривать типовой вебпроект который работать kubernetes каждый компонент  фронтенд бэкенд база данные  жить каждый свой под решать внедрять istio происходить наш кластер появляться контроллер istiod который мир istio называться control plane каждый под нагрузка выдавать сайдкар sidecar который обрабатывать пользовательский запрос  весь массив сайдкар называться data plane мы оставаться настраивать сетевой паттерный api kubernetes control plane паттерн переваривать рассылать сайдкар инструкция примерно выглядеть типичный service mesh частность istio схема быть разбираться подробность работать istio уровень pod заглядывать внутрь сайдкар обнаруживать  envoy  понимание философия базовый принцип изучение istio невозможно envoy  типичный универсальный проксисервер принимать вход tcp httpзапросы переваривать отправлять наружу смысл envoy давать мы интерфейс управление процесс обработка запрос интерфейс называться envoy api envoy api  очень гибкий структура который задокументировать полезть дебри лишь познакомиться базовый понятие примитив все начинаться примитив listener сначала кажется это некий инструкция который заставлять envoy слушать портик самый дело все гораздо сложный listener  это целый конвейер обработка входить запрос содержать цепочка фильтр который валидировать tls калькулировать метрика экспорт prometheus обеспечивать авторизация запрос далее фильтр listenerа конвейер состоять сколь угодно большой количество фильтр который мочь идти любой порядок правило весь цепочка listenerа заканчиваться фильтр route сам решение именно полететь запрос основываться другой фундаментальный понятие envoy   cluster  терпеть мочь термин связанный очень коллизия иметь иметь cluster содержать исчерпывающий информация сервис который полететь запрос список эндпоинтов ipадресами порт правило балансировка ipадресами сертификат установка tlsсоединения правило калькуляция метрика примерно такой путь проходить запрос envoy вернуться наш сайдкар немой знать знать сайдкар перехватывать прикладной запрос отправлять далеко возникать вопрос какой образ перехватывать запрос чей интерес обрабатывать запрос брать инструкция давать разбираться случай перехват трафик все просто каждый под который работать управление istio настраивать обычный dnat весь dnat исходящий трафик направляться порт 15001 listenerа такой образ envoy получать трафик чтото сделать входящий запрос происходить примерно самый поэтому рассматривать быть чей интерес envoy обслуживать запрос откуда брать информация самый дело envoy sidecarе вместе работать istioagent именно держать связь control plane получать информация состояние кластер переводить понятный envoy язык envoy получать информация состояние кластер далее разбираться цепочка istiod  envoy конвертация объект kubernetes envoy api каждый компонент наш приложение service компонент мочь жить несколько под каждый  свой ip информация control plane istiod получать api kubernetes переваривать рассылать envoy сайдкарах разбираться устраивать процесс предлагать представлять место istio понимать какой объект мир k8s мы нужно преобразовывать объект мир envoy мочь создавать сервис соответствующий кластер использовать ip эндпоинтов порт сервис мочь настраивать маршрутизация этот объект такой маршрутизация брать запрос брать какието параметр запрос основа решать далее лететь запрос видеть перехватывать запрос tcp ipport лететь запрос заголовок host это httpзапрос tls sni трафик зашифровывать сторона приложение наш кластер такой приложение поэтому вариант рассматривать кластер httpсервиса front back идентификация который использовать заголовок host также обычный tcpсервис mysql получаться должный создавать таблица маршрутизация который быть куча слагать http tcpсервисы это както странно неужели быть залезать каждый mysqlзапрос поиск httpзаголовка istio соглашаться это неразумно решать объединять сервис один таблица маршрутизация вместо обычный tcpсервисов который поддерживать умный маршрутизация создаваться отдельный listenerы отдельный таблица маршрутизация новый listenerе mysql 102220423306 таблица маршрутизация содержать единственный запись факт это таблица обычный tcp proxy httpсервисы мочь смело объединять другой listenerе различать  заголовок host итоговый схема внимательный человек вспомнить говорить envoy listener обманывать listener envoy действительно слушать порт 15001 разница остальной listenerы  воображать видно netstat посмотреть сетевой пространство имя под listeners существовать воображение envoy называться виртуальный благодаря то порт 15001 envoy слушать флаг  use_original_dst  узнавать оригинальный destination ядро процедура dnat основа этот данные envoy передавать запрос обработка соответствующий listenerу примерно схема работать envoy закреплять информация изучать жизненный цикл один запрос жизненный цикл запрос управление istio возвращаться наш под приложение envoy допускать наш приложение потребоваться отправлять getзапрос оно делать resolve ipадреса получать отправлять запрос кудатый наружу envoy запрос перехватывать  видеть запрос лететь порт 8080 envoy понимать запрос подходящий listener отправлять запрос обработка далее запрос обрабатываться фильтр listenerа маршрутизироваться кластер подходящий кластер выбираться основа заголовок host запрос  back  далее cluster настраивать балансировка существующий эндпоинт устанавливать tcpсоединение пополнять статистика пассивный health check загружать необходимый сертификат установка зашифровывать соединение калькулировать метрика отправлять запрос соседний итог получаться включать istio наш запрос летать загогулина один сторона это пугать появляться контроль призма этот самый фильтр envoy istio самый дело придумывать давать мы интерфейс управление этот фильтр особенность istio api istio давать мы набор интерфейс peerauthentication  управление аутентификация входить запрос destinationrule  управление аутентификация исходить запрос отвечать вообще все связывать исходящий запрос authorizationpolicy  авторизация virtualservice  маршрутизация разбираться каждый этот peerauthentication спецификация интерфейс очень простой единственный флажок который мочь крутить  режим  mode  apiversion securityistioiov1beta1 kind peerauthentication metadata   name mtlson   namespace myns spec   mtls     mode xxx   мочь выключать входить аутентификация валидировать запрос  disable  строго валидировать каждый входящий запрос  strict  включать режим наш ваш зашифровывать запрос валидировать незашифрованный пропускать  permissive   последний режим  permissive  нюанс использоваться ftp smtp mysql протокол который подразумевать первый слово сервер  например сервер должный сделать приветствие  envoy сорвать башня ждать клиент извне хотя пакетик понимать зашифровывать клиент ждать приветствие наш подконтрольный приложение получаться проблема курица яйцо это очень популярный ошибка который тяжело выявлять иметь вид destinationrule хотя это очень сложный объект нас",
    "tags": [
        "istio",
        "service mesh",
        "kubernetes",
        "devops"
    ]
}
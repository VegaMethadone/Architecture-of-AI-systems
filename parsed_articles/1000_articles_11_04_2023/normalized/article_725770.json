{
    "article_id": "725770",
    "article_name": "Record structs в C#: эффективные и безопасные типы данных",
    "content": "c 9 представлять новый функция называть запись record который обеспечивать неизменяемость семантика сравнение основа значение класс запись упрощать создание тип данные обеспечивать хороший безопасность работа они однако c 10 доступный класс record struct позволять применять тот преимущество запись структура статья рассматривать такой запись структура пример использование обсуждать мочь полезный реальный проект рекорд c краткий пересказ прежде углубляться record struct давать быстро вспомнить такой запись почему вводить c запись  это специальный тип класс который предоставлять неизменяемость сравнение основа значение идеально подходить моделирование тип данные такой дата время координата record обеспечивать сокращать синтаксис определение подобный тип автоматически генерировать метод такой  equals   gethashcode   tostring  пример использование public record dateint year int month int day  date date1  new date2023 3 31 date date2  new date2023 3 31  consolewritelinedate1  date2  вывод true также немаловажный когото переопределение tostring вывод содержимый  этакий встраивать сериализатор public record dateint year int month int day  date date  new date2023 3 31  consolewritelinedatetostring  вывод date  year  2023 month  3 day  31  record structs запись структура предоставлять преимущество запись такой неизменяемость сравнение основа значение структура подобный переменный вести обычный структура дополнительный возможность предоставлять запись сказать это синтаксический сахар быстро добавлять сравнение значение иммутабельность однако конец честный полный список преимущество состоять два аж пять пункт 1 производительность оптимизация память record struct являться значимый тип храниться стек обеспечивать хороший производительность оптимизация использование память сравнение record class запись структура идеально подходить определение маленький часто использовать тип данные public record struct vector2dfloat x float y public record struct vector3dfloat x float y float z public record struct colorbyte r byte g byte b 2 сравнение основа значение запись класс запись структура предоставлять сравнение основа значение позволять сравнивать экземпляр рекордный структура равенство основываться значение ссылка этот делать идеальный выбор определение тип данные который важный сравнение основа значение такой числовой координата дата время point point1  new point10 20 point point2  new point10 20  consolewritelinepoint1  point2  вывод true 3 неизменяемость применимый структура запись обеспечивать неизменяемость означать создание экземпляр свойство мочь изменять это предотвращать случайный изменение состояние обеспечивать большой надежность безопасность работа данные неизменяемость также упрощать понимание отладка код мочь уверенный состояние объект оставаться неизменный создание point point  new point10 20   строка 5 вызывать ошибка компиляция  свойство запись структура неизменяемый pointx  30 4 сокращать синтаксис сокращать синтаксис применяться определение свойство делать ваш код короче читаемый также уменьшать вероятность ошибка связанный опечатка упускать элемент какойто степень форма запись похожий сигнатура конструктор public record struct rectangleint width int height 5 сравнение switch деконструкция запись структура также поддерживать возможность сравнение switchвыражениях деконструкция позволять легко извлекать значение свойство использовать сопоставление образец различный сценарий rectangle rect  new rectangle100 200   деконструкция int width int height  rect consolewritelinewidth width height height  вывод width 100 height 200   сопоставление образец string description  rect switch      0 0  пустой прямоугольник     var w var h when w  h  квадрат     var w var h  прямоугольник ширина w высота h  заключение структурызапись c предоставлять множество преимущество такой неизменяемость сравнение основа значение сокращать синтаксис поддержка сравнение switchконструкциях деконструкция идеально подходить определение легковесный эффективный тип данные особенно проект опытный разработчик производительность надежность являться ключевой фактор работать знать паттерн  они сталкиваться  приглашать бесплатный урок  обсуждать паттерный проектирование c абстрактный фабрика декоратор другой зарегистрироваться бесплатный урок",
    "tags": [
        ".net",
        "c#",
        "otus.ru",
        "record struct"
    ]
}
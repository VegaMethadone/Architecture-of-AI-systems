{
    "article_id": "726528",
    "article_name": "Подключаем VictoriaMetrics в Deckhouse и настраиваем уведомления в Telegram",
    "content": "статья рассматривать kubernetesкластере управление deckhouse удобно быстро настраивать мониторинг уведомление telegram воспользоваться victoriametrics хранение метрика добавлять дашборд grafana создавать алерт настраивать оповещение подготовка окружение мы потребоваться кластер kubernetes установленный  deckhouse  включать  модуль мониторинг  kubectl команда выполнять masterузле любой другой устройство  настраивать доступ  api кластер устанавливать helm  учетный запись telegram установка victoriametrics развертывать  victoriametrics  пространство имя  victoriametricstest  выполнять следующий команда установка helmчарта конфигурация умолчание helm repo add vm httpsvictoriametricsgithubiohelmcharts   helm repo update   helm upgrade install victoriametrics vmvictoriametricssingle namespace victoriametricstest createnamespace подключение victoriametrics prometheus внешний хранилище метрика deckhouse подключаться помощь customresource  prometheusremotewrite   apiversion deckhouseiov1 kind prometheusremotewrite metadata   name victoriametrics spec   url httpvictoriametricsvictoriametricssingleservervictoriametricstestsvcclusterlocal8428apiv1write минимальный конфигурация ресурс prometheusremotewrite достаточно указывать адрес victoriametrics также необходимость вводить давать аутентификация настраивать преобразование labelов отправка данный  использовать конфигурационный файл доступный  репозиторий  применимый конфигурационный файл кластер kubectl create f httpsrawgithubusercontentcomflantexamplesmaster202303monitoringprometheusremotewriteyaml использовать подготовить заранее template репозиторий github это обязательно  применять файл нужный содержимое кластер любой удобный способ подождать несколько минута убеждаться метрика поступать кластер достаточно посмотреть статус база данные метрика  masterузле  помощь следующий команда curl kubectl namespace victoriametricstest get ep l appserver o jsonpathitems0subsets0addresses0ip8428apiv1statustsdb результат должно отображаться примерно следующий statussuccessdatatotalseries100477totallabelvaluepairs1099074seriescountbymetricnamenameapiserver_request_slo_duration_seconds_bucketvalue15576nameapiserver_request_duration_seconds_bucketvalue8496nameetcd_request_duration_seconds_bucketvalue4284nameapise__name__value100477nameprometheusvalue100477namejobvalue100171nameinstancevalue99736nametiervalue81434nameservicevalue57725namelevalue51720nameresourcevalue36606nameversionvalue34823namenamespacevalue33844seriescountbyfocuslabelvalueseriescountbylabelvaluepairnam__name__apiserver_request_slo_duration_seconds_bucketvalue15576labelvaluecountbylabelnamename__name__value1870namenamevalue693nameresourcevalue538namelevalue379nametypevalue323namesecretvalue282namehookvalue201namekindvalue198namecontroller_namevalue173nameinstalled_versionvalue167 statussuccess  указывать работать нужно  totalseries  ноль данные начинать накапливаться проконтролировать сбор метрика вебинтерфейс victoriametrics пробросить порт victoriametrics свой компьютер export pod_namekubectl get pods namespace victoriametricstest l appserver o jsonpathitems0metadataname   kubectl namespace victoriametricstest portforward pod_name 8428 успешный выполнение команда машина который выполняться запрос должный настраивать удаленный доступ kubectl вебинтерфейс становиться доступный адрес  httplocalhost8428  переходить адрес  httplocalhost8428apiv1statustsdb  также должный отображать статус  statussuccess  значение  totalseries  ноль сигнализировать успешный сбор метрика метрика храниться victoriamectrics подключать этот хранилище grafana подключение victoriametrics grafana добавление новый datasource подключение datasource grafana deckhouse выполняться помощь customresource  grafanaadditionaldatasource   apiversion deckhouseiov1 kind grafanaadditionaldatasource metadata   name victoriametrics spec   access proxy   basicauth false   jsondata     timeinterval 30s   type prometheus   url httpvictoriametricsvictoriametricssingleservervictoriametricstestsvcclusterlocal8428 применимый кластер kubectl create f httpsrawgithubusercontentcomflantexamplesmaster202303monitoringgrafanaadditionaldatasourceyaml deckhouse перезапускать grafana новый конфигурация проверять готовность kubectl n d8monitoring get po l appgrafana статус должный  running  kubectl n d8monitoring get po l appgrafana name                       ready   status    restarts   age grafana56df555c67glzqr   33     running   0          67s проверка подключение зайти вебинтерфейс grafana переходить вкладка  configuration    data sources  список доступный источник должный отображаться  victoriametrics  открывать меню  explore  выбирать  victoriametrics  качество источник данные раскрой  metrics browser  он должный отображаться список метрика получать victoriametrics настраивать готовый работа добавление алерт настраивать уведомление событие создавать новый алерт deckhouse алерт описываться customresource  customprometheusrules   apiversion deckhouseiov1 kind customprometheusrules metadata   name alwaysfiringalert spec   groups    name clusterstatealertrules     rules        alert prometheuscanscrapetragets         annotations           description this is a fake alert only for a demo           summary the alert shows that prometheus can scrape targets         expr            upjobdeckhouse создавать алерт бесполезный  активный подходить цель тестирование применимый кластер kubectl create f httpsrawgithubusercontentcomflantexamplesmaster202303monitoringcustomprometheusruleyaml проверка переходить prometheus адрес  адрес_grafanaprometheus  открывать вкладка  alerts  строка поиск вводить имя алерт   prometheuscanscrapetragets  алерт создавать добавление дашборд grafana создавать дашборд  services up  каталог  services  customresource  grafanadashboarddefinition   apiversion deckhouseiov1 kind grafanadashboarddefinition metadata   name upservices spec   folder services   definition             annotations          list                         builtin 1             datasource                type grafana               uid  grafana                           enable true             hide true             iconcolor rgba0 211 255 1             name annotations  alerts             target                limit 100               matchany false               tags                type dashboard                          type dashboard                                  editable false       fiscalyearstartmonth 0       graphtooltip 0       id 31       links        livenow false       panels                     datasource              type prometheus             uid p0d6e4079e36703eb                      fieldconfig              defaults                color                  mode paletteclassic                              custom                  axislabel                  axisplacement auto                 baralignment 0                 drawstyle bars                 fillopacity 15                 gradientmode none                 hidefrom                    legend false                   tooltip false                   viz false                                  lineinterpolation linear                 linewidth 10                 pointsize 5                 scaledistribution                    type linear                                  showpoints never                 spannulls false                 stacking                    group a                   mode normal                                  thresholdsstyle                    mode off                                               mappings                thresholds                  mode absolute                 steps                                         color green                     value null                                                           color red                     value 80                                                                             overrides                       gridpos              h 26             w 24             x 0             y 0    ",
    "tags": [
        "deckhouse",
        "victoriametrics",
        "kubernetes",
        "telegram",
        "metrics",
        "alerting"
    ]
}
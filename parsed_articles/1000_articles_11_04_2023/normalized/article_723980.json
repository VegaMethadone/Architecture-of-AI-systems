{
    "article_id": "723980",
    "article_name": "Тонкости настройки Grafana Loki",
    "content": "привет звать игорь управляющий партнер системный архитектор  kts  заниматься разный проект создание корпоративный система нестандартный спецпроект мобильный разработка devops накоплять опыт позволять помогать наш клиент справляться инфраструктура ее проблемный место помощь разный инструмент статья подготовить мотив  мой доклад  школа мониторинг slurm хотеть поделиться свой набор best practices настраивать grafana loki сбор лог инфраструктура взгляд порог вход loki достаточно низкий интернет туториал поэтому рассказывать сложный очевидный настройка который сталкиваться работа grafana loki статья задача сбор лог способ запуск loki singlebinary simple scalable deployment microservices mode устраивать архитектура grafana loki минимальный конфигурация loki filesystem s3 качество storage конфигурация кластерный high availability решение таймаут размер сообщение чанка параллелизм оптимизация write path объем данный grafana cloud начинать учить devops задача сбор лог четыре основной вопрос который нужно задавать пытаться интегрировать какуюлибо система сбор лог собирать лог извлекать нужный метаданные будущее легко идентифицировать лог хранить данные быстро записывать находить самый сложный вопрос пожалуй находить лог каждый система быть syslog elasticsearch система который построить clickhouse  сам grafana loki  отвечать вопрос поразному поэтому быть обсуждать архитектура вернуться тот концептуальный отличаться grafana loki elasticsearch почему выигрывать стоимость хранение лог пайплайн сбор лог обычно выглядеть просто понятно итак большой количество разнообразный источник данные откуда мы прилетать лог kubernetesкластеры виртуальный машина dockerконтейнеры другой проходить фаза сбор процессинг фильтрация  затем сохраняться определять вид зависимость какой хранилище использовать например вид база данные работать clickhouse s3 bucket grafana loki обращать внимание каждый пользователь который извлекать данные сторона мочь разный сценарий действие например извлекать лог год последний 10 минута отфильтровывать данные способ запуск loki существовать способ запуск который большой счет отличаться масштабирование singlebinary способ самый простой использоваться основный первичный туториал loki логика такой брать бинарь запускать подключать storage роль storage исполнять файловый система который запускать наш процесс удалять s3 bucket это значение иметь подход иметь свой плюс например легкость запуск  потребоваться минимум конфигурация который рассматривать низкий минус  плохой отказоустойчивость машина выпадать лог писаться вообще ситуация улучшать  два разный виртуальный машина запускать процесс loki одинаковый конфиг объединять кластер помощь секция  memberlist это поставлять любой прокси например nginx haproxy главное  подключать все один storage соответственно масштабировать процесс далеко запускать четыре пять узел получаться примерно такой схема обращать внимание loki заниматься запись чтение поэтому нагрузка равномерно распределяться все инстанс факт неравномерный один момент время бывать чтение другой  запись  ssd  simple scalable deployment второй способ следовать первый позволять разделять процесс чтение запись мочь запускать например дискозависимый процесс один железо менее дискозависимый другой запуск необходимо передавать флажок  targetwrite   targetread  каждый этот процесс запускаться тот сущность который отвечать конкретный путь запрос write read точно нужно поставлять прокси весь инстанс который проксировать запрос запись  узел запись остальной запрос  узел чтение способ запуск grafana считать наиболее рекомендовать план работа grafana активно развивать именно microservices mode microservices mode  развернутый путь каждый компонент loki запускать самостоятельно компонент очень легко отделяться друг друг распределять два группа группа компонент запись  дистрибьютор инджестор который писать storage группа компонент чтение  queryfrontend querier index gateway это тот компонент который заниматься исполнение запрос остальной утилитарный компонент  например кеш compactor другой устраивать архитектура grafana loki останавливаться подробно архитектура дальнейший понимать вообще конфигурироваться тот иной секция начало  индексироваться данный блок отличие elasticsearch который дефолт индексировать документ полнотекстовый целиком grafana loki идти другой путь  индексировать содержимое логово метаданные время лейбл лейбл очень похожий prometheusлейблы думать многие они знакомый итог grafana хранить очень маленький индекс данный данные немой очень мало хотеть замечать elasticsearch индекс раздуваться зачастую сам данные неиндексируемый данные хранить порядок появление нужно отфильтровывать пользоваться grep свой род встроенный loki stream   уникальный набор лейбл несмотря лог мочь идти один источник данный случай лейбл  componentsupplier  порождать новый стрим мы это понадобиться дальнейший тк настройка который связывать рейтлимит ограничение зачастую распространяться именно стрим чанка   набор несколько строчка логово взять строчка лог помещать один сущность называть chunk сжинать полагать storage вернуться архитектура подробно рассматривать write path read path различие write path  точка вход запись логово loki являться сущность название дистрибьютор это statelessкомпонент задача  распределять запрос несколько инджестор инджестор  это statefulкомпоненты объединять называть  hash ring   система консистентный хеширование позволять просто добавлять удалять инджестор кластер подключать один storage  read path  устраивать сложно принцип похожий statelessкомпоненты  query frontend querier query frontend  компонент который помогать разделять запрос быстро выполнять например нужно запрашивать данные месяц помощь query frontend делить запрос мелкий интервал направлять параллель несколько querier объединять результат  querier   компонент который запрашивать лог storage новый данные инжестор который storage записывать querier запрашивать минимальный конфигурация loki filesystem этот конфигурация нацеливать работа файловый система loki запускать single instance режим останавливаться важный конфигурационный секция loki   это инструмент который постоянно развиваться упрощать улучшать работа конфигурациейпара версия назад появляться один самый хороший изменение  секция common конфигурация несколько повторяться элемент common объединять разный часть конфиг рано приходиться настраивать  ring   storage  другой элемент инджестор querier дистрибьютор отдельно это сделать один место  auth_enabled false  server   http_listen_port 3100  common   path_prefix tmploki   storage     filesystem       chunks_directory tmplokichunks       rules_directory tmplokirules      replication_factor 1    ring     instance_addr 127001     kvstore       store inmemory  schema_config   configs      from 20200907       store boltdbshipper       object_store filesystem       schema v12       index         prefix loki_index_         period 24h видно  storage  настраивать вид файловый система указывать храниться чанка указывать хранить индекс правило алертинг тд schema_config   это конфиг указание храниться данный чанка индекс целое меняться давний время появляться новый версия схема поэтому рекомендовать периодически читать ченджлог вовремя обновлять схема loki иметь последний улучшение появляться несколько инстанс необходимо объединять кластер который работать протокол memberlist также использовать сторонний система такой etcd consul это  gossip протокол автоматически находить узел loki определенный принцип auth_enabled false  server   http_listen_port 3100  common   path_prefix tmploki   storage     filesystem       chunks_directory tmplokichunks       rules_directory tmplokirules      replication_factor 1    ring     kvstore       store memberlist  schema_config   configs      from 20200907       store boltdbshipper       object_store filesystem       schema v12       index         prefix loki_index_         period 24h  memberlist   join_members      loki7946 множество разный способ автоматический",
    "tags": [
        "grafana",
        "loki",
        "prometheus",
        "devops",
        "kubernetes"
    ]
}
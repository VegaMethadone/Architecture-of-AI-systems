{
    "article_id": "725552",
    "article_name": "Алгоритм «Longest common subsequence» на Go. Как прийти к решению?",
    "content": "среди программист утихать спора знать алгосик реальный работа это просто некий странный ритуал прохождение воронка собеседование компания аля faang manga каруня разный команда разный мнение счет например тимлиды докоманда считать некий элементарный база знать точно помешать все главное человек хороший   мнение мочь различаться один знать точно разгадывать загадка бывать очень интересно както любопытство прорешивать задачка hackerrank решение простой задача тупо достаточно догадываться отсортировывать данные построить map особо знать некоторые придумывать решение довольно проблематичный   один такой задача  нахождение самый длинный общий подпоследовательность longest common subsequence подобный алгоритм использоваться реальный жизнь такой программа diff сказать сразу смочь решать задача самостоятельно разумный время тот пока надоедать решать посмотреть алгоритм википедия    бог алгоритм становиться жутко интересный  блин должный рассуждать  сам приходить этот решение итог рассуждение решать выкладывать вид статья хабр   disclaimer точно олимпиадник гуру алгоритм просто любопытствующий   задача   hackerrank задача звучать както   общий ребенок   строка называться ребенок строка сформировывать путем удаление 0 символ строка символ мочь перемешать   давать два строка одинаковый длина находить длина большой строка который сконструировать являться ребенок оба строка   например строка bcdekf cdegkb большой общий ребенок cdek тот 4 общий символ изменение порядок   короче написать тело функция     находить длина  func commonchilds1 string s2 string int      описывать менее формально это похожий результат просмотр diff два файл файл  это последовательность элемент например строка код diff искать одинаковый элемент большой общий подпоследовательность остальное показывать различие   попытка лоб   книжка статья подготовка собеседование часто советовать задача начинать попытаться решать лоб выдавать правильный ответ хотя небольшой входной данные пытаться оптимизировать скорость вроде это должно показывать интервьюер вообще понимать задание уметь хотя базовый программировать   тупой решение лоб сначала находить начало общий ребенок точно  перебирать вариант это начало начинать точка сводить задача предыдущий тот рекурсия отмечать стек go динамический поэтому слишком большой вложенность рекурсия обычно бояться другой язык это мочь выглядеть сложный   func commonchilds1 string s2 string int      var maxlen int      for i  0 i  lens1 i          for j  0 j  lens2 j              if s1i  s2j                  next  commonchilds1i1 s2j1                  l  1  next                 if l  maxlen                      maxlen  l                                                  return maxlen    решение простой работать правильно небольшой пример жалкий несколько десяток символ наглухо зависать  алгоритм неоптимальный неудивительный правильно понимать о2n    кстати спрашивать chatgpt алгоритмический сложность моргнуть глаз умный вид сказать on2  цикл цикл общий робот замечать рекурсия   пробовать оптимизировать   порешать какоето количество задачка хакерранка понимать часто этот проблема решаться гдеть хранить промежуточный вычисление тот грубо говорить использовать некий кеш это рокет сайенс жизнь пилить круда php точно хотя пара чтонибудь кешировать скорость это кстати главный принцип динамический программирование  решать подзадача запоминать промежуточный результат использовать лишний вычисление   итог приходить такой решение     качество ключ кеш использоваться структура который храниться длина оставаться строка тот суть позиция  type key struct      len1 int     len2 int   var cache  mapkeyint  func commonchilds1 string s2 string int      key  keylen1 lens1 len2 lens2      cached exists  cachekey     if exists          return cached           var maxlen int      for i  0 i  lens1 i          for j  0 j  lens2 j              if s1i  s2j                  next  commonchilds1i1 s2j1                  l  1  next                 if l  maxlen                      maxlen  l                                                  cachekey  maxlen     return maxlen     этот решение работать быстро какойто длина все равный зависать нафиг тот кешировать както умный   визуализация   умный книжка говорить удачный визуализация  это половина решение это визуализировать сравнение каждый символ каждый искать решение пробовать рисовать два последовательность рядом соединять миллион стрелочка это что приводить   самый дело особенно обидный правильный вариант приходить голова процесс решение несколько год назад писать хабр визуализация sqlджойнов  часть 1   часть 2  второй часть рисовать объединение элемент весь вид прямоугольник матрица    общий нужно сравнивать все  рисовать матрица например строка bcdekf cdegkb рисовать правильный ответ тот большой последовательность простой случай очевидный      b  c  d  e  k  f   c     1               d        2            e           3         g                     k              4      b                       также полезно нарисовать какиенибудь такой прямолинейный случай например строка efabcd abcdef два общий подпоследовательность ef помечать звездочка abcd второй      e  f  a  b  c  d   a        1            b           2         c              3      d                 4   e  1                 f     2                этот два картинка принцип видно последовательность увеличиваться смещение один клетка вправо один вниз подумать понятно картинка намного наглядно    ладно это простой пример нужный случай повторяться буква   baaba babab   пример хороший такой короткий строка прямой очень комбинация подпоследовательность максимальный длина несколько baba ответ который первый приходить голова еще baab например      b  a  a  b  a    b                a                b                a               b                  отмечать звездочка совпадение буква видно принцип учитывать последовательность строиться обязательный смещение вправо вниз наш baba видный практически невооруженный глаз видный другой мелкий b ba bab тд который отбрасывать    вместо звездочка писать некий число который увеличиваться диагональ сам большой число итог находить самый большой подпоследовательность    нюанс разумеется последовательность идти строго диагональ один клетка вправо один вниз бывать смещаться проходить пустота тот несовпадающий символ сам несовпадающий символ менять длина общий подпоследовательность путь проходить поэтому каждый пустой клетка записывать число стрелочка который указывать наиболее выгодный путь максимальный число сверху слева   итог мочь приходить классический картинка взять википедия     алгоритм   таблица заполняться построчно начинать левый верхний угол da заполняться символ совпадать например cc dd aa браться число предыдущий элемент диагональ близкий клетка слева сверху прибавление единица совпадать просто копироваться максимальный число два вариант соседний левый клетка соседний верхний стрелочка рисунок указывать поле откуда именно браться значение   результат правый нижний угол ответ максимальный длина общий ребенок стрелочка пойти начинать восстанавливать сам  подпоследовательность длина выписывать совпадать символ   func commonchilds1 string s2 string int      n  lens1     matrix  makeint n1     for i  range matrix          matrixi  makeint n1           for i  0 i  n i          for j  0 j  n j              if s1i  s2j                  matrixi1j1  matrixij  1              else                  max  matrixij1                 if matrixi1j  max                      max  matrixi1j                                   matrixi1j1  max                                return matrixnn    постановка задача hackerrank длина строка одинаковый разница особый легко переделывать общий случай   сложность такой алгоритм  очевидно on2 рекурсия просто цикл цикл   итог   вполне сила решать задача самостоятельно сложный сразу нарисовать правильный картинка научаться догадываться такой вещь еще включать таймер  загадка   посоветовать коммент какуюнибудь хороший статья книжка нужно мысл",
    "tags": [
        "алгоритмы",
        "lcs"
    ]
}
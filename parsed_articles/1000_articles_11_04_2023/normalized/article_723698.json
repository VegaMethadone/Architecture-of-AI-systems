{
    "article_id": "723698",
    "article_name": "Знакомьтесь, tRPC",
    "content": "hello world   туториал разрабатывать простой типобезопасный typesafe клиентсерверный fullstack приложение помощь  trpc   react   express    trpc  позволять разрабатывать полностью безопасный точка зрение тип api клиентсерверный приложение предпочтительный являться архитектура монорепозиторий этот посредник сервер клиент позволять использовать маршрутизатор роутер обработка запрос http использование один роутер очередь обуславливать возможность автоматический вывод тип type inference входящий исходящий данные inputoutput особенно актуальный клиент позволять избегать дублирование тип использование общий shared тип   руководство trpc находиться процесс подготовка  следить обновление    тот кто интересовать код  ссылка соответствующий репозиторий    интересно просить кат   подготовка настройка проект   функционал наш приложение следующий     сервер храниться массив данные пользователь   сервер конечный точка endpoints     получение пользователь   получение один пользователь идентификатор   создание новый пользователь     клиент запрашивать пользователь рендерит список имя   клиент форма запрос один пользователь id   клиент форма создание новый пользователь     видеть очень просто давать это реализовывать     архитектура монорепозиторий предполагать код клиент сервер жить один директория репозиторий   создавать корневой директория   mkdir trpcfullstackapp cd trpcfullstackapp   создавать директория сервер   mkdir server cd server   обращать внимание  работа зависимость использоваться  yarn    инициализировать проект  nodejs    yarn init yp   устанавливать основной зависимость   yarn add express cors   поскольку клиент сервер быть иметь разный источник origins быть запускаться разный порт общение они блокироваться  cors  пакет  cors  позволять настраивать политика   устанавливать зависимость разработка   yarn add d typescript typesexpress typescors   создавать файл  tsconfigjson  следующий содержание      compileroptions      allowjs false     esmoduleinterop true     forceconsistentcasinginfilenames true     module esnext     moduleresolution node      директория сборка     outdir dist      директория исходник     rootdir src     skiplibcheck true     strict true     target es2019       редактировать файл  packagejson            основной файл сервер   main distindexjs    модуль es   type module   scripts       компиляция ts js наблюдение изменение файл     tswatch tsc w      запуск сервер перезагрузка изменение     nodedev nodemon      одновременный выполнение команда      устанавливать concurrently верхний уровень     start concurrently yarn tswatch yarn nodedev      производственный сборка     build tsc build  node distindexjs       создавать директория  src  далеко работать   создавать файл  indexts  следующий содержание   import express from express import cors from cors  const app  express  appusecors   адрес сервер httplocalhost4000 applisten4000      consolelogserver running on port 4000    определять тип пользователь файл  userstypests    export type user     id string   name string    создавать массив пользователь файл  usersdbts    import type  user  from types  export const users user          id 0     name john doe           id 1     name richard roe         возвращаться корневой директория создавать шаблон клиент помощь  vite     client  название проектадиректория  reactts  использовать шаблон yarn create vite client template reactts   vite автоматически настраивать необходимый наш участие процесс требоваться    обращать внимание  клиент запускаться адрес  httplocalhost5173     находиться корневой директория инициализировать проект nodejs устанавливать  concurrently    yarn init yp yarn add concurrently   определять  packagejson  команда одновременный запуск сервер клиент          scripts      dev concurrently yarn cwd server start yarn cwd client dev       это требоваться подготовка настройка проект переходить доработка сервер   сервер   мы потребоваться 2 пакет   yarn add trpcserver zod     trpcserver   пакет разработка конечный точка роутер   zod   пакет валидация данные     далее работать директория  src    создавать файл  trpcts  код  инициализация trpc    import  inittrpc  from trpcserver import type  context  from context  const t  inittrpccontextcontextcreate  export const router  trouter export const publicprocedure  tprocedure   определять  контекст trpc  файл  contextts    import  inferasyncreturntype  from trpcserver import  as trpcexpress from trpcserveradaptersexpress  const createcontext     req   res  trpcexpresscreateexpresscontextoptions     return    export type context  inferasyncreturntypetypeof createcontext  export default createcontext   определять  корневой роутерроутер приложение trpc  файл  routerts    import  router  from trpcjs import userrouter from userrouterjs  const approuter  router   user userrouter   export default approuter   подключение trpc сервер использоваться  обработчик запрос адаптер  редактировать файл  indexts      import  as trpcexpress from trpcserveradaptersexpress import approuter from routerjs import createcontext from contextjs    appusecors  appuse    суффикс путь    получать httplocalhost4000trpc   trpc   trpcexpresscreateexpressmiddleware     router approuter     createcontext          обращать внимание экспортироваться роутер тип export type approuter  typeof approuter   определять конечный точка пользователь файл  usersrouterts    import  z  from zod import  router publicprocedure  from trpcjs import  users  from dbjs import type  user  from types import  trpcerror  from trpcserver  const userrouter  router    обработка запрос получение пользователь    выполнять запрос query   getusers publicprocedurequery        просто возвращать массив     return users       обработка запрос получение один пользователь id   getuserbyid publicprocedure      валидация тело запрос      id должный строка     inputval unknown         if typeof val  string return val        throw new trpcerror         code bad_request         message invalid input typeof val                 queryreq         const  input   req         искать пользователь       const user  usersfindu  uid  input         находить выбрасывать исключение       if user          throw new trpcerror           code not_found           message user with id input not found                         находить возвращать       return user         обработка создание новый пользователь   createuser publicprocedure      тело запрос должно представлять себя объект поле name      значение который должный строка     inputzobject name zstring       выполнять мутация     mutationreq         const  input   req         создавать пользователь       const user user           id datenowtostring36slice2         name inputname                добавлять массив       userspushuser         возвращать       return user        export default userrouter   финальный структура директория  server     node_modules  src    user      dbts      routerts      typests    contextts    indexts    routerts    trpcts  packagejson  tsconfigjson  yarnlock   наш сервер полностью готовый обработка запрос клиент   клиент   мы также потребоваться 2 пакет    client yarn add trpcclient trpcserver   возможно мочь устанавливать  trpcserver  верхний уровень    далее работать директория  src    создавать файл  trpcts  код инициализация trpc   import  createtrpcproxyclient httpbatchlink  from trpcclient  мочь возникать проблема использование синоним путь type aliases import  approuter  from serversrcindex  export const trpc  createtrpcproxyclientapprouter   links      httpbatchlink       url httplocalhost4000trpc            начало давать просто вывести список пользователь консоль инструмент разработчик браузер редактировать файл  apptsx  следующий образ   import  useeffect  from react import  trpc  from trpc  function app    useeffect       trpcusergetusersquery       thenconsolelog       catchconsoleerror        return      divdiv      export default app   запускать приложение это сделать 2 способ    ",
    "tags": [
        "timeweb_статьи",
        "javascript",
        "typescript",
        "ts",
        "node.js",
        "nodejs",
        "trpc",
        "api"
    ]
}
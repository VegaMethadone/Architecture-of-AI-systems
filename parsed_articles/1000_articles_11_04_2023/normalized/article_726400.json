{
    "article_id": "726400",
    "article_name": "Как подружить Neovim c русской раскладкой",
    "content": "tldr туториал описывать часть функционал плагин langmappernvim ссылка конец статья остальной хотеть настраивать neovim работа русский раскладка описывать необходимый шаг приводить упрощенный код проблема neovim получать значение код клавиша делать зависимый текущий раскладка решение переключение раскладка выход режим вставка ограничивать работа текст русский быть недоступный оператор  ffttrr  поиск русский символ функциональность опция  langmap  учитывать перевод пользовательский привязка клавиша задача научать neovim понимать команда вводить русский раскладка автоматически переводить пользовательский привязка клавиша перевести встроенный привязка последовательность ctrl привязка плагин одинаково обрабатывать нажатие физический клавиша независимо текущий раскладка дублироваться символ настройка vimoptlangmap опция  langmap  переводить вводить символ противоположный основа карта сопоставление указывать сопоставление два способ попарно каждый пара символ разделять запятая  йqцw  набор символ  чтооткуда  конкатенировать точка запятая набор несколько разделяться запятая быть использовать второй вариант кажется читабельный пример использоваться раскладка russianwin macos local function escapestr    символ должный экранировать встречаться langmap   local escape_chars     return vimfnescapestr escape_chars end   набор символ вводить зажимать шифт local en_shift  qwertyuiopasdfghjklzxcvbnm local ru_shift  ëйцукенгшщзхъфывапролджэячсмитьбю  набор символ вводить  добавлять  бю впоследствии рекурсивный вызов комманд local en  qwertyuiopasdfghjklzxcvbnm local ru  ейцукенгшщзхъфывапролджэячсмить vimoptlangmap  vimfnjoin                        разделитель который нужно экранировать                         escaperu_shift    escapeen_shift   escaperu    escapeen   оператор текстовый объект работать введение русский символ привязка клавиша попрежнему понимать английский алфавит последовательность ctrl работать обертка vimkeymapset очевидный способ  повторно регистрировать каждый маппинг раскладка local map  vimkeymapset mapn leaderq qa mapn leaderй qa это сильно засорять конфиг неудобно сопровождение способ это создавать обертка функция  vimkeymapset  который автоматически устанавливать маппинг каждый раскладка сложность корректно обрабатывать зоопарк возможный обозначение клавиша neovim например leaderq  нужно переводить  leaderй  mq  нужно переводить  mй  сохранять регистр cq  нужно переводить  cй  оставлять  c  английский приводить  й  нижний регистр  cq   cq  neovim равнозначный  cй   cй   stab  нужно оставлять маппинг содержать  plug   sid   cnr  вообще нужно трогать localleaderq  нужно переводить  жй   maplocalleader    быть приводить код функция  translate_keycode  достаточно объемный изза вариативность обозначение легко реализоваться самостоятельно понадобиться два строка русский английский раскладка метод  vimfntrstr from to   реализация посмотреть репозиторий плагин local map  functionmode lhs rhs opts    регистрация оригинальный маппинг   vimkeymapsetmode lhs rhs opts   local tr_lhs  tranlate_keycodelhs    регистрация перевести маппинг   vimkeymapsetmode tr_lhs rhs opts end   один вызов регистрация leaderq leaderй mapn leaderq qa применение обертка решать проблема работа пользовательский привязка клавиша оба раскладка дефолтный маппинг хоткея плагин последовательность ctrl работать русский буква авто перевод зарегистрировать привязка api neovim предоставлять метод который возвращать список установленный маппинг vimapinvim_get_keymapmode  глобальный сопоставление vimapinvim_buf_get_keymapmode  локальный сопоставление каждый маппинг список выглядеть примерно    buffer  0   expr  0   lhs  gx  lefthandside   lhsraw  gx   lnum  82   mode  n   noremap  0   nowait  0   rhs  plugnetrwbrowsex  righthandside   script  0   sid  13   silent  0  обходить массив каждый режим зарегистрировать перевести маппинг регистрация проходить помощь  vimapinvim_feedkeys   это позволять корректно обрабатывать привязка клавиша который ожидать текстовый объект например распространять маппинг  gc  комментирование ожидать третий символ определение текстовый объект который нужно закомментировать переводить зарегистрировать напрямую маппинг работать имитировать ввод  gc  нажатие  пс  маппинг срабатывать ожидаться это позволять взять поле каждый словарь приводить каждый контракт параметр  opts   vimkeymapset  использовать  vimapinvim_set_keymap   vimapinvim_buf_set_keymap  допускать ошибка регистрация глобальный локальный маппинг  vimkeymapset  использовать функция маппинг особый внимание требовать поле  mode  оно однобуквенный состоять склейка обозначение режим поэтому нужно разбивать массив символ авто маппинг глобальный сопоставление нужный поэтому нужно вызывать самый конец  initlua   initlua local function global_automapping    обычно нужный режим перевод    несмотря v содержать x s    нужно указывать отдельно   local allowed_modes   n s x v     local mappings      for _ mode in ipairsallowed_modes do     local maps  vimapinvim_get_keymapmode     for _ map in ipairsmaps do       local lhs desc modes  maplhs mapdesc vimsplitmapmode        tableinsertmappings  lhs  lhs desc  desc mode  modes      end   end    for _ map in ipairsmappings do     local lhs  translate_keycodemaplhs     for _ mode in ipairsmapmode do        проверка перевести маппинг поторять оригинальный маппинг        зарегистрировать       if not maplhs  lhs or has_maplhs mode mappings then         local opts             callback  function             local repl  vimapinvim_replace_termcodesmaplhs true true true              m означет нужно использовать              remap ввод символ             vimapinvim_feedkeysrepl m true           end           desc  mapdesc  translated                   vimapinvim_set_keymapmode lhs  opts       end     end   end end  global_automapping перевод локальный привязка каждый буфер сложно нужно зарегистрировать колбэк событие  bufwinenter   lspattach  выполнять перевод локальный привязка устанавливать  функция сокращать тк повторять global_automapping  показывать элемент требовать изменение local function local_automappingbufnr      code   for _ mode in ipairsallowed_modes do     local maps  vimapinvim_buf_get_keymapbufnr mode       code   end    for _ map in ipairsmappings do       code     for _ mode in ipairsmapmode do       if not maplhs  lhs or has_maplhs mode mappings then           code         vimapinvim_buf_set_keymapbufnr mode lhs  opts       end     end   end end  vimapinvim_create_autocmd bufwinenter lspattach     callback  functiondata     vimschedulefunction       if vimapinvim_buf_is_loadeddatabuf then         local_automappingdatabuf       end     end   end  глобальный локальный маппинг перевести привязка neovim умолчание например  gx  привязка создавать вимскрпт привязка плагин ленивый загрузка перевести ленивый маппинг ниже перевод регистрация последовательность ctrl дефолтный маппинг ctrl остальной встроенный команда отображаться результат функция  vimapinvim_get_keymap  значит удобно проверять привязывать какойнибудь функционал конкретный ctrl последовательность парсить  help  получать предложение автодополнение ctrl это сильно замедлять выполнение код решение перевод возможный последовательность ctrl каждый режим помощь  nvim_feedkeys  случай какойлибо функционал выполнять нажатие последовательность выполнять противный случай просто происходить  обращать внимание отличие langmap присутствовать символ раскладка  тот который дублировать другдруг  исключение ряд цифра который перевод приносить неудобство польза local ru  ëйцукенгшщзхъфывапролджэячсмитьбюёйцукенгшщзхъфывапролджэячсмитьбю local en  qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbnm  local function map_translated_ctrls    маппинг ctlr регистронезависимый поэтому убирать заглавный буква   local en_list  vimsplitengsubu     local modes   n o i c t v     for _ char in ipairsen_list do     local keycode  c  char       local tr_char  vimfntrchar en ru     local tr_keycode  c  tr_char         предотвращать рек",
    "tags": [
        "neovim",
        "langmap",
        "русская раскладка",
        "плагин",
        "хоткеи",
        "vim"
    ]
}
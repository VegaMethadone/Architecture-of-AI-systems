{
    "article_id": "726610",
    "article_name": "Создаем байт-код для JVM без компилятора",
    "content": "виртуальный машина java использовать концепция промежуточный байткод обеспечение переносимость операционный система аппаратный платформа использование байткод позволять отделять компилятор среда выполнение выполнять компиляция разный язык программирование исполнение jvm статья разбираться внутренний организация classфайлов байткод научаться работать фреймворок asm исследование программный генерация байткод динамический определение новый класс компиляция другой язык программирование  java virtual machine далее jvm реализовать совмещать регистровый стековый модель байткод представлять возможность реализация полноценный ооп создание исследование объект вызов метод описание арифметикологический операция ветвление операция стек локальный переменный преобразование тип символьный запись использоваться мнемоника который также включать тип операнд inc   dec   add   sub   div   mul   rem   арифметический операция первый буква определять тип операнд i  integer l  long s  short b  byte c  character f  float d  double a  reference a2b   преобразование тип данные  a   b  например i2f  integer to float new   создание объект athrow   выбрасывание исключение getstatic   получение ссылка статический метод поле putfield   изменение значение атрибут объект invokevirtual   выполнение метод объект invokedynamic   динамический выполнение метод язык динамический типизация invokespecial   запуск метод собственный объект invokeinterface   запуск метод интерфейс объект класс реализация интерфейс return   выход метод if   goto   переход условный безусловный load   store const dup   операция локальный переменный стек многий другой инструкция мочь содержать константный значение например адрес переход  gotoif  константа адрес объект  null  арифметикологический операция вызов функция выполняться использование стек хранение промежуточный результат мочь использовать локальный переменный файл class кроме непосредственно байткод содержать информация модификатор доступ название класс ссылка родительский класс список реализовать интерфейс метод свойство класс включая статический ссылка классыинтерфейс осуществляться полный имя пакет  название передаваться обнаружение специальный объект  classloader  который умолчание искать файл несколько местоположение использовать информация переменный окружение  classpath  аргумент командный строка  java cp  быть подробно разбирать байткод поскольку это написать несколько статья например  этот  сосредотачиваться анализ генерация байткод изнутри javaприложения существовать множество библиотека работа байткод поговорить  objectweb asm  который использоваться множество проект генерация байткод например  groovy   nashorn   mockito   gradle  использование asm создавать простой приложение два класс несколько арифметический операция ветвление package orgexample  import javautilrandom import javautilrandomrandomgenerator  class coin      string flipstring title          random r  randomfromrandomgeneratorgetdefault         if rnextboolean              return title head          else              return title tail                 public class main      public static void mainstring args throws interruptedexception          systemoutprintlntossing coin         threadsleep1000         var coin  new coin         systemoutprintlncoinflipresult is       сборка проект изучать получать classфайл javap v buildclassesjavamainorgexamplemain смочь увидеть версия байткод minor version  major version флаг модификатор доступ класс main название класс родитель родительский класс  javalangobject  аннотация аргумент пул константа сюда выполняться ссылка заголовок байткод который определяться класс название тип метод любой константа тч строка ссылка статический поле метод другой класс например  systemoutprintln  также ниже отображаться мнемонический представление байткод также таблица локальный переменный исключение тд байткод метод  flip  класс  coin  выглядеть следующий образ javalangstring flip     descriptor ljavalangstring     flags 0x0000     code       stack1 locals2 args_size1          0 invokestatic  7                   interfacemethod javautilrandomrandomgeneratorgetdefaultljavautilrandomrandomgenerator          3 invokestatic  13                  method javautilrandomfromljavautilrandomrandomgeneratorljavautilrandom          6 astore_1          7 aload_1          8 invokevirtual 19                  method javautilrandomnextbooleanz         11 ifeq          17         14 ldc           23                  string head         16 areturn         17 ldc           25                  string tail         19 areturn  мочь видеть запуск статический метод результат первый сохраняться стек извлекаться аргумент второй далее получать результат ссылка объект  random  сохраняться локальный переменная заново размещаться стек выполняться вызов метод  nextboolean  экземпляр объект класс  random  результат  boolean  сохраняться стек проверяться true  ifeq  случай успех осуществляться переход строка 17 стек загружаться константа 25 таблица неудача  продолжаться выполнение строка 14 загружаться константа 23 любой случай получать значение сниматься стек возвращаться результат выполнение метод подключать библиотека asm начинать разбор classфайлов dependencies  другой зависимость     implementation orgow2asmasmutil95     implementation orgow2asmasmtree95     implementation orgow2asmasmanalysis95  разбор файл начинаться загрузка файл класс  orgobjectwebasmclassreader   который передаваться байтовый массив содержание файл поток название класс последний случай использоваться  classloader   создавать объект позволять выполнять запрос данные сам класс например  getclassname  возвращать полный название класс точка заменять слэш  getaccess  возвращать битовый маска модификатор доступ  getsupername   название родительский класс  getinterfaces   список реализовать интерфейс получать константа  readintoffset   readdoubleoffset   readutf8offset buffer    readconstoffset buffer  тд также получать экземпляр класс  getclass  откуда получать информация класс использовать механизм рефлексия например  getannotationannotationclass   getfieldname   getmethodname args   исследование содержимое класс использоваться паттерн  visitor  использование метод  accept  передавать реализация класс  classvisitor  переопределение метод visitfield   вызываться каждый поле класс получать информация модификатор название тип описание тип вид строка значение умолчание visitmethod   вызываться каждый метод включая конструктор получать тип результат описание тип вид строка список исключение visitattribute   каждый атрибут visitannotation   каждый обнаруживать аннотация visitinnerclass   каждый вложенный класс visitend   вызываться конец разбор класс например разбор classфайла наш случай выглядеть package orgexample  import orgobjectwebasm  import javaiofileinputstream import javaioioexception  class analysisvisitor extends classvisitor       protected analysisvisitor          superopcodesasm9           override     public fieldvisitor visitfieldint access string name string descriptor string signature object value          systemoutprintlnvisit field name types descriptor         return supervisitfieldaccess name descriptor signature value           override     public methodvisitor visitmethodint access string name string descriptor string signature string exceptions          systemoutprintlnmethod name  types descriptor         return supervisitmethodaccess name descriptor signature exceptions           override     public void visitattributeattribute attribute          systemoutprintlnattribute is attribute         supervisitattributeattribute           override     public void visitend          systemoutprintlnvisit end         supervisitend        public class analysis      public static void mainstring args throws ioexception          var reader  new classreadernew fileinputstreambuildclassesjavamainorgexamplecoinclass         systemoutprintlnprocessing readergetclassname         readeracceptnew analysisvisitor classread",
    "tags": [
        "java",
        "bytecode",
        "jvm",
        "otus"
    ]
}
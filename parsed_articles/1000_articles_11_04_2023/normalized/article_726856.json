{
    "article_id": "726856",
    "article_name": "«Интернет-магазин на диване». Разрабатываем веб-приложение в Telegram",
    "content": "telegram давно использовать рабочий цель помощь бот автоматизировать большой спектр задача делать интернетмагазин статья рассказывать разрабатывать версия lazzon прямо мессенджер      рамка инструкция        научаться работать три вид кнопка   реализовывать интернетмагазин корзина   разрабатывать форма сбор пользовательский данные   заливать интернетмагазин  облако      начинать разработка  сначала заводить проект разработка frontend быть использовать react backend  nodejs     начинать инициализировать reactприложение пока создаваться приложение существующий папка выбирать путь точка далее инициализировать backend файл json появляться базовый настройка    удобный актуальный разработка devзависимость устанавливать пакет nodemon смочь автоматически перезапускать бот любой изменение код     устанавливать пакет api выбирать   nodejs telegram bot api   новый версия пока пакет устанавливаться переходить botfather вводить команда  newbot     вводить уникальный название бот обязательно содержать bot ответ botfather отдавать токен который скопировать кудато блокнот держать секрет поскольку понадобиться поздно    импортировать пакет api  require  часть код взять документация заменять демонстрационный токен собственный     разбирать ситуация команда  start  нужно отдавать пользователь какието кнопка     проверка написать бот команда  start  нажатие кнопка открываться окно минибраузер кроме написать команда  setmenubutton  выбирать бот который использоваться кнопка прописывать url поводить   далее быть взаимодействовать поле windowtelegramwebapp     import appcss const tg  windowtelegramwebapp function app  const onclose     f  return  div classnameapp   work button onclick oncloseзакрытьbutton div   export default app  дебаживать вебприложение telegramботом онлайн приходиться создавать репозиторий гит привязывать netlify получать ссылка приложение вставлять код     кастомизировать кнопка изменять цвет соответствовать айдентик мессенджер     headerjsx     import react from react import button from buttonbutton import headercss const header     const tg  windowtelegramwebapp const onclose     tgclose   return  div classnameheader button onclickoncloseзакрытьbutton span classnameusernametginitdataunsafeuserusernamespan div    каждый пуша заново триггерять сборка netlify a 30 секунда получать обновлять версия приложение     создавать отдельный хук корректный получение объект    usetelegramjs     const tg  windowtelegramwebapp export function usetelegram  const onclose     tgclose  const ontogglebutton     iftgmainbuttonisvisible  tgmainbuttonshow  else    основной кнопка взаимодействие бот  return  onclose tg user tginitdataunsafeuser     общение бот происходить помощь метод  telegramwebappsenddata  переходить создание страница маршрут     buttonjsx     import react from react import buttoncss const button  props   return  button props classnamebutton   propsclassname    export default button  стиль заносить productlistcss переходить следующий этап    productlistjsx     import react from react import productlistcss const productlist     return  div productlist div   export default productlist  indexjs файл нужно оборачивать наш приложение     reactstrictmode browserrouter app  browserrouter reactstrictmode  импортировать route appjs выглядеть это     import route routes from reactrouterdom  использоваться 6 версия  создавать два страница два адрес   div classnameapp header  routes route index elementproductlist     route pathform elementform   routes  div   приложение корневой путь открываться productlist     import react from react import fromcss const form    return  div classnameform h3введите ваш данныеh3 input classnameinput typetext placeholderстрана  div  select option value legalюрлицоoption option value legalфизлицоoption select   export default form  форма взять  отсюда  стандарт форма открываться бот нужно дополнять путь indexjs  text заполнять форма web_app url webappurl  form     сделать конфигурационный файл netlifytoml опция редирект любой маршрут делать редирект indexhtml     redirects from   to  indexhtml status  200   этап мочь вводить давать форма пока мочь отправлять     получать данные вебприложение мочь отправлять замечать функция который добавлять асинхронный     indexjs     await botsendmessage chatid text спасибо обратный связь await botsendmessage chatid text ваш страна   data country  await botsendmessage chatid text ваш страна   data street settimeouthandler   await botsendmessage chatid text ваш страна   data street  timeout 3000   отправка данные  затрагивать использование метод  senddata  посмотреть работать тот данные который мы приходить мы вместе эффект важно также прописывать коллбек     useeffect effect   сonst onsenddata  usecallback callback      данные приходить пустой проверять массив зависимость корзина хотя товар показывать кнопка     ifnewitemslength  0  tgmainbuttonshow tgmainbuttonsetparams params  text купить    посчитать общий стоимость товар добавлять следующий строка productlistjsx     const gettotalprice  items  return itemsreduceacc item   return acc  itemprice  суммировать функция стоимость товар получать gettotalpricenewitems    оставаться разбирать должный работать кнопка  купить  товар добавлять стоимость рассчитать мы помогать классический fetchзапрос     fetchinput httplocalhost8000 init  method post headers  contenttype applicationjson   body jsonstringifydata      работа frontend считать заканчивать мы нужно подымать сервер       серверный часть  проблема кроссдоменный запрос бот быть деплоить облачный сервер весь код который мы потребоваться находить файл indexjs воспользоваться документация  раздел  интересовать этот часть     apppost path webdata handlers req res   const  queryid products totalprice  reqbody const port  8000 applistenport callback   consolelog  server started on port   port  queryid сценарий выполнять функция связующий звено помощь мочь взаимодействовать бот     apppost path webdata handlers req res   const  queryid products totalprice  reqbody try   await botanswerwebappquery queryid result  type article id queryid  title успешный покупка inputmessagecontent message_text поздравлять покупка totalprice    это сообщение который быть отправлять пользователь платеж пройти сообщение неудачный оплата скопировать код вписывать новый текст который уведомлять пользователь ошибка разница случай успех httpзапрос стоять завершать код 200 противный случай  500    панель управление selectel зайти вкладка  облачный платформа    сервер  создавать новый      деплоить бот отличный вариант  линейка виртуальный машина  shared line  это облачный сервер гарантировать доля производительность ядро такой решение подходить петпроект который нужный полный загрузка cpu платить целый ядро весь мощность точно потребоваться      консоль администрирование открывать прямо панель сначала обновлять инструмент работа пакет  sudo apt update      устанавливать git  sudo apt install git  затем клонировать проект помощь обычный команда  git clone ссылка репозиторий  оставаться устанавливать npm подтягивать необходимый пакет nodejs запускать сервер необходимость обновлять версия  sudo npm install g n  далее выполнять команда  sudo n stable  latest точно работать корректно    нужно устанавливать зависимость помощь классический команда npm install     далеко мы помогать  менеджер процесс  например перезапускать сервер упасть распараллеливать процесс готовый    запускать бот команда  pm2 start indexjs   путь наш корневой файл вкладка порт панель selectel увидеть ipадрес который бот доступный  fetch  нужно заменять адрес  localhost  ipадрес облачный сервер указывать также новый адрес самый endpoint      заключение  видеть разработка telegramбота кнопка сложный хостинг такой интернетмагазин нужно оплачивать полный стоимость сервер   видеоверсия инструкция доступный  ссылка",
    "tags": [
        "selectel",
        "telegram bot",
        "pet project",
        "react.js",
        "node.js"
    ]
}
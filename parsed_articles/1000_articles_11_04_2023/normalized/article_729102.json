{
    "article_id": "729102",
    "article_name": "Как подключить локализацию L10n c Riverpod без ошибок с HTTP Requests",
    "content": "статья начинающий riverpod пользоваться provider совместно bloc недавно решаться попробовать riverpod один проект ход работа сталкиваться проблема который многие мочь замечать использование logger http запрос отправлять несколько запрос отправлять лишь 1 устранение проблема нужно создавать собственный провайдер dio работать первый дело создавать localeprovider final localeprovider  statenotifierproviderlocalenotifier localeref    return localenotifier   class localenotifier extends statenotifierlocale    localenotifier  supersharedpreferencelocale      onappstart       void changelanguagelocale locale      try        if l10nallcontainslocale return       state  locale      catch error        state  sharedpreferencelocale            void onappstart      try        final locale  sharedpreferencelocale       state  locale      catch error        state  const localeru          2  соединять materialapp обертывать наш myapp  providerscope  метод  watch  слушать изменение язык добавлять providercontainer наш maindart файл final providercontainer container  providercontainer   runapp     providerscope       child workspaceapp            widget buildbuildcontext context widgetref ref      final locale  refwatchlocaleprovider     return materialapprouter       title workspace       locale locale       routerconfig _router       supportedlocales l10nall       theme lighttheme       darktheme null       debugshowcheckedmodebanner false       thememode thememodelight       localizationsdelegates const          applocalizationsdelegate         globalmateriallocalizationsdelegate         globalcupertinolocalizationsdelegate         globalwidgetslocalizationsdelegate              builder easyloadinginit         3 httpquery get запрос создавать http_querydart файл вставлять код ниже import packagediodiodart import packagefluttermaterialdart import packageflutter_riverpodflutter_riverpoddart import packageloggerloggerdart import packagepretty_dio_loggerpretty_dio_loggerdart  class httpquery     final dioprovider  providerref      prettydiologger logger  prettydiologger       requestheader true       requestbody true       responsebody false       responseheader true       error true       compact true       maxwidth 100          dio dio  diobaseoptionsbaseurl sharedpreferencechosenserverapi     diointerceptorsadderrorinterceptor     diointerceptorsaddlogger     return dio           httpquery      futuredynamic get       required string url mapstring dynamic queryparameters mapstring dynamic headerdata async      try        containerreaddioproviderinterceptorsadderrorinterceptor       containerreaddioproviderinterceptorsaddlogger       mapstring dynamic header           contenttype applicationjson               mapstring dynamic queryparameters1  queryparameters         string token  await usersecurestoragegettoken       if token   headeraddallauthorization bearer token       if headerdata  null headeraddallheaderdata       final response result  await containerreaddioproviderget             url             options options               sendtimeout 30000               receivetimeout 60000               headers header                          queryparameters queryparameters1                  return resultdata      on dioerror catch error        if errortype  dioerrortypeconnecttimeout          debugprinterrortypename              if errortype  dioerrortypereceivetimeout          debugprinterrortypename              return error           наш dioprovider мочь использовать место getit он описывать базовый параметр dio мой случай вставлять туда базовый начало мой url запрос создавать providercontainer доступ провайдер widgetref далее получение результат response отправлять запрос наш dioprovider получать доступ он наш providercontainer 4 изменение язык использовать вместо statelesswidget  consumerwidget class languagepickerwidget extends consumerwidget    const languagepickerwidgetkey key  superkey key    override   widget buildbuildcontext context widgetref ref      final locale  refreadlocaleprovider      return dropdownbuttonhideunderline       child dropdownbutton         value locale         icon containerwidth 12         items l10nallmap           locale              final flag  l10ngetflaglocalelanguagecode              return dropdownmenuitem               value locale               ontap                   refreadlocaleprovidernotifierchangelanguagelocale                              child center                 child text                   flag                   style const textstylefontsize 32                                                                 tolist         onchanged _                  получать доступ наш localeprovider метод notifier который получать уведомление изменение состояние менять наш язык",
    "tags": [
        "riverpod",
        "flutter",
        "localization"
    ]
}
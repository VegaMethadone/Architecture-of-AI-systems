{
    "article_id": "728456",
    "article_name": "Мимо тёщиного дома я без метрик не хожу (обзор и видео доклада)",
    "content": "доклад  рассказывать мониторинг собирать множество метрика разный место один разруливать право разный часть этот метрика хранить большой объем данный конец рассматривать пример выбор система мониторинг пример небольшой сериал вымышленный компания который сталкиваться необходимость эволюция система мониторинг вместе рост инфраструктура мониторинг итинфраструктура  выглядеть рано становиться один самый крутой старый система мониторинг это  zabbix  познакомиться около 15 год назад устраиваться первый работа этот зрелый решение первый релиз который состояться далекий 2001 год какой основной задача система мониторинг два мониторять приложение мониторять инфраструктура выглядеть итинфраструктура 1520 год назад это физический сервер монолитный приложение редкий релиз сравнительно небольшой количество метрика проект 1020 тысяча обычно это метрика ос железо метрика база данные статус приложение запускать повезти health checkи современный инфраструктура сильно изменяться приложение размещать облако монолит разбивать микросервис появляться kubernetes частота релиз сильно возрастать некоторый компания бывать 100 релиз неделя особый значение приобретать бизнесметрика результат  один хост  сегодня собираться 1050 тыс метрика ошибаться именно один хост проект облако kubernetes частый релиз сделать инфраструктура динамичный подстегнуть количество метрика это очередь приводить то старый подход сбор метрика оказываться нерабочий потребоваться новый система современный система мониторинг должный сам находить источник новый метрика ручка заводить каждый новый кластер  вариант такой система просто работать собирать бизнес метрика легко непринужденный агрегировать данный слишком сырой данные оперировать практически невозможно обрабатывать миллион миллион метрика тк просто становиться учет этот требование zabbix выглядеть nokia 3310 задача который отлично справляться увидеть человек такой телефон  явный экзотика сегодня нужный система мониторинг который удовлетворять все наш потребность считать такой система мониторинг prometheus такой prometheus насколько мы подходить система мониторинг prometheus разрабатывать компания sound cloud однажды один конференция услышать внутренний система мониторинг borgmon компания google захотеться сделать нечто похожий открытый исходный код результат 2014 год появляться prometheus этот приложение до представлять собойодин бинарный файл который запускать внутри несколько условно независимый процесс рассматривать подробно service discovering  отвечать взаимодействие внешний apiсистемами такой ec2 consul k8s тд опрашивать система составлять список хост который получать метрика scraping  scraping забирать список хост service discovering собирать метрика  prometheus сбор метрика осуществляться pullмодели протокол http другой слово prometheus ходить разный эндпоинт говорить давать метрика приложение отвечать держать  возвращать страничка который plain textом описывать метрика текущий значение откуда prometheus собирать метрика целый группа приложенийexporterов этот приложение который уметь доставать метрика разный источник такой база данные операционный система отдавать понятный prometheus формат куча библиотека возможный фреймворков который позволять очень быстро доставать бизнесметрика приложение метрика собирать нужно сохранять prometheus свой собственный time series database база данный временный ряд сохранять метрика мы захотеться изучать prometheus свой собственный ui очень ограниченный функциональность он сохранять график тип отображение график тд поэтому никто особо пользоваться вместо это работать  grafana  извлечение данные prometheus использоваться свой собственный язык запрос   promql  который число позволять агрегировать данные это мочь простой операция сложение вычитание несколько метрика достаточно сложный  перцентиль квантить синусоида косинусоида вообще хватать фантазия немного сверху помимо prometheus  prometheus rules  процесс позволять делать два простой вещь описывать запрос результат запрос сохранять вид новый метрика  суть внутри сидеть простенький cron который каждый n секунда минута делать запрос результат сохранять новый метрика это очень удобный большой нагружать дашборда сложный вычисление доставать сразу подсчитывать метрика выполнять запрос получать быстрый отображение экономия ресурс также promql позволять описывать алерт триггер он задавать promqlвыражение устанавливать threshold порог срабатывание пересечение который запускать триггер отправлять уведомление prometheus слать уведомление канал мессенджер электронный пост  просто выполнять pushзапрос внешний система базовый система система являться alertmanager предварительно обрабатывать алерт позволять строить достаточно сложный пайплайн группировать алерт глушить ненужный маршрутизировать далее алерт доставлять соответствующий канал устраивать tsdb взгляд один самый важный элемент любой система мониторинг являться база данные медленный неэффективный ненадежный весь система давать разбираться работать база данные prometheus насколько подходить наш задача давать начинать простой абстрактный пример градусник который каждый 60 секунда собираться данный данные входить текущий значение температура timestamp временный метка данные получать данные иметь определенный формат оба параметр это float64 суммарный объем данные 16 байт 8 каждый параметр получать 16 байт записываться файл проходить минута приходить следующий данные который также записывать файл какоето время собираться данные целый час нужно выводить график дальнейший изучение читать файл либо часть содержать нужный мы данные отображать график ось х  временной метка ось y значение температура выглядеть достаточно просто делать источник данные скажем миллион поступать такой случай попробовать решать проблема лоб убеждаться запись данный файл работать поэтому быть писать данные каждый источник свой отдельный файл получать миллион файл посмотреть данные один источник просто брать нужный файл читать данные отображать график кажется вариант мы отлично подходить prometheus первый версия использоваться примерно такой схема нюанс  миллион источник мы нужно минута записывать миллион файл миллион значение это требовать миллион inputопераций течение один минута около 16500 iops этот количество выглядеть огромный справляться любой современный ssdнакопитель давать копнуть глубоко помнить данные один источник занимать 16 байт посчитать 16500 iops получаться примерно 22 гб день этот число кажется большой копнуть глубоко нужно записывать  16 байт  ssd казаться просто взять записывать 16 байтоднако современный ssd писать данные блок правило это блок 16 кб мочь 32 кб суть это менять записывать 16 байт ssd мы нужно прочитывать 16 кб изменять 16 байт затем записывать обратно 16кб учет пересчитывать объем данные получать 22 гб 22 тб каждый день перезаписывать ssd 22 тб диск быстро умирать тк ssd иметь определенный допустимый количество цикл перезапись это миллион источник 10 миллион 220 тб день ssd умирать быстро кажется миллион метрика это давать рассматривать следующий пример пустой кластер kubernetes выдавать гдето 200300 тысяча метрика добавлять приложение начинать скейлить кластер большой кластер количество метрика достигать 1015 миллион плюс собираться намного часто минута это делать вариант сбор нерабочий второй вариант  писать данные файл данные писаться блок файл поэтому проблема производительность умирание ssd какоето время дописывать данные затем итог получать набор данный один файл получаться миллион запись минута получать около 15 мб данные суммарный 23 гб данный день вставать вопрос отображать данные файл график нужно просканировать весь файл находить немой нужный точка отображать график метод менее работать файл 23 гб источник миллион 10 миллион файл 230 гб объем вырастать сильно хотеть посмотреть данный сутки месяц подход иметь очевидный проблема масштабирование производительность это проблема заключаться данные читать горизонтально мы нужный последовательный данные какоголибо источник писать  вертикально мы приходит",
    "tags": [
        "prometheus",
        "tsdb",
        "mimir",
        "observability",
        "kubernetes",
        "devops",
        "monitoring"
    ]
}
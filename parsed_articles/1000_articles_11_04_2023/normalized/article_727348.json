{
    "article_id": "727348",
    "article_name": "Как я решила попробовать себя в ML: анализ эмоциональной окраски отзывов с Кинопоиска 2.0",
    "content": "недавно решать попробовать реализовать задача анализ эмоциональный окраска отзыв кинопоиск хотеть поделиться свой опыт описывать шаг который использовать реализация стоять передо я задача  итак самый начало датасти опорный план дальнейший реализация дело приступать  шаг 1 получение данный   mainpy    reviews_datazip скачивать  jsonфайлы  отзыв затем читать данные файл добавлять получать отзыв общий список import json   with openreviews_datajson r as read_file     load_reviews  jsonloadread_file       reviews   reviews  load_reviewsgood reviews  load_reviewsbad reviews  load_reviewsneutral шаг 2 предобработка данный   preprocessingpy    этап удалять ненужный символ такой цифра знак препинание английский буква  import re from nltkcorpus import stopwords   def delete_symbolsreview      new_review       for word in review         reg_sumbols  resubwsd   word         reg_eng_symbols  resubazazs   reg_sumbols         new_reviewappendreg_eng_symbolssplit     return new_review delete_symbolsreview  функция удалять ненужный символ текстовый данные включая неалфавитноцифровой символ цифра возвращать список слово который разделять исходный отзыв далеко использовать библиотека nltk удаление стопслов текст это помогать получать точный результат анализ def delete_stop_wordsreview_words      stop_words  liststopwordswordsrussian     deleted_stop_words       for w in review_words         word  wlower         if word not in stop_words and word  n             deleted_stop_wordsappendword     return deleted_stop_words delete_stop_wordsreview_words  функция удалять стопслов список слово передавать стопслов  это распространенный слово язык такой тд который нести смысл обычно удаляться текстовый данные этот функция использовать модуль  stopwords  natural language toolkit nltk получать список стопслов русский язык приводить слово отзыв нижний регистр  def lower_reviewreview_words      lower_reviews       for rev in review_words         deleted_stop_words  delete_stop_wordsrev         lower_reviewsappenddeleted_stop_words     return lower_reviews lower_reviewreview_words  функция приводить слово текстовый давать нижний регистр это делаться гарантировать слово который появляться разный регистр рассматриваться один слово функция брать список слово который обрабатывать функция  delete_stop_words  возвращать список список каждый внутренний список содержать слово один отзыв нижний регистр шаг 3 векторизация    vectorizationpy    преобразовывать получать слово вектор помощь модель fasttext import json import fasttext   ft  fasttextload_modelccru300bin   def get_vectorreview     sentence  joins    for s in review     sentence_vector  ftget_sentence_vectorsentence     return sentence_vector функция  get_vectorreview  использовать модель  fasttext  получение векторный представление отзыв поочередно происходить векторизация отзыв список  good   bad   neutral  файл  reviews_datajson  векторизовать отзыв записываться новый файл  vectorizedjson   def vectorization_reviewslower_reviews     with openreviews_datajson r as read_file         reviews  jsonloadread_file     for i in range1000         reviewsgoodi  get_vectorlower_reviewsitolist     for i in range1000         reviewsbadi  get_vectorlower_reviewsi  1000tolist     for i in range1000         reviewsneutrali  get_vectorlower_reviewsi  2000tolist     with openvectorizedjson w as outfile         jsondumpreviews outfile функция  vectorization_reviewslower_reviews  вызывать функция  get_vectorreview  производить векторизация отзыв   шаг 4 kdtree   kdtree_vecpy    использовать kdtreekdдерево нахождение наиболее похожий отзыв вводить пользователь отзыв  from scipy import spatial   def find_similarvec_reviews user_review     treee  spatialkdtreevec_reviews     similar_review  treeequeryuser_review 10     print     return similar_review1 функция  find_similar  использовать библиотека  scipy  поиск наиболее похожий вектор задавать вектор vec_reviews  матрица вектор отзыв user_review  вектор который нужно находить матрица функция создавать объект  kdtree  библиотека  scipy  затем функция использовать метод  query  находить 10 наиболее похожий вектор задавать вектор результат работа функция являться массив индекс 10 наиболее похожий вектор матрица  vec_reviews  шаг 5 завершение   main использовать классификационный модель определять эмоциональный окраска получать отзыв работать метод опорный вектор svm классификация отзыв положительный отрицательный нейтральный  подводить итог  процесс написание данный статья рассматривать шаг реализация анализ эмоциональный окраска отзыв помощь метод машинный обучение использовать библиотека предобработка текст векторизация поиск близкий сосед надеяться материал полезный помогать создавать собственный анализатор эмоциональный окраска текст   ссылочка   github   telegram",
    "tags": [
        "python",
        "машинное обучение",
        "классификатор текстов",
        "kd дерево"
    ]
}
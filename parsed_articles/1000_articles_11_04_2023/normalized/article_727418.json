{
    "article_id": "727418",
    "article_name": "Битва за удобный для IDE stack trace в Go (с Bazel и без)",
    "content": "разработка программный обеспечение связанный написание код отладка отладка должный возможность комфортный некоторый ошибка писать лог стек вызов использовать мы ide idea goland позволять скопировать стек вызов получать комфортный навигация файл  analyze external stack traces  сожаление этот возможность работать случай бинарый файл собирать хост который запускать ide пост посвящать то пытаться подружить формат стек вызов ide какой вообще вариант отображение стек предоставлять go build go build влияние формат вывод стек два ручка флаг  trimpath   приводить отображение стек вызов одинаковый вид вне зависимость локальный расположение файл переменный окружение  goroot_final   позволять заменять префикс системный библиотека стек выключать флаг  trimpath  программа сравнение отображение стек рассматривать отображение стек быть пример небольшой программа исходный код скачать адрес  httpsgithubcombozarogostacktrace собственно программа  stacktracemaingo  package main  import  fmt  githubcommastermindscookoo githubcompkgerrors   func main   build a new cookoo app registry router context  cookoocookoo  fill the registry registryaddroutes cookooroute name test help a test route does cookootasks cookoocmd name hi fn   helloworld      execute the route routerhandlerequesttest context false   func helloworldcxt cookoocontext params cookooparams interface cookoointerrupt  fmtprintfvn errorsnewhello world return true nil  небольшой  gomod  module githubcombozarogostacktrace  go 120  require  githubcommastermindscookoo v130 githubcompkgerrors v091  старый добрый gopath порядок начинать старый добрый  gopath  пример вывод  go111moduleoff gopathpwd go get d githubcombozarogostacktracestacktrace  go111moduleoff gopathpwd go run githubcombozarogostacktracestacktrace  hello world mainhelloworld homebozarogopathsrcgithubcombozarogostacktracestacktracemaingo31 githubcommastermindscookoorouterdocommand homebozarogopathsrcgithubcommastermindscookooroutergo209 githubcommastermindscookoorouterrunroute homebozarogopathsrcgithubcommastermindscookooroutergo164 githubcommastermindscookoorouterhandlerequest homebozarogopathsrcgithubcommastermindscookooroutergo131 mainmain homebozarogopathsrcgithubcombozarogostacktracestacktracemaingo27 runtimemain usrlibgo120srcruntimeprocgo250 runtimegoexit usrlibgo120srcruntimeasm_amd64s1598 все просто видеть полный путь каждый файл путь располагать либо  src  директория golang либо каталог  gopath  сожаление стекать указывать существовать файл случай исполнять файл собирать окружение расположение каталог наш случай часть разработчик macos сборка боевой окружение осуществляться linux этот требование невыполнимый счастие флаг  trimpath  который отрезать вариативный часть стек вызов  go111moduleoff gopathpwd go run trimpath githubcombozarogostacktracestacktrace hello world mainhelloworld githubcombozarogostacktracestacktracemaingo31 githubcommastermindscookoorouterdocommand githubcommastermindscookooroutergo209 githubcommastermindscookoorouterrunroute githubcommastermindscookooroutergo164 githubcommastermindscookoorouterhandlerequest githubcommastermindscookooroutergo131 mainmain githubcombozarogostacktracestacktracemaingo27 runtimemain runtimeprocgo250 runtimegoexit runtimeasm_amd64s1598 случай путь быть либо относительно  gopath  либо относительно  src  директория golang получаться вполне переносить вид стек вызов go modules использование go modules поведение флаг  trimpath  разительный меняться сравнивать вывод стек вызов  git clone httpsgithubcombozarogostacktracegit   go run stacktrace  hello world mainhelloworld homebozarogithubgostacktracestacktracemaingo31 githubcommastermindscookoorouterdocommand homebozarogopkgmodgithubcommastermindscookoov130routergo209 githubcommastermindscookoorouterrunroute homebozarogopkgmodgithubcommastermindscookoov130routergo164 githubcommastermindscookoorouterhandlerequest homebozarogopkgmodgithubcommastermindscookoov130routergo131 mainmain homebozarogithubgostacktracestacktracemaingo27 runtimemain usrlibgo120srcruntimeprocgo250 runtimegoexit usrlibgo120srcruntimeasm_amd64s1598 аналогичный вывод  trimpath   go run trimpath stacktrace hello world mainhelloworld githubcombozarogostacktracestacktracemaingo31 githubcommastermindscookoorouterdocommand githubcommastermindscookoov130routergo209 githubcommastermindscookoorouterrunroute githubcommastermindscookoov130routergo164 githubcommastermindscookoorouterhandlerequest githubcommastermindscookoov130routergo131 mainmain githubcombozarogostacktracestacktracemaingo27 runtimemain runtimeprocgo250 runtimegoexit runtimeasm_amd64s1598  trimpath  прежний видеть полный путь каждый файл явно прослеживаться источник исходный файл рабочий каталог репозиторий данный пример  homegithubgostacktrace  системный библиотека golang  gorootsrc  данный пример  usrlibgo120src  сторонний библиотека  gomodcache  данный пример  homegopkgmod  отличие gopath флаг  trimpath  отрезать префикс имя файл подругому формировать файл текущий модуль рабочий каталог получать имя имя модуль  gomod  качество префикс данный пример  homegithubgostacktrace    githubcombozarogostacktrace  системный библиотека golang  gorootsrc  получать имя файл префикс сторонний библиотека качество префикс получать имя модуль версия данный пример  homebozarogopkgmodgithubcommastermindscookoov130    githubcommastermindscookoov130   особенно обращать внимание слово  masterminds  путь файл имя модуль писаться поразный stack trace удобный ide внезапно оказываться открывать проект репозиторий ideagoland попробовать проанализировать любой вышеприведенный стек вызов навигация исходный файл вариант стек вызов  gopath  подходить минипроект использовать go modules другой размещение файл вариант go modules  trimpath  подходить вероятный ваш домашний каталог отличаться  homebozaro  вариант go modules  trimpath  подходить ide поддерживать  httpsyoutrackjetbrainscomissuego13827  путь который видный стек суффикс существующий файл оказываться файл go sdk сторона выглядеть ide наш случай искать исходный файл путь относительно каталог проект родитель итог удовлетворительный формат переносимый стек вызов получать вид mainhelloworld stacktracemaingo31 githubcommastermindscookoorouterdocommand gopkgmodgithubcommastermindscookoov130routergo209 githubcommastermindscookoorouterrunroute gopkgmodgithubcommastermindscookoov130routergo164 githubcommastermindscookoorouterhandlerequest gopkgmodgithubcommastermindscookoov130routergo131 mainmain stacktracemaingo27 runtimemain gorootsrcruntimeprocgo250 runtimegoexit gorootsrcruntimeasm_amd64s1598 путь файл проект отображаться относительно корень проект качество путь сторонний зависимость использоваться путь модуль относительно  gomodcache  префикс  gopkgmod  ide находить путь проект лежать домашний каталог переменный окружение  gopath   gomodcache  иметь значение умолчание качество путь файл go sdk просто брать слово  goroot  мы удаваться придумывать путь ide находить подобный файл пляска такой формат стек вызов ide распознавать файл кроме файл go sdk весь конструкция ломаться разработчик локально переопределять переменный окружение  gopath   gomodcache  сценарий это действительно нужно известно получать стек вызов нужный формат видеть следующий путь получать стек вызов нужный формат повлиять сборка отладочный информация нужный путь файл вывод преобразовывать стек вызов нужный формат сделать внешний утилита который преобразовывать стек вызов нужный формат повлиять сборка мочь повлиять сборка случай go build сразу получать нужный формат стек вызов преобразование стек вывод наш случай повсеместно использовать библиотека  githubcomjoomcodeerrorx  метод преобразование нужный формат стек вызов вывод  httpspkggodevgithubcomjoomcodeerrorxinitializestacktracetransformer преобразование путь вид  trimpath  выглядеть тривиальный метод ряд недостаток стек вызов проходить мимо фильтр оставаться исход формат некоторый место например  pprof  гарантированный передаваться исходный формат внешний утилита использование внешний ",
    "tags": [
        "joom",
        "bazel",
        "go",
        "stacktrace",
        "golang"
    ]
}
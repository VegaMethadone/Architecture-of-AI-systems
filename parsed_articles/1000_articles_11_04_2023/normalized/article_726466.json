{
    "article_id": "726466",
    "article_name": "Можно ли привить кибериммунитет роботу? Практическое исследование на примере DIY робота официанта",
    "content": "устраиваться мягкий пуфик книжка хотеться скосплеить громозек мультфильм тайна третий планета сказать официант 400 капля яблочный сок печенька  рис 1 официант 400 капля яблочный сок печенька    решать реализовать такой робот практика платформа alphabot управление raspberry pi 4 назначать официант наш коворка    рис 2 alphabotофициант kasperskyos ce    один изважный часто недооценивать задача приразработка домашний решение такой какумный пылесос smart tv итд обеспечение приватность пользователь длятый робот мочь двигаться поквартира робот долженбыть оснащать камера акамера потенциальный источник чувствительный информация недавно широкий огласка получать случай робот пылесос посылать воблако фото скамера накоторомбыл хозяйка внеудобный положение информация отраектория движение робот илиинформация ографика раоты можетбывать интересный длянедоброжелатель поддействие весенний солнце хороший настроение 1го апрель решать  попробовать добавлять робот киберимунитет дляэтого вкачество операционный системыбывать использовать kasperskyos ce начинать стого чтопроанализировать требование составлять список чтодолжный делать система предоставлять возможность передавать робот высокоуровневый команда припомощь telegram сообщение привозить сок забирать напиток предоставлять механизм передача робот команда управление вперед назад поворот налево поворот направо стопа сок должный наливаться автоматический дозатор автоматически определять положение робот знать положение дозатор автоматически определять позиция студентаклиент предотвращать передача команда отдругой студент впроцесс выполнение заказ робот должный прокладывать маршрут автоматически приезжать  студентуклиент излюбой точка коворкинг позволять поставлять чашка наподнос робот должный прокладывать маршрут автоматически приезжать отстудентаклиент кдозатор студентуклиент  робот должный дождаться налив сок встакан издозатор робот должный прокладывать маршрут автоматически возвращаться счашка сок студентуклиент отдозатор общий архитектура наш решение получаться такой рис 3 общий архитектура система управление робот    рис 4 укрупненный схема передача команда робот вэта статья рассказывать ореализация программа управление робот наkasperskyos остальной компонент система быть описывать впоследующий статья подготовка raspberypi 4 работа дляполучение отладочный информация необходимо подключать кraspberry pi 4преобразователь дляработа сuart usb наплата alphabotа uart выводить наразъем впередний часть плата дляотладка программа запущенный наробот удобно подключать преобразователь usb2uart кэтому разъем рис 5подключение преобразователь  usb2uart raspberry pi устанавливать alphabot робот alphabot собирать значительно удобно подключать преобразователь разъем uart alphabot позволять разбирать робот необходимость получать отладочный информация качество терминал например использовать minicom рис 6 отладочный вывод kasperskyos консоль uart предварительно настраивать minicom работа устройство devttyusb0 инструкция настройка находить 6 необходимо отмечать kasperksyos ce 111 включать привычный пользователь linux командный терминал uart выдаваться отладочный информация вывод отладочный информация свой программа разработчик должный осуществлять вывод стандартный поток ошибка например помощь команда fprintfstderr some error n    разработка программа kasperskyos установка kasperskyos sdk kasperskyos sdk использовать linux debian 10 ubuntu 20 lts подробный инструкция установка приводить руководство 1  kasperskyos ce являться встраивать система запуск необходимо сформировывать загрузочный образ операционный система прикладной программа записывать microsd карта использование необходимо проводить первоначальный инициализация microsd карта данный операция описывать руководство kasperskyos 1 управление двигатель alphabot помощь gpio kasperskyos alphabot устанавливать мотор постоянный ток in1 in2 подключать левый двигатель in3 in4 подключать правый двигатель альфабот ena enb  это разрешать контакт высокоактивный отрегулировать скорость альфабот возможно выводить шимсигнал контакт in1 in2 in3 in4 управление мотор осуществляться путем выдача управлять сигнал gpio рис 7 команда управление мотор alphabot детальный информация alphabot находить руководство пользователь alphabot 5  kasperskyos api работа gpio работа gpio kasperskyos sdk предоставлять системный сущность gpio который включать драйвер работа gpio сущность необходимо добавлять проект прикладной программа использовать специальный api взаимодействие сущность рис 8 взаимодействие прикладной программа client сущность gpio kasperskyos ce api работа gpio включать следующий функция   gpioinit   инициализировать подсистема gpio   gpioopenportchar name gpiohandle handle   открывать порт   gpiosetmodegpiohandle h uint32 pin_number gpiomode mode   устанавливать режим работа пина gpio_dir_in gpio_dir_out gpio_event_low_level gpio_event_high_level gpio_event_rise_edge gpio_event_fall_edge   gpiooutgpiohandle h uint32 pin_number uint32 signal   подавать сигнал пин   gpioingpiohandle h uint32 pin_number uint32 signal   считать сигнал проект kasperskyos ce иметь определенный структура информация который находить документация 1 структура минимальный проект работа gpio показывать рис9  качество основа разработка свой проект использовать пример gpio_output sdk kasperskyos который добавлять функция выдача команда двигатель alpahot первоначальный инициализация gpio реализовать следующий образ gpiohandle initalphabot     gpiohandle handle  null    if gpioinit       fprintfstderr gpioinit failedn      return exit_failure        if gpioopenportgpio0 handle  handle  gpio_invalid_handle       fprintfstderr gpioopenport failedn      return exit_failure        gpiosetmodehandle gpio_pin_num_in1 gpio_dir_out    gpiosetmodehandle gpio_pin_num_in2 gpio_dir_out    gpiosetmodehandle gpio_pin_num_in3 gpio_dir_out    gpiosetmodehandle gpio_pin_num_in4 gpio_dir_out    gpiosetmodehandle gpio_pin_num_ena gpio_dir_out    gpiosetmodehandle gpio_pin_num_enb gpio_dir_out    return handle    выдача команда управление движение вперед остановка alphabot реализовать void forwardgpiohandle handle    fprintfstderr forwardn   gpioouthandle gpio_pin_num_in1 high   gpioouthandle gpio_pin_num_in2 low   gpioouthandle gpio_pin_num_in3 low   gpioouthandle gpio_pin_num_in4 high   gpioouthandle gpio_pin_num_ena high   gpioouthandle gpio_pin_num_enb high   void stopgpiohandlehandle    fprintfstderr stopn   gpioouthandle gpio_pin_num_in1 low   gpioouthandle gpio_pin_num_in2 low   gpioouthandle gpio_pin_num_in3 low   gpioouthandle gpio_pin_num_in4 low   gpioouthandle gpio_pin_num_ena low   gpioouthandle gpio_pin_num_enb low    проверка работа gpio разрабатывать минимальный тестовый решение kaspersky os который старт посылать команда вращение колесо разный сторона структура проект kasperskyos ce обычно включать приложение задача инициализация einit несколько конфигурационный фал специфичный длял kasperskyos  наш проект управление мотор alphabot kasperskyos включать следующий задача разрабатывать пользователь einit   отвечать запуск приложение client  собственно приложение управление мотор gpio рис 9 структура минимальный проект управление мотор alphabot kasperskyos ce необходимо отмечать работа задача управление мотор необходимый системный ресурс сore bsp gpio  доступ системный ресурс задача client другой задача обращаться системный процесс помощь посылка сообщение kasperksyos требовать явно специфицировать разрешение обмен сообщение который быть происходить процесс работа необходимо задавать правило передача сообщение задача помощь psl файл правило указываться разрешение запуск приложение передача запрос передача ответ например программа client должный взаимодействовать программа gpio посредством api работа gpio должный выдавать разрешение отправка запрос прием ответ   request srcclientclient dstkldriversgpio      grant    response srckldriversgpio dstclientclient      grant   код минимальный пример управление мотор alphabot находить наш репозито",
    "tags": [
        "kasperskyos",
        "alphabot",
        "telegrambot",
        "распознавание изображений",
        "iot"
    ]
}
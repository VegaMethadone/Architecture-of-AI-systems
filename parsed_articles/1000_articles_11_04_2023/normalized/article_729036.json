{
    "article_id": "729036",
    "article_name": "Как сделать торгового робота для Binance",
    "content": "пара слово обо программирование это хобби любимый дело сертифицировать системный архитектор поэтому просить особо ругать код  настоящий время увлекаться написание торговый робот постепенно изучать нейросеть применение анализ ценобъем акцийфьючерс обычно писать торговый робот работа брокер делать автоторговля акция фьючерс возникать мысль  готовый код применять другой актив например крипто актив биткоин эфир другой   изучать библиотека пример долгий время написание свой торговый робот решать сделать небольшой библиотека  backtrader_binance  интеграция api binance библиотека тестирование торговый стратегия  backtrader  помощь  backtrader_binance  создавать алгоробот торговля btc eth  подготовка окружение устанавливать последний версия  python 311 устанавливать среда разработка  pycharm community 20231 запускать pycharm community он создавать новый проект давать называть  algo_trade_robot  указывать создавать виртуальный окружение  virtualenv  python 311  нажимать create создание новый проект алготрейдинг проект создаваться он создаваться виртуальный окружение становиться готовый установка необходимый библиотека кликать внизу слева terminal открытие терминал который быть вводить команда установка библиотека открытый терминал проект устанавливать необходимый библиотека установка библиотека осуществлять интеграция binance api backtrader  вводить команда  pip install backtrader_binance ввод команда установка  backtrader_binance   терминал необходимо устанавливать библиотека тестирование торговый стратегия  backtrader pip install githttpsgithubcomwiseplatbacktradergit ps пожалуйста использовать  backtrader  мой репозиторий мочь размещать он свой коммит   некоторый зависимость который нужно устанавливать  pip install pythonbinance pandas matplotlib нужно сделать копия репозиторий корень проект взять пример код торговый стратегия делаться это один команда терминал git clone httpsgithubcomwiseplatbacktrader_binance наш проект выглядеть проект торговый робот binance создание конфигурация торговый стратегия  легко разбираться все работать сделать множество пример папка dataexamplesbinance_ru strategyexamplesbinance_ru  запуск пример необходимо получать свой  api ключ   secret ключ  прописывать файл configbinanceconfigpy  content of configbinanceconfigpy  class config     binance_api_key  your_api_key     binance_api_secret  your_secret_key получать токен binance api зарегистрировать свой аккаунт binance переходить раздел управление api затем нажимать кнопка создавать api выбирать сгенерировать система раздел ограничение api включать включать спотовый маржинальный торговля скопировать вставлять файл configbinanceconfigpy получать ключ api секретный ключ запускать пример папка  dataexamplesbinance_ru  strategyexamplesbinance_ru  создание торговый робот binance создание торговый робот обычно придерживаться некоторый структура код сказать шаблон который код работать торговый стратегия данные рынок тикерутикер отработка выводиться некоторый результат импорт необходимый_библиотека  класс индикатор  класс стратегииторговый система    основной раздел  подключение api биржа задание параметр запуск стратегия запуск стратегия   получение данный тикерутикер api   обработка этот данные стратегия   выставление заявка покупкупродажа возврат результат стратегия вывод результат пример находить несколько вариант запуск стратегия примерно стандартный структура код торговый робот файл  07  offline backtest indicatorspy  import datetime as dt import backtrader as bt from backtrader_binance import binancestore from configbinanceconfig import config   файл конфигурация    видео создание стратегия  rutube httpsrutuberuvideo417e306e6b5d6351d74bd9cd4d6af051  youtube httpsyoutubecomlivek82vabgva7s  class underoverbtindicator     lines  underover     params  dictdata220     plotinfo  dictplottrue      def __init__self         selflunderover  selfdata  selfpdata2              данные data2  1    торговый система class rsistrategybtstrategy          демонстрация live стратегия индикатор sma rsi          params     параметр торговый система         coin_target          timeframe            def __init__self         инициализация добавление индикатор каждый тикер         selforders     организовывать заявка вид справочник конкретно стратегия тикер  один активный заявка         for d in selfdatas   пробегаться весь тикер             selfordersd_name  none   заявка тикер пока           создавать индикатор каждый тикер         selfsma1           selfsma2           selfsma3           selfcrossover           selfunderover_sma           selfrsi           selfunderover_rsi           for i in rangelenselfdatas             ticker  listselfdnameskeysi     key name is ticker name             selfsma1ticker  btindicatorssmaselfdatasi period9   sma1 indicator             selfsma2ticker  btindicatorssmaselfdatasi period30   sma2 indicator             selfsma3ticker  btindicatorssmaselfdatasi period60   sma3 indicator               signal 1  пересечение быстрый sma снизу вверх медленный sma             selfcrossoverticker  btindcrossoverselfsma1ticker selfsma2ticker   crossover sma1 and sma2               signal 2  sma3 находиться ниже sma2             selfunderover_smaticker  underoverselfsma3tickerlinessma data2selfsma2tickerlinessma              selfrsiticker  btindicatorsrsiselfdatasi period20   rsi indicator               signal 3  rsi находиться низко 30             selfunderover_rsiticker  underoverselfrsitickerlinesrsi data230      def nextself         приход новый бар тикер         for data in selfdatas   пробегаться весь запрашивать барин тикер             ticker  data_name             status  data_state   0  live data 1  history data 2  none             _interval  selfptimeframe              if status in 0 1                 if status _state  false  history data                 else _state  true  live data                  print     open  high  low  close  volume   live format                     btnum2datedatadatetime0                     data_name                     _interval   таймфрейм тикер                     dataopen0                     datahigh0                     datalow0                     dataclose0                     datavolume0                     _state                                  printft  rsi  selfrsiticker0                 printft  crossover  selfcrossovertickerlinescrossover0                  coin_target  selfpcoin_target                 printft  free balance selfbrokergetcash coin_target                   сигнал вход                 signal1  selfcrossovertickerlinescrossover0   signal 1  пересечение быстрый sma снизу вверх медленный sma                 signal2  selfunderover_smaticker   signal 2  sma3 находиться низко sma2                   сигнал выход                 signal3  selfunderover_rsiticker   signal 3  rsi находиться низко 30                  if not selfgetpositiondata   позиция                     if signal1  1                         if signal2  1                              buy                             free_money  selfbrokergetcash                             price  dataclose0   цена закрытие                             size  free_money  price  025   25 доступный средство                             print50                             printft  buy ticker size  size at price  price                             selfordersdata_name  selfbuydatadata exectypebtorderlimit priceprice sizesize                             printft  выставлять заявка selfordersdata_nameptradeid покупка data_name                             print  50                  else   позиция                     if signal3  1                          sell                         print  50                         printft  продавать рынок data_name                         selfordersdata_name  selfclose   заявка закрытие позиция рыночный цена                         print  50      def notify_orderself order         изменение статус заявка         order_data_name  orderdata_name   имя тикер заявка",
    "tags": [
        "binance",
        "trading",
        "btc",
        "algo trading",
        "trading strategy",
        "trading robot",
        "trading bot",
        "binance robot trading",
        "backtrader",
        "binance backtrader"
    ]
}
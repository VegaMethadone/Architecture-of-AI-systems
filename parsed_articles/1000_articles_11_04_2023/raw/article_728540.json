{
    "article_id": "728540",
    "article_name": "Ctrl+C и Ctrl+V — как перестать копипастить и сконцентрироваться на уникальных проектах",
    "content": "Привет, меня зовут Надя, я руковожу фронтендерами в юните рекламных спецпроектов \nKTS\n. Мы запускам более 50 промо-игр в год, некоторые из них особенно эффективно работают, поэтому повторяются часто. В итоге мы часто делали похожие проекты. \nНедавно мы запустили \nKTS Market\n — каталог готовых игровых промо. Тем самым ускорили запуск новых проектов и перестали копипастить. Рассказываю про процесс и про то, как вы можете уменьшить повторяющуюся работу.\nСодержание:\nЧто за механики и как мы их запускали раньше\nПочему ситуацию нужно было менять\nКак мы решили проблему с демонстрацией механик и переиспользованием кода\nШаг 1: Выбрали наиболее повторяемые механики\nШаг 2: Определились, что будем кастомизировать \nШаг 3: Разработали каждую из механик\nШаг 4: Разложили в удобном формате для демонстрации клиенту\nШаг 5: Оформили механики как библиотеку\nЧто в итоге\nЧто за механики и как мы их запускали раньше\nИгровые механики — рабочий инструмент для продвижения компании, который помогает увеличивать вовлечённость пользователей и рост продаж. Клиенты играют и параллельно контактируют с брендом заказчика, узнают о предложениях и услугах компании. Например, через игру можно познакомить клиентов с новым продуктом, рассказав о новом телешоу на канале, или охватить новый сегмент аудитории, перейдя на новые рекламные площадки. \nМы делали много разных механик под запросы клиентов и накопили большой опыт в том, какие механики работают, а какие — нет. Когда к нам приходят клиенты не с готовой идеей, а просто с запросом подсветить определённые преимущества продукта — а таких клиентов большая часть — мы подбираем механики на основе нашего опыта. \nДля разработчиков же такое переиспользование опыта часто означает, что им нужно будет доработать уже готовый код под нужды нового клиента. \nНа практике выходит так:\n приходит клиент с некоторым запросом — например, подсветить выход новинок в продукции. Исходя из его целей мы подбираем определённую механику — допустим, игру с паззлами. На этапе согласования менеджер вспоминает, на каком проекте делали эту механику и кто её делал. Он берёт референсы из старого проекта — чаще всего скриншоты, показывает клиенту и, если проект подтверждается, передаёт задачу в разработку, подсвечивая, что за основу можно взять старый проект.  \nПочему ситуацию нужно было менять\nМожно выделить четыре основные причины, почему процесс с демонстрацией механики через скриншоты и разработкой путем копирования кода плохо работает. \nВо-первых: NDA \nНе все скриншоты с механиками мы можем показывать — с частью клиентов у нас есть NDA. В итоге продемонстрировать все возможности механики клиенту при продаже становится сложно. \nВо-вторых, клиенту важно «пощупать» механику на практике\nМы продаём не дизайн, а механику, поэтому, чтобы составить максимально полное впечатление, ему важно «пощупать», как механика будет работать: поиграть самостоятельно. \nРекламные проекты живут от двух недель до нескольких месяцев, поэтому не всегда удаётся отправить ссылку на рабочий проект — в доступе есть только его скриншоты.\nВ-третьих: код проекта не всегда легко кастомизировать\nНе всегда проект, который менеджер показывает заказчику в качестве примера, легко переиспользовать. Он мог создаваться в короткие сроки, поэтому его код будет требовать большой доработки. \nВ таких случаях эффект ускорения разработки от переиспользования наработок будет нивелироваться сложностью кастомизации кода, заточенного под задачи конкретного проекта. Может быть даже так, что проще написать код с нуля, чем пытаться его адаптировать.\nВ итоге оценка сроков реализации может быть неточной. В худшем случае механика, реализация которой оценивалась в один день, может вылиться в неделю плотной работы. \nВ-четвёртых: с каждым разом переиспользовать код становится всё сложнее\nЕсли каждый раз код копипастится с модификациями, которые не были заложены в первоначальной концепции, то со временем код из продуманной системы превращается в лоскутное одеяло доработок. В итоге это снижает качество финального продукта и демотивирует разработчиков. \nКак мы решили проблему с демонстрацией механик и переиспользованием кода\nРешение, которое показалась нам наиболее оптимальным, — создание собственного каталога готовых механик. Сделать нам это удалось за шесть шагов: \nШаг 1: Выбрали наиболее повторяемые механики\nВкладывать силы в редкие и сложные механики было бы нецелесообразно — ими бы просто не пользовались. Мы проанализировали наш опыт и выбрали самые эффективные, часто используемые и легко настраиваемые. Ими оказались: «карточки мемори», «яйцелов», «тиндер», пазлы и квиз.\n«Карточки мемори»\n: можно настроить оформление, стилистику и количество карточек, какие будут на них картинки и время на поиск.\nШаг 2: Определились, что будем кастомизировать \nВажно продумать заранее с менеджерами и разработчиками, что именно нужно будет спроектировать для дальнейшей кастомизации и переработки. Конечно, если поставить задачу разработчикам «сделайте эту игровую механику с учётом, что мы будем её переиспользовать», то частично они справятся, однако они не могут в одиночку продумать всё. В итоге нужного результата по возможности кастомизации не получится. \n«Пазл»\n: можно настроить формы пазлов, их количество, картинки на пазлах и время на сборку изображения.\nШаг 3: Разработали каждую из механик\nПри разработке механик мы столкнулись с рядом проблем, рассказываю, как мы решали каждую из них: \nЗадачи клиентов всегда приоритетнее, чем внутренние\nМы подготовили бэклог задач и оценили время выполнения каждой задачи, чтобы во время простоя между проектами для заказчиков можно было оперативно подключить человека на разработку механик маркета.\nКто будет разрабатывать механики\nЭффективнее с точки зрения затрат ресурсов было сделать так, чтобы разработчики, которые уже создавали или ревьюили эти механики, дорабатывали и переносили их в маркет в периоды между проектами.\nКогда стоит перестать улучшать механику\nШлифовать код можно бесконечно, особенно если пишешь его для себя и «на будущее». Поэтому мы старались поймать тот момент, когда затраты на разработку механики окупятся за приемлемое количество запусков проектов на основе механики из каталога. \nКак разработать механики качественно и внешне, и внутренне\nМы решили сделать унифицированный дизайн, чтобы разработчикам было проще разрабатывать продукт. Особенно актуально это для ребят на фронтенде — они привыкли вести разработку по макетам. Если им поставить просто задачу «вынеси эту механику в каталог», то это будет неэффективно. \nМы не старались «универсализировать» дизайн выносимой механики силами разработчиков, а отдельно попросили дизайнеров нарисовать макеты. Помимо этого, для ускорения работ готовый дизайн-макет мы подружили с библиотекой готовых UI-компонентов, чтобы не тратить время на их самостоятельную реализацию.\nВ любом другом проекте в первую очередь важны сроки и то, как проект выглядит для пользователей. В случае же вынесения механик в каталог также важно, чтобы код было удобно использовать другим разработчикам — они будут делать на его основе свои проекты. \nЧтобы сделать код подходящим под наши задачи, мы сделали код-ревью ключевым в процессе разработки механик — код всех механик смотрели не только лид разработки, но и коллеги. Хотя мы проводим код-ревью для каждого нашего проекта, здесь мы уделили ему особенно много внимания и времени. \n«Яйцелов»: \nможно настроить длительность игрового времени, уровни сложности — скорость падения предметов. \nШаг 4: Разложили в удобном формате для демонстрации клиенту\nУ потенциального клиента должна быть возможность зайти и самостоятельно «потыкать» понравившуюся механику. Мы объединили все механики в единый каталог и разложили их на нашем сайте, где клиент всегда имеет к ним доступ. \n«Тиндер»\n: можно настроить наполнение карточек и тип переключения — свайпом или по нажатию на кнопку.\nШаг 5: Оформили механики как библиотеку\nЗдесь нам было важно, что это должна быть именно библиотека, а не случайные скопированные проекты. Такой подход позволяет еще больше ускорить разработку и уменьшить копипаст.\n«Квиз»: \nможно настроить форматы вопросов, наполнение вопросов и ответов и комментарии к ответам.\nЧто в итоге\nВ итоге нам удалось создать каталог из \nпяти механик\n в едином стиле с возможностью настройки опций каждой из них. \nХранилище механик позволило нам наглядно демонстрировать их функционал без оглядок на NDA. Также оно увеличило скорость разработки, а следовательно и конверсию пресейла в продажу, так как теперь мы можем запускать проекты быстрее и дешевле. \nПосмотреть, что у нас получилось, можно \nпо ссылке.\n \n ",
    "tags": [
        "игровые механики",
        "каталог механик",
        "маркетплейс",
        "маркетплейсы",
        "демонстрация продукта",
        "демонстрация прототипа",
        "разработка игр",
        "управление разработкой",
        "медийная реклама"
    ]
}
{
    "article_id": "724452",
    "article_name": "Нестабильный Wi-Fi? MikroTik покупай, частоту на нём автоматом меняй",
    "content": "\r\nВ настоящее время интерференция наиболее актуальна для диапазона 2.4 ГГц, который перенасыщен работой вездесущих точек доступа. В статье я рассмотрел, какие возможности по исследованию радиочастотного спектра имеются на борту RouterOS, сформулировал рекомендации по выбору рабочей частоты точки доступа, работающей в сети без контроллера, а также предложил авторскую реализацию её автоматической смены. Предыстория такова, что ко мне обратилась компания Coffee Cup, у которой имеется сеть точек продаж формата кофе с собой, размещённых в разнокалиберных торговых центрах различных городов. Для работы кассового оборудования жизненно необходима работа Wi-Fi именно в диапазоне 2.4 ГГц, который, как следует ожидать, сильно зашумлён даже в огромных ТРЦ. Проблема оказалась настолько острой, что периодически устройства не могли нормально выйти в интернет, войдя в пике попыток переподключений к точке доступа. Вот в этом контексте и будет идти повествование, с отвлечением на моделирование других ситуаций.\n\r\n\n\r\nУ нас нет контроллера сети, именно поэтому предложенная реализация подойдёт для домашнего использования или небольшого предприятия. На рисунке приведены значения границ радиочастотных каналов в рассматриваемом диапазоне:\n\r\n\n\r\n\n\r\nВсего каналов 14. При этом не все разрешены в той или иной государственной локации. Классической гик-рекомендацией является использование «запрещённого для свободного использования» канала (речь идёт об 2484 МГц) в соответствии с постановлением Правительства РФ от 12.10.2004 N 539 (ред. от 22.12.2018) «О порядке регистрации радиоэлектронных средств и высокочастотных устройств», а именно пункта 24, который гласит, что \nне подлежат регистрации устройства малого радиуса действия, используемые в сетях беспроводной передачи данных, и другие устройства с функцией передачи данных в полосе радиочастот 2400 — 2483,5 МГц, с прямым расширением спектра и другими видами модуляции с максимальной эквивалентной изотропно-излучаемой мощностью не более 100 мВт.\n\r\n\n\r\nВо-первых, нарушать законодательство нельзя, во-вторых, продаваемые на рынке устройства MikroTik имеют прошивки с предустановленными ограничениями, в том числе на выбор 14 канала. Конечно, можно справиться с этой оказией посредством перепрошивки роутера, но делать это для удалённых от вас устройств не рекомендуется ни при каких обстоятельствах. Иначе, как гласит админская мудрость, собирай рюкзак к дальней поездке. Большинство каналов между собой частично перекрываются. Неперекрываемые каналы являются \nсмежными\n. И тут в работе точки доступа появляются интерференции, которые и являются источником основного количества проблем.\n\r\n\n\r\n\nИнтерференции\n бывают разнородные. Межканальные интерференции (\nneighboring channel interference\n) возникают, когда сигналы от устройств, работающих на разных, но расположенных недостаточно далеко частотах, частично накладываются друг на друга. Результат – интерференция на обоих каналах. Внутриканальные интерференции (\nco-channel interference\n) – это наложение сигналов от устройств, работающих на одинаковой частоте. Кроме этого помехи и интерференции могут создавать устройства, не имеющие отношения к IEEE 802.11, например: \nWi-Max\n, \nBluetooth\n, микроволновые печи, некоторые радиотелефоны, \nлетающие за окном квадрокоптеры\n.\n\r\n\n\r\n\n\r\nВлиять на весь этот зоопарк в радиочастотном спектре в большинстве случаев мы никак не можем. А наш заказчик, находящийся в торговых центрах на правах арендатора, и тем более, поэтому единственно, что нужно сделать – максимально корректно задать настройки собственной сети. Провести элементарное радиообследование RouterOS позволяет из коробки, причём как в консольном режиме, так графическом, так и псевдографическом:\n\r\n\n\r\n\n\r\nДля упрощения ниже будут представлены измерения в лабораторных условиях, где нет высокой загруженности. Классический для беспроводных точек доступа вывод состояния эфира представлен ниже. На нём отображены (в порядке очерёдности) \nMAC-адрес\n соседних Wi-Fi точек доступа, имена вещаемых ими сетей (\nSSID\n), занимаемые частоты, ширина каналов и возможности по расширению спектра, используемый стандарт, уровень принимаемого от них сигнала, уровень шума на занимаемой частоте и соотношение сигнал/шум:\n\r\n\n\r\n\n/interface wireless scan yourInterfaceName \nFlags: A - active, P - privacy, R - routeros-network, N - nstreme, T - tdma, W - wds, B - bridge \n\tADDRESS\t\t\t\tSSID\t\t\tCHANNEL\t\t\tSIG   NF SNR\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2412/20-Ce/gn\t-80 -104  24\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2412/20-Ce/gn\t-76 -104  28\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2417/20-Ce/gn\t-61 -104  43\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2417/20/gn\t\t-90 -104  14\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2432/20-Ce/gn\t-83 -105  22\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2457/20-eC/gn\t-74 -105  31\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2462/20/gn\t\t-80 -102  22\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2462/20-eC/gn\t-57 -102  45\nAP\tXX:XX:XX:XX:XX:XX\tXXXXXXXXXXXXXX\t2462/20-eC/gn\t-91 -102  11\n\n\r\nСовременные стандарты Wi-Fi (IEEE 802.11n и новее) умеют объединять каналы по 40 МГц и более (\nchannel aggregation\n) и, соответственно, расплываться на соседей. Сделано это для увеличения скорости передачи информации. Поэтому сразу отмечаем, что если необходимо быстро и без задержек предавать современный тяжёлый мультимедийный контент, то использовать стоит только 5 ГГц. 2.4 ГГц оставить там, где важно работать на большом расстоянии или через стены. А также для тех устройств, которые по-другому не умеют. Так как наша основная задача — уменьшить интерференции, поэтому разумно будет использовать более узкую полосу, например, в 5 МГц. Странные аббревиатуры Ce, eC, XX обозначают, в какую сторону от центральной частоты может быть выполнено расширение \nextended\n для \nchannel aggregation\n (Ce – право, eC – влево, XX – в любую сторону). Для понимания, какую же частоту всё-таки выбрать, лучше использовать другие консольные команды, отсекающие лишнюю информацию и агрегирующие вывод в более удобном виде:\n\r\n\n\r\n\n/interface wireless snooper snoop yourInterfaceName \nCHANNEL\t\t\tUSE        BW \t\tNET-COUNT \tNOISE-FLOOR \tSTA-COUNT\n2412/20/gn\t\t20.3%\t223.7kbps\t4\t\t\t-104\t\t\t9\n2417/20/gn\t\t10.7%\t74.5kbps\t3\t\t\t-104\t\t\t7\n2422/20/gn\t\t17.8%\t29.1kbps\t1\t\t\t-105\t\t\t1\n2427/20/gn\t\t7.7%\t66.8kbps\t0\t\t\t-105\t\t\t0\n2432/20/gn\t\t10.9%\t371.9kbps\t1\t\t\t-105\t\t\t3\n2437/20/gn\t\t8.4%\t59.9kbps\t0\t\t\t-105\t\t\t0\n2442/20/gn\t\t8.1%\t174.9kbps\t0\t\t\t-104\t\t\t0\n2447/20/gn\t\t0.9%\t6.8kbps\t\t0\t\t\t-103\t\t\t1\n2452/20/gn\t\t5.2%\t47.0kbps\t0\t\t\t-105\t\t\t1\n2457/20/gn\t\t13%\t\t105.4kbps\t1\t\t\t-106\t\t\t1\n2462/20/gn\t\t14.2%\t129.7kbps\t4\t\t\t-103\t\t\t7\n\n\r\nЗдесь видна приблизительная утилизация полосы пропускания, скорость передачи информации, количество сетей, использующих радиочастоту, уровень шума и количество подключённых беспроводных клиентов. Команда для ещё более редуцированного вывода:\n\r\n\n\r\n\n/interface wireless frequency-monitor yourInterfaceName\nFREQ\t\t\tUSE\t\t\tNF\n2412MHz\t\t\t12.9%\t\t-104\n2417MHz\t\t\t19.4%\t\t-105\n2422MHz\t\t\t15.4%\t\t-106\n2427MHz\t\t\t4.8%\t\t-116\n2432MHz\t\t\t15.8%\t\t-118\n2437MHz\t\t\t1.2%\t\t-104\n2442MHz\t\t\t8.4%\t\t-105\n2447MHz\t\t\t1.6%\t\t-104\n2452MHz\t\t\t2.5%\t\t-107\n2457MHz\t\t\t13.5%\t\t-106\n2462MHz\t\t\t15.8%\t\t-103\n\n\r\nДополнительно на борту имеется вот такой режим тексто-графического спектрального сканирования, показывающего мощность излучения в текущий момент времени. В каждой строке на графике отображается частота (столбец \nFREQ\n), среднее значение мощности (столбец \nDBM\n) и графическое представление мощности в виде точек (столбец \nGRAPH\n). Двоеточие \n«:»\n обозначает среднее значение мощности. Точками \n«.»\n обозначены средние пиковые значения:\n\r\n\n\r\n\n/interface wireless spectral-scan yourInterfaceName \nFREQ  DBM GRAPH\n2381  -85 :::::::::::::::::::::::::::::::::::::::::::::.\n2383  -84 ::::::::::::::::::::::::::::::::::::::::::::::::.\n2386  -85 ::::::::::::::::::::::::::::::::::::::::::::::.........\n2389  -86 :::::::::::::::::::::::::::::::::::::::::::......\n2391  -85 ::::::::::::::::::::::::::::::::::::::::::::::...\n2394  -87 ::::::::::::::::::::::::::::::::::::::::...............\n2397  -85 ::::::::::::::::::::::::::::::::::::::::::::::............\n2399  -84 ::::::::::::::::::::::::::::::::::::::::::::::::.\n2402  -86 :::::::::::::::::::::::::::::::::::::::::::............................\n2405  -86 :::::::::::::::::::::::::::::::::::::::::::..............................................\n2408  -83 ::::::::::::::::::::::::::::::::::::::::::::::::::::....................................................\n2410  -83 ::::::::::::::::::::::::::::::::::::::::::::::::::::....................................................\n\n\r\nВ RouterOS также имеется интересный графический режим \nSnooper\n, позволяющий шпионить за соседними точками доступа, собирая и агрегируя различную информацию об их работе. Нам он не пригодится:\n\r\n\n\r\n\n\r\nБолее подробно про весь инструментарий, имеющийся в RouterOS для спектрального анализа радиоэфира, можно почитать в \nдокладе\n Дмитрия Скоромнова на MikroTik User Meeting в 2019 году в Москве. Желающим во всём этом хорошо разбираться могу порекомендовать пройти у него обучение на \nонлайн-курсе\n по программе «\nУстройство, проектирование и диагностика беспроводных сетей 802.11 (Wi-Fi)\n».\n\r\n\n\r\n\nВыбор рабочей частоты\n должен быть остановлен на той, которая наименее загружена и имеет наименьший уровень шума. Но есть ещё кое-что, о чём нужно обязательно помнить. Если нет возможности уйти на свободный смежный канал, то лучше работать на том же канале, на котором работает современный роутер (здесь и далее под роутером понимается \naccess point\n) не сильно удалённого соседа. Не нужно выбирать соседнюю с ним частоту. Тут логика следующая: работая на общем канале и слыша друг друга, точки доступа смогут договариваться насчёт совместной поочерёдной работы. Важным моментом является то, что они должны воспринимать друг друга не за шум, а за устройство IEEE 802.11. И желательно, чтобы у них не было других помех, и они обе могли работать на высоких скоростях, тем самым повышая утилизацию эфирного времени. И ещё чтобы к ним не было подключено постоянно скачивающее что-то из интернета устройство-динозавр, занимающее эфир медленной загрузкой. Переводя своё устройство на соседнюю частоту, мы делаем хуже обоим, лишь увеличивая интерференции. Интерференция – неизбежное зло для 2,4 ГГц. Проблема будет проявляться только при одновременной передаче. Нежелательно настраивать близлежащие передатчики на несмежных каналах. Стоит также помнить, чем выше скорость, тем выше требования к SNR.\n\r\n\n\r\nВ идеальном мире на 2.4 ГГц все роутеры работают только на смежных каналах. При этом высокоскоростные устройства занимают одну общую частоту. Роутеры, поддерживающие только старые стандарты, работают на отдельных частотах. «Медленные» клиенты (не поддерживающие высокие скорости, из-за которых происходит снижение утилизации эфирного времени) из сетей исключены. И никто в эту идиллию инженерной мысли постоянно вмешаться не пытается.\n\r\n\n\r\nВыбор рабочей частоты можно доверить и самому MikroTik, включив режим auto в настройках:\n\r\n\n\r\n\n/interface wireless set yourInterfaceName frequency=auto\n\n\r\nПри загрузке устройство самостоятельно проведёт радиообследование по заложенному в него алгоритму, не оставив нам никакого поля для творчества. Именно по этой причине в условиях нестабильной работы беспроводной сети всеми любимая перезагрузка роутера оказывается иногда эффективной. Как говорится, семь бед, один Reset. Остальные настройки работы беспроводных сетей рассматривать не будем, поскольку это сильно уведёт нас в сторону от предмета разговора. Чтобы посмотреть, с какими текущими параметрами работает интерфейс, воспользуемся командой:\n\r\n\n\r\n\n/int wireless monitor [find name=yourInterfaceName] once \n                 status: running-ap\n                channel: 2447/20-eC/gn\n      wireless-protocol: 802.11\n            noise-floor: -102dBm\n         overall-tx-ccq: 95%\n     registered-clients: 8\n  authenticated-clients: 8\n            wmm-enabled: yes\n      current-tx-powers: 1Mbps:24(24/29),2Mbps:24(24/29),5.5Mbps:24(24/29),11Mbps:24(24/29),\n                         6Mbps:24(24/29),9Mbps:24(24/29),12Mbps:24(24/29),18Mbps:24(24/29),\n                         24Mbps:24(24/29),36Mbps:23(23/28),48Mbps:22(22/27),54Mbps:21(21/26),\n                         HT20-0:24(24/29),HT20-1:24(24/29),HT20-2:24(24/29),HT20-3:24(24/29),\n                         HT20-4:24(24/29),HT20-5:23(23/28),HT20-6:21(21/26),HT20-7:20(20/25),\n                         HT40-0:24(24/29),HT40-1:24(24/29),HT40-2:24(24/29),HT40-3:24(24/29),\n                         HT40-4:24(24/29),HT40-5:23(23/28),HT40-6:21(21/26),HT40-7:20(20/25)\n    notify-external-fdb: no\n\n\r\nДля нас здесь интересна характеристика \nCCQ\n (\nClient Connection Quality\n). Она интерпретирует значение в процентах, насколько эффективно используется полоса пропускания относительно максимально возможного значения. Рассчитывается как среднее отношение двух временных интервалов: делителем выступает реально затраченный промежуток времени на передачу кадра, числителем является минимально возможное время (с максимальной скоростью и без повторных попыток отправить кадр). Если его значение начнёт снижаться, значит, количество повторных отправок стало расти, а этому виной интерференция. Подведём промежуточные итоги. Нами выбрана оптимальная частота Wi-Fi, интерференции есть, но лучше не сделаешь:\n\r\n\n\r\n\n\r\nВ пятницу вечером поступает звонок: у клиента всё упало, не работает CRM, касса, камера. А всё потому, что соседние точки доступа до этого несколько раз были перезагружены и поменяли свои настройки излучения, а у нас частота задана жёстко. Режим auto часто тоже не помогает, не в этой, так другой аналогичной ситуации. Клиентские устройства постоянно разрывают соединение с точкой доступа. В логе видим примерно следующее:\n\r\n\n\r\n\n2023-03-16T14:01:36.013859+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, unicast key exchange timeout, signal strength -33\n2023-03-16T14:01:37.985225+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -25\n2023-03-16T14:01:42.985967+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, unicast key exchange timeout, signal strength -26\n2023-03-16T14:01:48.994610+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -26\n2023-03-16T14:01:53.983365+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, unicast key exchange timeout, signal strength -26\n2023-03-16T14:02:06.466390+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -27\n2023-03-16T14:02:12.565514+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: reassociating\n2023-03-16T14:02:12.616101+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, ok, signal strength -27\n2023-03-16T14:02:12.616101+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -23\n2023-03-16T14:02:16.003368+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: reassociating\n2023-03-16T14:02:16.056218+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, ok, signal strength -23\n2023-03-16T14:02:16.056218+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -24\n2023-03-27T14:52:27.815225+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: disconnected, group key exchange timeout\n2023-03-27T14:52:27.856921+03:00 192.168.15.25 wireless,info BA:5B:4E:A6:FF:0F@wlan1-COFFEECUP_2_staff: disconnected, group key exchange timeout\n2023-03-27T14:52:31.770148+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: connected, signal strength -54\n\n\r\nДля начала разберёмся, что же тут происходит. Мы видим неудачные попытки подключения клиентов с отличным уровнем сигнала по причине какого-то \ntimeout\n. \nGroup key exchange\n (\nUnicast key exchange\n аналогичен ему) – это процедура обновления временного ключа в WPA. Ключ общий для всех клиентов и периодически сменяется роутером. В MikroTik по умолчанию интервал обновления 5 минут:\n\r\n\n\r\n\n\r\nВ процессе обновления временного ключа клиенты его должны получить, но у них это не выходит. И проблема сама собой не решится. Это и есть триггер для смены рабочей частоты, так как даже близкорасположенные клиенты не могут далее нормально взаимодействовать с точкой доступа, осуществляя стандартные операции. В интернете можно встретить рекомендации по увеличению интервала обновления до 1 часа, что только усугубит проблемы отсутствием нормальной информации в логе при аналогичных сбоях. Перевод логирования \nwireless\n в режим \ndebug\n в данной ситуации не даст более развёрнутой картины. Ниже приведены различные ситуации, при которых вмешиваться в работу роутера не стоит:\n\r\n\n\r\n\n2023-03-20T11:08:12.185476+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: disconnected, extensive data loss\n2023-03-20T11:08:12.399566+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: connected, signal strength -44\n2023-03-20T11:08:51.069290+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: disconnected, extensive data loss\n2023-03-20T11:08:51.155986+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: connected, signal strength -44\n2023-03-20T11:12:06.857901+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: disconnected, extensive data loss\n2023-03-20T11:12:06.931950+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: connected, signal strength -45\n2023-03-20T11:15:40.124038+03:00 192.168.15.17 wireless,info 72:5E:1F:46:5B:A0@wlan4-COFFEECUP_2: connected, signal strength -59\n2023-03-20T11:15:40.525311+03:00 192.168.15.17 wireless,info 72:5E:1F:46:5B:A0@wlan4-COFFEECUP_2: disconnected, received deauth: sending station leaving (3), signal strength -59\n2023-03-20T11:15:54.109104+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: disconnected, extensive data loss\n2023-03-20T11:15:54.236219+03:00 192.168.15.25 wireless,info AA:D2:21:F2:04:A8@wlan1-COFFEECUP_2_staff: connected, signal strength -35\n2023-03-16T14:02:12.565514+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: reassociating\n2023-03-16T14:02:12.616101+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, ok, signal strength -27\n2023-03-16T14:02:12.616101+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -23\n2023-03-16T14:02:16.003368+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: reassociating\n2023-03-16T14:02:16.056218+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: disconnected, ok, signal strength -23\n2023-03-16T14:02:16.056218+03:00 192.168.15.17 wireless,info 60:01:94:20:4A:C9@wlan1-COFFEECUP_2_staff: connected, signal strength -24\n\n\r\nЗдесь штатные отключения. Из интересного – \nReassociating\n, для нашего случая процедура установления L2 соединения между беспроводным клиентом и точкой доступа, если клиент хочет переключиться от одной точки доступа к другой в рамках одного устройства. Запрос на ассоциацию отправляется после аутентификации.\n\r\n\n\r\nВозвращаясь к предыстории, при возникновении проблем с критически важным для бизнес-процессов беспроводным оборудованием заказчика, работающем только на 2.4 ГГц, приходилось вручную подключаться к устройствам и перестраивать рабочую частоту. При этом выбирать её по науке нет необходимости, ведь завтра точка доступа соседа перезагрузится, и весь расчёт окажется не рабочим. Достаточно методом перебора задавать такую частоту, чтобы всё работало хорошо и при необходимости повторять эту процедуру заново. Тогда и появилась идея написать скрипт для RouterOS, который делал бы это за специалиста. Готовая версия давно старается на устройствах заказчика и со своей задачей неплохо справляется:\n\r\n\n\r\n\n\n                        \nKeyExchangeTimeoutSeacher.lua\n\n                        \n{\n    # KeyExchangeTimeoutSeacher v1.1 (202303)\n    # Скрипт меняет частоту WiFi при обнаружении в логе сообщений:\n    # \"unicast key exchange timeout\" или \"group key exchange timeout\"\n    # Имя интерфейса с проблемами\n    :local interfaceName \"yourInterfaceName\";\n    # 2407 2412 2417 2422 2427 2432 2437 2442 2447 2452 2457 2462 2467\n    # Минимальная рабочая частота, разрешенная конфигурацией устройства\n    :local frequencyMin 2412;\n    # Максимальная рабочая частота, разрешенная конфигурацией устройства\n    :local frequencyMax 2452;\n\n    :local smtpServer \"XXX\";\n    :local emailFrom \"XXX\";\n    :local emailTo \"XXX\";\n    :local smtpUser \"XXX\";\n    :local smtpServerPort 465;\n    :local smtpUserPass \"XXX\";\n    # Максимальное количество ошибок, после которых меняем частоту\n    :local countTreshold 5;\n    # Время, через которое обнуляется countTreshold (секунд)\n    :local timeTreshold 600;\n\n    :global count;\n    :global time;\n    :local frequency;\n    # EpochTime - функция для вычисления UnixTime\n    :global EpochTime do={\n        :local ds [/system clock get date];\n        :local months;\n        :if ((([:pick $ds 9 11]-1)/4) != (([:pick $ds 9 11])/4)) do={\n            :set months {\"an\"=0;\"eb\"=31;\"ar\"=60;\"pr\"=91;\"ay\"=121;\"un\"=152;\"ul\"=182;\"ug\"=213;\"ep\"=244;\"ct\"=274;\"ov\"=305;\"ec\"=335};\n        } else={\n            :set months {\"an\"=0;\"eb\"=31;\"ar\"=59;\"pr\"=90;\"ay\"=120;\"un\"=151;\"ul\"=181;\"ug\"=212;\"ep\"=243;\"ct\"=273;\"ov\"=304;\"dec\"=334};\n        }\n        :set ds (([:pick $ds 9 11]*365)+(([:pick $ds 9 11]-1)/4)+($months->[:pick $ds 1 3])+[:pick $ds 4 6]);\n        :local ts [/system clock get time];\n        :set ts (([:pick $ts 0 2]*60*60)+([:pick $ts 3 5]*60)+[:pick $ts 6 8]);\n        :return ($ds*24*60*60 + $ts + 946684800 - [/system clock get gmt-offset]);\n    }\n    :local currentFrequency [/interface wireless get $interfaceName frequency];\n    :local mikrotikName [/system identity get name];\n    :local stringSearch1 \"$interfaceName: disconnected, unicast key exchange timeout\";\n    :local stringSearch2 \"$interfaceName: disconnected, group key exchange timeout\";\n    :local setStringSearch {$stringSearch1; $stringSearch2};\n    # Инициализация массива\n    :local logArray [ :toarray \"\" ];\n    :foreach stringSearch in=$setStringSearch do={\n        :foreach line in=[/log find buffer=wireless message~$stringSearch] do={\n            :set logArray ($logArray, $line);\n        }\n    }\n    # Если массив не пустой\n    :if ($logArray != ({})) do={\n        # Очищаем лог от старых обнаружений\n        :log info \"Wireless log clear by wifi analyzer script!\";\n        :execute \"/system logging action set wireless memory-lines=1\";\n        :execute \"/system logging action set wireless memory-lines=1000\";\n        # Парсим лог\n        :foreach string in=$logArray do={\n            # Определяем текущее время\n            :local nowTime [$EpochTime];\n            :local nowTimeWithDelta ($nowTime - $timeTreshold);\n            # Много ли времени прошло с момента обнаружения последней ошибки\n            :if ($nowTimeWithDelta > $time) do={\n                :set count 0;\n                :set time $nowTime;\n            }\n            :if ($count < $countTreshold) do={\n                :set count ($count + 1);        \n            } else={\n                :set count 0;\n                :set time [$EpochTime];\n                if ($currentFrequency = $frequencyMax) do={\n                    :set frequency $frequencyMin;\n                } else={\n                    :set frequency ($currentFrequency + 5);\n                }\n                :execute \"/interface wireless set $interfaceName frequency=$frequency\";\n                # Отправка уведомления на email\n                /tool e-mail send from=$emailFrom to=$emailTo server=$smtpServer \\\n                    port=$smtpServerPort user=$smtpUser password=$smtpUserPass start-tls=tls-only \\\n                    subject=\"$mikrotikName change frequency to $frequency MHz\" \\\n                    body=(\"Good luck!\");\n                :log info \"$mikrotikName change frequency to $frequency MHz\";\n                # Прекращаем выполнение скрипта, чтобы в будущем проанализировать\n                # работу на новой частоте (несмотря на количество оставшихся не обработанных сообщений лога)\n                :error \"$mikrotikName change frequency to $frequency MHz\";\n            }\n        }\n    }\n}\n\n\r\n\n\n                    \n\r\nКод парсит лог в буфере \nwireless\n и ищет в нём сообщения, содержащие ключевые слова \ndisconnected, unicast key exchange timeout\n или \ndisconnected, group key exchange timeout\n – триггеры появившихся проблем, которые придётся решать сменой рабочей частоты. Если они встретились, тогда определяется текущее время, которое переводится в \nUnix Time Stamp\n. Из коробки RouterOS не поддерживает этот формат, поэтому пришлось использовать найденную в интернете функцию \nEpochTime\n. Далее код обращает внимание, давно ли до этого встречалось подобное сообщение (здесь удобно использовать \nUnix Time Stamp\n в арифметических операциях). Если давно, то выставляет счётчик на ноль и начинает подсчитываться количество произошедших таймаутов (сообщений об ошибках). Отмечу, что время будет впервые рассчитано только после того, как счётчик единожды превысит указанный порог. Если превышен порог, то точка доступа переключается на следующую рабочую частоту и отправляет администратору уведомление. Перед выполнением скрипта необходимо внести изменение в конфигурацию устройства, указав беспроводному интерфейсу жёстко заданную рабочую частоту, и добавить дублирование сообщений в логе для тем \nwireless\n и \ninfo\n в новый буфер \nwireless\n, например:\n\r\n\n\r\n\n/interface wireless set yourInterfaceName frequency=2412\n/system logging add action=wireless topics=wireless,info\n/system logging action add name=wireless target=memory\n\n\r\n\n\r\nДля устройств, работающих на RouterOS 7, в коде отправки сообщения вместо \nstart-tls=tls-only\n необходимо написать \ntls=yes\n. В планировщике необходимо запланировать выполнение скрипта:\n\r\n\n\r\n\n/system scheduler\nadd interval=150s name=KeyExchangeTimeoutSeacher on-event=\"/system script run KeyExchangeTimeoutSeacher\" policy=\\\n    ftp,reboot,read,write,policy,test,password,sniff,sensitive,romon start-time=startup\n\n\r\nДля симуляции проблемы и обкатки скрипта можно вручную создать необходимые записи в логе: \n\r\n\n\r\n\n:log info \"60:01:94:20:4A:C9@yourInterfaceName: connected, signal strength -24\";\n:log info \"60:01:94:20:4A:C9@yourInterfaceName: disconnected, unicast key exchange timeout, signal strength -33\";\n:log info \"AA:D2:21:F2:04:A8@yourInterfaceName: disconnected, group key exchange timeout\";\n\n\r\nПри таком тестировании добавленное дублирование сообщений в логе для тем \nwireless\n и \ninfo\n необходимо выключить, а в код внести изменения:\n\r\n\n\r\n\n...\n:foreach line in=[/log find buffer=memory message~$stringSearch] do={\n...\n:execute \"/system logging action set memory memory-lines=1\";\n:execute \"/system logging action set memory memory-lines=1000\";\n...\n\n\r\nЕщё одна задача автоматизирована. Роутеры стараются подобрать рабочую частоту, на которой беспроводные клиенты смогут работать без навязчивых ошибок. Выбор у них на самом деле невелик. При желании можно допилить код, продумав более сложные алгоритмы по смене частоты. Или реакцию на появление других сообщений в логе. Или заняться более детальным переконфигурированием беспроводных интерфейсов. А также можно выйти на другие диапазоны, где на текущий момент интерференция не столь актуальна. MikroTik здесь выступает швейцарским ножом, с помощью которого можно, приложив усилия и фантазию, получить интересные автономные решения. Обобщая сказанное, выше рассмотрены причины появления разнородных интерференций в работе Wi-Fi-оборудования, показаны возможности по анализу радиоэфира, имеющиеся на борту в RouterOS. Сформулированы в некотором отношении противоречивые рекомендации по назначению рабочей частоты точки доступа. И самое интересное, представлен скрипт для её автоматической смены при появлении характерных ошибок.\n\r\n\n\r\n\nTelegram-канал с розыгрышами призов, новостями IT и постами о ретроиграх 🕹️\n \n ",
    "tags": [
        "ruvds_статьи",
        "routeros",
        "mikrotik script",
        "wi-fi"
    ]
}
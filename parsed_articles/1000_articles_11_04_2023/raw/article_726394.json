{
    "article_id": "726394",
    "article_name": "Telegram бот, который улучшит любую IT компанию",
    "content": "Всем привет, в этой статье я хотел бы рассказать о создании бота для мониторинга систем (сайтов) и внутренних сервисов – их доступность/недоступность.\nКому данный бот будет полезен 100%?\nАбсолютно всем!\nВы можете мониторить как одну систему, так и хоть 100, получать уведомления в Telegram и оперативно принимать меры по устранению проблем.\nВкратце опишу принцип работы бота. Есть список URL, первый поток бегает по ним и проверяет на доступность, если находит недоступный ресурс – помещает его в список не работающих ресурсов и оповещает нас о недоступности ресурса, временно удаляя неработающий ресурс из списка рабочих. В свою очередь список неработающих систем также мониторится и в случае обнаружения рабочего ресурса – нас оповещают об этом и ресурс, который был в списке неработающих покидает этот список.\nПервое что мы делаем – это создаем бота в \n@BotFather\n. Придумываем имя и получаем токен. Итак, перейдем непосредственно к коду.\nИмпортируем нужные библиотеки, telebot (pyTelegramBotAPI) хорошая и лёгкая библиотека для создания бота на Python. Библиотека threading импортируется для запуска в несколько потоков.\nВ этой части кода указываем тайм-ауты для запросов и долгих response, иногда ресурс может отдать ответ за 5 секунд иногда и 30 будет недостаточно. Прописываем интервал пересылки из бота в беседу (можно не делать пересылку в беседу, но тогда придется прописывать user ID, на который будет триггерить бот, иначе любой кто зайдет в бота сможет запустить проверку сначала). И указываем шаблон оповещения доступной системы.\nСоздаем функцию, которая будет обрабатывать загрузку файлов. Проходимся построчно по .ТХТ файлу, помещая все значения в список, прописываем кодировку (можно указать кодировку в .ТХТ, но лучше в коде, так как часто файлы меняются и этот момент забывается, либо некорректно воспроизводится другими пользователями). Указываем разделитель, по которому будет происходить отсечение значения, вносим сайт в список.\nПереходим непосредственно к checking ресурсов и помещению их в списки (рабочие/нерабочие ресурсы), и оповещению в боте о нерабочих ресурсах.\nИ получаем в боте сообщение такого формата:\nВ данном блоке check-аются недоступные ресурсы. Поток бегает по списку недоступных систем и оповещает в боте.\nОповещение о доступности будет иметь такой вид: \nОпрашиваем серверы Telegram на предмет новых сообщений, не прекращая опрос при получении ошибки.\nДля удобства закинем бота в контейнер Docker.\ndocker build -t python-docker-checker .\ndocker run python-docker-checker\nИ вот бот уже крутится в контейнере.\nP.S. Помимо систем, можно мониторить и внутренние сервисы, имеющие Status Code.\n \n ",
    "tags": [
        "bot",
        "telegrambot",
        "мониторинг сайта",
        "мониторинг сервера",
        "мониторинг",
        "бот телеграм"
    ]
}
{
    "article_id": "726836",
    "article_name": "Перспективы развития Flutter",
    "content": "Перспективы развития Flutter\nHola, Amigos! С вами Саша Чаплыгин, Flutter-dev. После мероприятия  \nFlutter Forward\n \nТим Снитч\n написал\n \nкраткую выжимку о развитии Flutter в 2023 году\n. Подготовил перевод статьи, который полезно почитать всем Flutter-разработчиком. \nЯ и мои коллеги пишем о том, что такое быть Flutter-разработчиками и рассказываем о внутренней кухне проектов в телеграм-канале \nFlutter.Много.\n Заходите, будем вас ждать :)\nFlutter — это набор инструментов для разработки пользовательского интерфейса, который позволяет разработчикам создавать мобильные и веб‑приложения и использовать для этого одну общую базу исходного кода.\nНабор инструментов Flutter работает быстро за счет эффективного использования аппаратных ресурсов смартфонов или компьютеров, поддержки видеокарт с аппаратным ускорением и машинного кода. Он дает специалистам работать максимально продуктивно с помощью Hot Reload, которое позволяет сразу же увидеть изменения кода в приложении. Кроссплатформенность Flutter помогает выполнять развертывание на самых разных платформах с сохранением исходного кода и гарантированной совместимостью и работоспособностью. Этот набор инструментов полностью создан на базе открытого исходного кода, не нужно приобретать лицензии или платить за инструменты для разработки.\nFlutter доказал свою популярность — на сегодняшний день разработчики создали с его использованием более 700 000 приложений: от \nнебольших, но вполне перспективных приложений начинающих компаний\n до \nпрограммных продуктов корпоративного уровня, которые созданы для удовлетворения важных потребностей крупных корпораций\n. В Google тоже считают Flutter полезным рабочим инструментом. В настоящий момент добавляется его поддержка в другие инструменты для разработчиков в\n \nGoogle Ads\n,\n \nGoogle Maps\n,\n \nGoogle Pay\n и\n \nFirebase\n.\nС помощью Flutter мы сократили объем программного кода на 66% и сохранили ту же функциональность... это означает меньше ошибок для разных платформ и меньше технических недоработок в будущем.\nКенечи Уфонду (Kenechi Ufondu), инженер-программист, Google Classroom.\nПервая версия Flutter предлагала набор инструментов для создания мобильных приложений на базе Android и iOS, а в третью версию уже включили поддержку платформ Windows, macOS, Linux, веб‑приложений и встроенных платформ для использования с Flutter. В январе 2023 \nпредставили последнюю стабильную версию Flutter 3.7\n, в которую добавлен целый набор новых функций: механизм визуализации для iOS, улучшенную поддержку Material 3 и виджетов в стиле iOS, обновленные решения для локализации, более эффективную обработку данных в фоновом режиме и обновления инструментов для разработчиков.\nЧто Flutter ждет в будущем? В этой статье вы узнаете о тех перспективных направлениях разработки, в которые команда Flutter вкладывает средства: еще более высокая скорость обработки графики, полная интеграция мобильных и веб‑приложений, ранняя поддержка новых и перспективных архитектур и оперативное реагирование на отзывы разработчиков. Еще вы узнаете о тех рабочих проектах, которые запланированы на ближайшие несколько месяцев.\nОговорка: функции находятся в стадии разработки и могут быть изменены. Их демонстрируют с одной единственной целью: предоставить возможность разработчикам внести свой вклад в их оптимизацию.\nЕще более высокая скорость обработки графики\nИсторически сложилось, что кроссплатформенные фреймворки обеспечивали недостаточно высокое качество графики. Это было связано со сложностями при создании слоя абстракции. В Flutter используется принципиально иной подход: в наборе инструментов предусмотрен собственный слой визуализации, который обеспечивает аппаратное ускорение обработки графики, а изображение сохраняет высокое качество на любом устройстве. В планах инвестировать в обеспечение\n более высокой скорости обработки графики\n, что дополнительно расширит уже существующие преимущества Flutter в этом направлении.\nНа мероприятии Flutter Forward рассказали о новых успехах в области разработки\n \nImpeller\n, механизма визуализации Flutter следующего поколения. Технология Impeller оптимизирована для использования во Flutter. Это обеспечивает дополнительную гибкость работы, широкие возможности для управления графическим конвейером и целый ряд других преимуществ. Impeller дает более стабильную и предсказуемую скорость работы за счет использования предварительно скомпилированных шейдеров. Механизм визуализации использует преимущества примитивов Metal и Vulkan, современных низкоуровневых API платформы iOS и Android. При этом он эффективно использует многозадачный режим работы, распределяет по потокам рабочие нагрузки, которые связаны с обработкой одиночных кадров.\nОдно из преимуществ разработки с нуля заключается в том, что архитектура может поддерживать совершенно новые сценарии использования. Недавно была реализована \nподдержка пользовательских шейдеров\n, и уже сейчас можно посмотреть\n \nпримеры\n полноценной интеграции с иерархией виджетов Flutter. Однако работа в этом направлении не ограничивается только мобильными устройствами: уже реализована ранняя поддержка пользовательских шейдеров для веб‑приложений. Причем один и тот же код теперь отвечает за работу функций с аппаратным ускорением в iOS, Android и в браузере.\nСейчас начинается подготовительная работа над реализацией поддержки \n3D‑изображений в Flutter\n. На Flutter Forward было показано, как можно импортировать модели, созданные в\n \nBlender\n, и даже использовать функцию горячего подключения для выполнения итераций в Blender в режиме реального времени и просмотра результатов непосредственном в работающем приложении. Это только начало. Добавление 3D‑изображений и пользовательских шейдеров позволяет поднять качество графики на новый уровень.\nПолная интеграция мобильных и веб-приложений\nПусть и можно написать полноценное приложение, используя только Flutter и Dart, разработка программных продуктов в большинстве случаев предусматривает использование также и внешнего программного кода. Если говорить о веб‑приложениях, Flutter может использоваться как встроенный компонент в рамках более крупного приложения. В мобильных приложениях может потребоваться вызов системных API или стороннего кода, который написан на другом языке. Поэтому второе направление инвестиций — это обеспечение \nполной интеграции мобильных и веб‑приложений\n.\nДля веб‑приложений разработана новая функция, которую назвали «\nвстраивание элементов\n» (Element Embedding). Она позволяет добавлять элементы Flutter в любое стандартное веб‑приложение <div>. При использовании этой функции Flutter просто становится компонентом веб‑приложения, который интегрируется в программный интерфейс DOM и позволяет использовать CSS для выбора стиля родительского объекта Flutter.\nПакета \nJS\n был переработан, чтобы обеспечить \nоперационную совместимость программного кода JavaScript и Dart\n. С помощью пакета JS можно добавлять к любой функции кода Dart атрибут @JSExport, а затем вызвать его из кода JavaScript.\nСовместное использование этих двух новых функций создает новые перспективные сценарии использования Flutter для создания веб‑приложений. В\n \nролике\n можно посмотреть на простое приложение Flutter, которое встроено в веб‑страницу на основе HTML. Применяется анимированный эффект вращения с использованием CSS. Даже при вращении элементы Flutter остаются интерактивными. В этом примере также показано, как можно использовать HTML‑кнопку и обработчик событий JavaScript для внесения изменений в состояние Flutter, и наоборот.\nС помощью функции Element Embedding можно встроить Flutter в элемент <div> и использовать CSS для настройки стиля.\nЧто касается Android и iOS, Flutter уже давно поддерживает интеграцию с системными API с помощью platform channels. Раньше разработчик приложения нужно было владеть несколькими языками программирования. Кроме того, требовалось наличие достаточного большого объема шаблонного кода.\nСейчас в работе создание \nнового подхода к обеспечению операционной совместимости систем\n, который позволит вызывать библиотеки напрямую. Если говорить об iOS, то в процессе работа над функциональной совместимостью FFI для C, добавляется поддержка библиотек Swift и Objective-C. На Android используется JNI для объединения библиотек Jetpack, написанных на Kotlin. Dart с помощью новой команды автоматически создает привязки для обеспечения операционной совместимости нескольких языков программирования и соответствующего преобразования классов данных. Когда эта работа будет завершена, разработчики Flutter смогут вызывать новые библиотеки Jetpack или iOS без необходимости использования плагина или изучения другого синтаксиса API. Это также значительно облегчит работу разработчиков плагинов. Для получения дополнительной информации можно\n \nознакомиться с примером разработки\n.\nРанняя поддержка новых и перспективных архитектур\nFlutter можно использовать для широкого спектра устройств и форм‑факторов. Для того, чтобы разработчики могли поддерживать современные функциональные возможности, активно инвестируются средства в третье направление — \nраннюю поддержку новых и развивающихся архитектур\n.\nWebAssembly\n достиг высокого уровня технологического развития в качестве платформонезависимого формата двоичных инструкций и\n \nпостепенно получает все более широкую поддержку в современных браузерах\n. Он позволяет использовать веб‑платформу с другими языками программирования, не ограничиваясь только JavaScript. В совместной работе с командой специалистов Chrome и другими партнерами по проекту WebAssembly команда Flutter добавила\n \nвстроенные сборщики мусора\n. Это новое расширение WebAssembly поддерживается в последних тестовых сборках Chrome с помощью набора экспериментальных функций Chrome Flags. \nДругой перспективной платформенной архитектурой является\n \nRISC‑V\n — архитектура набора команд (ISA) на базе открытого исходного кода, которая нужна для различных сценариев использования. Команда Android недавно рассказала о\n \nработе по добавлению в программные продукты поддержки RISC‑V\n. Теперь и \nDart работает с RISC‑V\n. На конференции Flutter Forward представили\n \nClockworkPi DevTerm Kit R-01\n — портативный терминал собственной разработки. Он работает под управлением Linux. Поддержка RISC‑V будет особенно актуальной для встраиваемых систем, т.к. Flutter может предоставить мощный набор инструментов разработки пользовательского интерфейса для различных сценариев использования.\nОперативное реагирование на отзывы разработчиков\nСамым важным вопросом является высокая продуктивность работы разработчиков. Заключительное, четвертое направление инвестиций в будущее — это \nбыстрая реакция на отзывы разработчиков\n, как при работе с Flutter, так и с Dart.\nОфициально представлен Dart 3\n, в котором реализована функция обеспечения Null Safety. В этой версии также были удалены функции, которые сегодня потеряли свою актуальность и мало используются. Уже идет подготовка и к выпуску альфа‑сборок Dart 3, а также соответствующих версий сборок Flutter, чтобы разработчики могли начать тестирование пакетов и приложений. Для получения дополнительной информации о Dart 3 можно прочитать \nстатью в блоге Dart\n.\nИнвестируются средства в создание новых функциональных возможностей для Flutter‑разработчиков. После успешного выпуска набора инструментов для разработки казуальных игр, который\n \nанонсировали на конференции Google I/O\n в прошлом году, сейчас представляется\n \nпервая версия набора инструментов для разработки приложений для публикации новостей\n.\n Она поможет издателям и другим поставщикам новостного контента отказаться от необходимости создания собственного приложения с нуля и быстрее выйти на рынок. Набор инструментов содержит все необходимое для создания приложений для публикации информационных статей: навигацию и поиск, регистрацию пользователей, рекламу, уведомления, профили пользователей и подписки. В нем используются результаты, которые получены в ходе исследования Google News Initiative.\nДвигаемся вперед вместе\nПродолжает расширяться экосистема Flutter — \n появился \nFlutterFlow\n, который представляет собой систему написания минимума кода для создания нативных мобильных приложений. И проект\n \nWidgetbook\n, который предоставляет гибкие инструменты для совместной работы дизайнеров и разработчиков для проектирования пользовательского интерфейса.\nНа этом изображении представлены новые направление развития:\nЕсли интересно изучать Flutter, подписывайтесь на наш с коллегами телеграм-канал \nFlutter.Много.\n \n ",
    "tags": [
        "flutter",
        "flutter app",
        "flutter mobile development",
        "flutter app development",
        "dart",
        "мобильная разработка",
        "mobile development",
        "mobile",
        "кроссплатформенность",
        "кроссплатформенная разработка"
    ]
}
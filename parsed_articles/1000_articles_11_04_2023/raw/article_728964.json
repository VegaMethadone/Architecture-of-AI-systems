{
    "article_id": "728964",
    "article_name": "MLS (Messaging Layer Security) — единый протокол шифрования для всех приложений",
    "content": "Инженерный совет Интернета IETF официально \nпринял\n стандарт \nMessaging Layer Security\n (MLS) — новый протокол сквозного шифрования сообщений поверх TLS. Это дополнительный уровень криптографии, который может покрыть все существующие приложения и обеспечить совместимость между ними. То есть он в идеальном случае станет всеобщим протоколом для всех мессенджеров.\n\r\n\n\r\nMLS обеспечивает сквозное шифрование между разными приложениями и устройствами таким образом, что облачные службы и инфраструктура, через которую проходит трафик, не имеют возможности расшифровать эти сообщения.\n\r\n\n\r\nДо появления MLS не существовало открытой, совместимой спецификации для этого дополнительного уровня криптографии. Новый протокол заполняет этот пробел. Он предоставляет систему, которая полностью специфицирована, формально проверена и проста в использовании для разработчиков.\n\r\n\n\r\nИдея создания такого всеобщего протокола шифрования обсуждалась в 2016 году на неофициальной встрече IETF 96 в Берлине с участием представителей Wire, Mozilla и Cisco. Забегая вперёд, что в 2023 году мессенджер Wire стал одним из первых, кто официально \nреализовал поддержку MLS\n.\n\r\n\n\r\nВ 2017 году вышла научная статья \nOn Ends-to-Ends Encryption: Asynchronous Group Messaging with Strong Security Guarantees\n, в которой были сформулированы основные идеи для создания более эффективных схем шифрования и управления ключами, чем алгоритм двойного храповика:\n\r\n\n\r\n\n\r\n\nСравнение эффективности алгоритма двойного храповика (DH ratcheting) и новой схемы управления ключами, предложенной в научной работе\n\r\n\n\r\nПро \nалгоритм двойного храповика\n на Хабре уже неоднократно рассказывали. Это самовосстанавливающийся алгоритм для обновления и обслуживания коротких сеансов жизни ключей, которые постоянно обновляются у каждого пользователя. Соответственно, ими нужно постоянно заново обмениваться в реальном времени. Схема с генерацией ключей по этому алгоритму надёжная и проверенная, она используется в нескольких криптографических мессенджерах со сквозным шифрованием, в том числе в Signal.\n\r\n\n\r\nMLS опирается на современное поколение протоколов безопасности — и берёт лучшее от них. В частности, механизм генерации эфемерных ключей взят у упомянутого Double Ratchet (алгоритм двойного храповика). Благодаря этому MLS допускает асинхронную работу и предоставляет расширенные функции безопасности, такие как защита после компрометации.\n\r\n\n\r\n\n\r\n\nПринцип генерации ключей по алгоритму двойного храповика\n\r\n\n\r\nКак и \nTLS 1.3\n, MLS обеспечивает надёжную аутентификацию, а его характеристики безопасности были подтверждены формальным анализом (\nнезависимая оценка\n протокола).\n\r\n\n\r\n\n\r\n\n\r\nВ целом, новый протокол сочетает лучшие черты предшественников и добавляет эффективное масштабирование для групповых разговоров из тысяч устройств без ущерба для безопасности.\n\r\n\n\r\nIETF \nсообщает\n, что черновые версии MLS были испытаны в продакшне для шифрования разговоров в режиме реальном времени в коммуникационных продуктах \nWebex\n и \nRingCentral\n. Эти испытания подтвердили способность MLS хорошо работать в реальных сценариях в крупном масштабе с тысячами и миллионами пользователей.\n\r\n\n\r\n\n\r\n\nКомпоненты тестовой установки MLS, \nисточник\n\r\n\n\r\nДругие приложения, такие как \nWickr\n и \nMatrix\n, планируют перейти на MLS в ближайшее время, а рабочая группа IETF MIMI выбрала MLS в качестве стандарта сквозного шифрования в своей системе для совместимого обмена сообщениями.\n\r\n\n\r\n\n\r\n\nШифрование MLS. Веб-клиент с текущим видеозвонком и сообщением в чате, \nисточник\n\r\n\n\r\n\nТребования к архитектуре MLS\n\r\nКроме \nспецификаций протокола\n, IETF также опубликовал \nтребования к архитектуре MLS\n, то есть описание безопасной инфраструктуры группового обмена сообщениями.\n\r\n\n\r\n\n\r\n\n\r\nЭто руководство по созданию инфраструктуры и описание некоторых компромиссов между безопасностью и конфиденциальностью, которые приходится учитывать в многочисленных механизмах безопасности MLS (например, частота ротации открытого ключа шифрования).\n\r\n\n\r\nДокумент также содержит рекомендации для частей инфраструктуры, которые не стандартизированы в протоколе MLS и оставлены на усмотрение приложений и архитекторов инфраструктуры.\n\r\n\n\r\nХотя рекомендации этого документа не являются обязательными для выполнения на уровне протокола, они влияют на общие гарантии безопасности приложений для обмена сообщениями. Это особенно важно для приложений, где есть реальная угроза атак с возможной компрометацией клиентского модуля, службы доставки или аутентификации.\n\r\n\n\r\n\n\r\nДля MLS это только начало большого пути. На сегодняшний день создано несколько реализаций MLS, в том числе две реализации с открытым исходным кодом:\n\r\n\n\r\n\n\r\n\nOpenMLS\n, язык: Rust, лицензия: MIT\n\r\n\n\r\n\nMLS++\n, язык: C++, лицензия: BSD-2\n\r\n\n\r\nЧем больше реализаций, тем шире будет распространение MLS в большем количестве приложений и сервисов. Аналогичным образом, большее количество внедрений даст разработчикам ценные уроки по улучшению будущих версий протокола и библиотек. И хотя MLS является важной частью истории сквозной безопасности, ещё предстоит написать другие важные части. Например, создать систему надёжной идентификации, способную интегрироваться с системой аутентификации MLS и системами управления секретами, считает IETF.\n\r\n\n\r\n\n\r\n\n \n ",
    "tags": [
        "Messaging Layer Security",
        "MLS",
        "Double Ratchet",
        "алгоритм двойного храповика",
        "TLS 1.3",
        "OpenMLS",
        "MLS++"
    ]
}
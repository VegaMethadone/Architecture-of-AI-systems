{
    "article_id": "728354",
    "article_name": "Разбор машин с площадки Hack The Box: часть 1.1 (Starting Point)",
    "content": "Предисловие (дисклеймер)\nВсем доброго времени суток! Этот цикл статей берет свое начало в силу моей заинтересованности данной сферой, а также в силу развития как мягких, так и сложных навыков. Мы будем разбирать уязвимые машины на HTB как для повышения своей компетенции, так и просто в целях самообразования и развития общей эрудиции. В этих разборах поначалу я буду расписывать все максимально подробно для новичков: почему используем именно эту утилиту, флаги утилиты, какие еще вектора атак имели место и тому подобное. После прохождения блока Starting Point я буду думать, что у читателя уже заложился некоторый фундамент взлома машинок, и статьи будут становиться лаконичнее.\nПод новичками я понимаю людей, которые пришли в данную сферу не с около нулевым багажом знаний, а с некоторыми базовыми навыками такими как: основы сетей, Linux, OWASP TOP 10 и другие. Ведь нам необходимо не просто научиться решать данные машины по некоторой методологии, а с умом и пониманием оценивать те вектора атак, которые заложены в них для дальнейшего предотвращения подобного рода атак на реальной работе.\nAttack is the best form of defence  \nВозможно, не стоило начинать с HTB, поскольку она считается довольно сложной для начинающих, и можно было начать с более легких площадок по типу THM, но больно мне приглянулась данная платформа в силу разнообразия задач и удобства, и я постараюсь в этом цикле рассказать все максимально доступно.\nПриветствуется конструктивная критика как от чайников, так и от самоваров в этой сфере. Также прошу сильно не судить, поскольку сам являюсь новичком в этом ремесле.\nПлан работы в этом цикле следующий:\nStarting Point\nMachines (easy)\nMachines (medium)\nЗамечание:\n в данном цикле будут рассматриваться исключительно машины на базе Unix.\nПосле вступительных слов, думаю, можно переходить к непосредственному разбору машины.\nНастоящий дисклеймер\nВсе техники и инструменты из этой статьи используются исключительно в образовательных целях и не могут применяться на реальной инфраструктуре без соответствующего согласования.\nРазбор машины \"Meow\"\nМашина \"Meow\" и теги к ней\nПросмотрев теги, можно сделать вывод, что в этой машине заложена уязвимость \nнеправильной конфигурации\n в протоколе \nTelnet\n.\nДля дальнейшей работы с машиной нам необходимо подключиться к ней по VPN. Это можно сделать с помощью \nopenvpn\n: скачиваете конфигурационный файл с HTB на свою виртуальную машину (Kali Linux), в терминале запускаем утилиту openvpn от sudo, в аргументе которой указываем скачанный файл. В случае успешного подключения в конце логов будет строка \n«Initialization Sequence Completed»\n. Если подключиться не получается, проверьте, что в вашей ВМ в настройках сети стоит \nсетевой мост\n.\nПосле подключения к VPN нам будет предложено запустить атакуемую машину:\nПосле запуска машины будет предложен её IP-адрес, который потребуется для работы с ней.\nПереходим к первому вопросу:\nМетодология обучения в Starting Point представляет собой пошаговое решение предложенной машины, то есть на каждом шаге будет задаваться вопрос, и вам необходимо найти/дать на него ответ. Все эти таски составлены таким образом, чтобы привести вас к решению машины. В самом конце этих вопросов обычно необходимо предоставить флаг пользователя и рута. В этот момент вы должны резюмировать всю полученную ранее информацию из этих вопросов и составить логическую цепочку, приводящую к флагам.\nВопрос 1\nВ первом вопросе нас спрашивают про аббревиатуру «VM». Я думаю, для всех это очевидно, если кому-то не очевидно, взгляните на шаблон ответа. Имеется ввиду \nVirtual Machine\n. \nВводим ответ и переходим к следующему заданию:\nВопрос 2\nВо втором вопросе нас спрашивают, какой инструмент мы используем для администрирования OC через командную строку. Если вы работали с Linux, то знаете, что инструмент командной строки там называется \n«Terminal»\n.\nСледующий таск:\nВопрос 3\nСпрашивается об инструменте, с помощью которого мы подключились к HTB labs. Чуть ранее я уже проспойлерил, так что ответ: \n«openvpn».\nПереходим к следующему заданию:\nВопрос 4\nВ этом задании спрашивается об аббревиатуре туннельного интерфейса. Для решения просмотрим сетевую конфигурацию нашей системы с помощью утилиты \nip\n :\nЧастичный вывод команды \nip a\nОтсюда видно название сетевого интерфейса, который используется для подключения к VPN: \ntun0\n.\nПереходим на следующий вопрос:\nВопрос 5\nВ этом таске нас спрашивают об инструменте, который используется для проверки соединения с машиной с помощью протокола ICMP. Я беру за аксиому, что вы знакомы с основами сетей, так что данный вопрос не должен вызывать трудностей. Очевидно, что речь идет об общеизвестной утилите \nping\n, которая используется для отправки \necho request\n и приёма \necho reply\n.\nДаем ответ и двигаемся дальше:\nВопрос 6\nЗдесь спрашивается о самом распространенном инструменте для сканирования открытых портов на целевой машине. Обратимся за помощью к Google:\nGoogle выдал нам инструмент под названием \nNmap\n. Действительно, данный инструмент возглавляет список всех сетевых сканеров и является наиболее популярным среди них. Эта утилита может стать очень серьезным инструментом в руках опытного специалиста.\nДаем ответ и едем дальше:\nВопрос 7\nТеоретические вопросы кончились — переходим к практическим. Здесь нас спрашивают о названии сервиса, который поднят на 23 порту целевой машины. Для решения воспользуемся инструментом, о котором велась речь в предыдущем вопросе:\nДемонстрация работы утилиты \nnmap\nПояснение команды:\nаргументом утилиты выступает IP-адрес \n10.129.61.42\n (в моем случае)\nФлаг \n-sC\n сигнализирует инструменту, чтобы тот запускал \nнабор скриптов по умолчанию\n для сканируемых портов\nФлаг \n-sV\n указывает nmap, чтобы он определял версию ПО, используемого на том или ином порте\nЖми, если интересно узнать о наборе скриптов по умолчанию\nСценарии по умолчанию представляют собой набор некоторых скриптов, которые используются nmap во время сканирования каждого порта. Они содержат в себе информационные запросы, проверки на уязвимости, возможности определения версий приложений и тому подобные вещи. К тому же данный флаг позволяет нам задавать набор скриптов автоматически, что может ускорить нашу проверку портов и минимизировать необходимость задания скриптов вручную.\nК примеру, если на 22 порту был найден сервис SSH, то с этим флагом nmap запустит скрипт проверки на наличие какой-либо уязвимости в протоколе удаленного доступа. Если на 80 порту работает веб-сервер, то тогда утилита автоматически запустит скрипт, выявляющий уязвимости веб-серверов.\nЖми, если интересно узнать о принципе определения версии ПО\nNmap с флагом \n-sV\n определяет версии программного обеспечения на различных портах путем отправки \nзондов\n (probes) к ним и анализа полученных ответов. Термин probes закрепил за собой nmap, вы можете считать, что это отпечатки пальцев (fingerprinting), по которым как раз и составляется различная информация о том или ином порте.\nСуществует различное количество зондов, которые могут быть отправлены nmap к тому или иному порту. Я приведу в пример два популярных зонда:\nSYN probe\n: отправляет \nSYN-пакет\n на целевой порт с целью получения ответа, с помощью которого можно определить состояние порта (открыт, закрыт, отфильтрован)\nACK probe\n: данный зонд отправляется только с установленным флагом ACK в TCP-заголовке. Этот зонд служит для проверки на фильтрацию порта. Принцип здесь такой: если пакет ACK не заблокирован, то в этом случае nmap получит RST-пакет, указывающего на открытость или закрытость порта. Также это помогает собрать информацию о службах, работающих на портах, то есть флаг \n-sV\n использует этот зонд как раз для определения ПО.\nЕсть и другие интересные зонды, о которых хотелось бы рассказать, но статья не об этом, поэтому возвращаемся к разбору.\nИз вывода nmap можно заключить, что на 23 порту запущена служба \n«telnet».\nВводим ответ и переходим к следующему вопросу:\nВопрос 8\nДальше нас спрашивают под каким логином можно войти по telnet в систему без пароля. Здесь нужно вспомнить о том, какая уязвимость была заложена в данную машину — \nнеправильна конфигурация\n. Она как раз и является слабым звеном в данной тачке. Какие в таком случае могут быть вектора атак? В вопросе кроется подсказка: можно войти с помощью пустого пароля. На лицо признак мисконфига со стороны людей, отвечающих за безопасность машины.\nТаким образом, можно попытаться перебрать различные популярные логины по типу: \nadmin\n, \nadministrator\n, \nroot\n и так далее:\nУспешная попытка входа в систему по протоколу telnet\nКоманда telnet принимает два аргумента:\nIP-адрес хоста\nПорт, на котором запущена служба (если не указывать, то по умолчанию считается 23 порт)\nКак видно из скриншота выше, первые две учетные записи не подошли, а УЗ с логином \nroot\n оказалась без пароля.\nОтвечаем на вопрос и переходим к заключительному таску:\nФинальный вопрос\nПредлагается найти флаг рута. Это не вызовет проблем, поскольку мы уже авторизованы под записью суперпользователя. Задача сводится к обычному поиску:\nПолучение флага\nОказалось все проще: флаг лежал в домашней директории. На этом данную машину можно считать пройденной — полный доступ к системе был успешно получен.\nЗаключение\nНа этом первая статья в этом цикле подходит к концу. Сегодня мы рассмотрели простейшую машинку, уязвимость которой заключалась в неправильной конфигурации протокола telnet. \nЯ крайне надеюсь, что данная статья была кому-либо полезна, и кто-нибудь открыл для себя что-то новое. Пишите свои пожелания, критику и просто оставляйте фидбэк от прошедшего занятия — мне будет приятно видеть обратную связь. \nВ следующей статье будет разбор машины «Fawn», где поработаем с протоколом FTP.\nДо скорой встречи!\n \n ",
    "tags": [
        "Hack The Box",
        "HTB",
        "Pentest",
        "Разбор уязвимых машин",
        "Для новичков",
        "Telnet",
        "Неправильная конфигурация",
        "OWASP Top 10",
        "Meow",
        "nmap"
    ]
}
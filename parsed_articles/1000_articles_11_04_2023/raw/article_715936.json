{
    "article_id": "715936",
    "article_name": "Обзор технологии Ultra-Wideband на основе трансивера DW1000 (переходник с SPI на UWB)",
    "content": "В этом тексте я написал о своем опыте работы с UWB. Этот текст поможет понять с какой стороны подходить к UWB трансиверам.\nПредисловие\nUltra-Wideband UWB это \nмаломощная\n (<1mW) беспроводная радио технология передачи данных со скоростью до ...6 Mbit/s на расстояния до 200м. Эта технология также позволяет измерять расстояние между трансиверами с точностью до +-10см. UWB работает на частотах 3.1Ghz 10.6Ghz. В технологии UWB очень широкая ширина канала 500MHz...1,3GHz. Это больше чем у LoRa в минимум в 1000 раз.\nUWB использует так называемое \npulse radio\n. Трансивер посылаются пульсы (вейвлеты) порядка 1 миллиарда раз в секунду. UWB передает данные в специальные временные интервалы.\nМодуляция называется pulse-position или time modulation. В качестве аналогии можно сравнить с летучими мышами.\nПрактическая часть\nСуществует модуль DWM1000 от компании Decawave (Qorvo). Это беспроводной полудуплексный трансивер, работающий на частотах 3.5 GHz to 6.5 GHz, с управляемой мощностью излучения. Он способен передавать данные с битовой скоростью до 6,8Mbit/s  \nЭто блок схема модуля\nПопробую разобраться на что способен этот чип. \nЧто надо из спецификаций?\n \n#\nDoc name\npages\nчто там?\nВерсия\n1\nProduct Overview\n33\nХарактеристики модуля, блок схема SoC, распиновка\n2\nPRODUCT INFORMATION: DWM1000\n2\nФлайер на модуль DWM1000\n5\nDW1000 USER MANUAL\n249\nДетализация регистров\n11\nSOURCES OF ERROR IN DW1000 BASED TWO-WAY RANGING (TWR) SCHEMES\n22\nAPS011 APPLICATION NOTE\n1.1\n9\nDEBUGGING DW1000 BASED PRODUCTS AND SYSTEMS\n23\nAPS022 APPLICATION NOTE\n1.3\n10\nDW1000 DEVICE DRIVER APPLICATION PROGRAMMING INTERFACE (API) GUIDE\n101\nUSING API FUNCTIONS TO CONFIGURE AND PROGRAM THE DW1000 UWB TRANSCEIVER\n2.7\n7\nAPS013 APPLICATION NOTE\n15\nThe implementation of two-way ranging with the DW1000\n2.3\n8\nANTENNA DELAY CALIBRATION OF DW1000-BASED PRODUCTS AND SYSTEMS\n15\nAPS014 APPLICATION NOTE\n1.2\n3\nPRODUCT BRIEF: DW1000\n2\nФлайер на чип DW1000. Название пинов.\n4\nProduct Overview\n53\nРаспиновка DW1000\n6\nDW1000 Errata\n12\nСписок 5ти выявленных ошибок в дизайне чипа \nв первом приближении внутри DW1000 можно обнаружить PLL, модуль приема, модуль передатчика, цифровую логику, SPI slave и преобразователь питания.\nБолее подробная схема чипа DW1000 такая. Тут уже заметно OTP, помехоустойчивое кодирование, управление мощностью, выявление прихода пакета, внутренний таймер. Чип весьма и весьма проработанный.\nВот соответствие модуля его пинам. \nDWM1000\nА это детализация распиновки модуля \nDWM1000\n. Шаг между пинами 1,4мм.\nВнутри DWM1000 заложен ASIC с названием DW1000. Вот список его пинов.\nhttps://docs.google.com/spreadsheets/d/1ei8rA8kbT_--4zf_2shUHI-hzM8QjJMSJs_8kKTTMak/edit#gid=0\nЯвного соответствия 48ми пинов чипа DW1000 на 24 пина модуля DW\nM\n1000 нет. Как известно из комбинаторики упорядоченно выбрать провода 24 из 48 проводов без повторений можно 2.000797e+37 способами. Визуально тоже не ясно, так как чип скрыт под саркофагом.\nЧтобы подключить модуль DWM1000 пришлось изготовить PCB плату-переходник\nСхема подключения.\nСхема подключения показана тут.\nФизически пришлось собрать вот такой прототип\nУправление модулем DWM1000 по интерфейсу SPI\nКомпания разработчик QORVO предоставляет свой драйвер для чипа DW1000. Драйвер можно скачать вот тут \nhttps://www.qorvo.com/products/p/DW1000#documents\n. Достаточно скачать архив dw1000_api_rev2p14.zip распаковать его. В папке dw1000_api_rev2p14_stsw\\Src будет лежать С-код драйвера и примеры.\nВ оригинальном драйвере 101 функция. Их\n перечень можно посмотреть тут\n. Есть и документация на драйвер в доке DW1000 DEVICE DRIVER APPLICATION PROGRAMMING INTERFACE (API) GUIDE. Там указана какая функция за что отвечает.\nЧип полностью управляется по интерфейсу SPI. Частота тактирования до 20 MHz. Данные передаются старшим битом вперед. DWM1000 выступает ведомым устройством. Параметры SPI соединения задаются выбором напряжения на пинах GPIO5, GPIO6. По умолчанию они подтянуты к земле. Физически SPI это полный дуплекс. Однако с устройством обмен тем не менее полудуплексный. DWM1000  воспринимает данные, когда на проводе CS 0V. Каждый отрицательный фронт котируется как начало нового кадра. Поэтому просто припаять CS на землю нельзя. Так модуль просто не поймет, где начинается пакет. Аппаратный CS тоже не подойдет. Придется делать программный ChipSelect. \nПри чтении модуль DWM1000 отправляет данные младшим байтом вперед. Поэтому они четко ложатся на структуры в Little endian процессорах. Вот значения регистров DW1000  после корректной инициализации оригинальным драйвером.\n+-----+--------------+------+--------+----+----------+\n| num |     name     | file | offset |len |   val    |\n+-----+--------------+------+--------+----+----------+\n|   0 |       DEV_ID | 0x00 | 0x0000 |  4 | 3001CADE | 1101_1110_1100_1010_0000_0001_0011_0000\n|   1 |          EUI | 0x01 | 0x0000 |  8 | 00000000FFFFFFFF | ????\n|   2 |       PANADR | 0x03 | 0x0000 |  4 | FFFFFFFF | 1111_1111_1111_1111_1111_1111_1111_1111\n|   3 |      SYS_CFG | 0x04 | 0x0000 |  4 | 00124000 | 0000_0000_0100_0000_0001_0010_0000_0000\n|   4 |     SYS_TIME | 0x06 | 0x0000 |  5 | 00D6C2CE00 | ????\n|   5 |     TX_FCTRL | 0x08 | 0x0000 |  5 | 09800A0000 | ????\n|   6 |      DX_TIME | 0x0a | 0x0000 |  5 | 0000000000 | ????\n|   7 |      RX_FWTO | 0x0c | 0x0000 |  2 |     0000 | 0000_0000_0000_0000\n|   8 |     SYS_CTRL | 0x0d | 0x0000 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|   9 |     SYS_MASK | 0x0e | 0x0000 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  10 |   SYS_STATUS | 0x0f | 0x0000 |  5 | 0200800000 | ????\n|  11 |     RX_FINFO | 0x10 | 0x0000 |  4 | 0980AA10 | 0001_0000_1010_1010_1000_0000_0000_1001\n|  12 |     RX_FQUAL | 0x12 | 0x0000 |  8 | 5C001A451031CF2D | ????\n|  13 |     RX_TTCKI | 0x13 | 0x0000 |  4 | 0000FC01 | 0000_0001_1111_1100_0000_0000_0000_0000\n|  14 |     RX_TTCKO | 0x14 | 0x0000 |  5 | EDFF07391F | ????\n|  15 |      RX_TIME | 0x15 | 0x0000 | 14 | 004566DB052CBB3541008066DB05 | ????\n|  16 |      TX_TIME | 0x17 | 0x0000 | 10 | 34A6D7B4590066D7B459 | ????\n|  17 |      TX_ANTD | 0x18 | 0x0000 |  2 |     3440 | 0100_0000_0011_0100\n|  18 |    SYS_STATE | 0x19 | 0x0000 |  4 | 00050540 | 0100_0000_0000_0101_0000_0101_0000_0000\n|  19 |   ACK_RESP_T | 0x1a | 0x0000 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  20 |     RX_SNIFF | 0x1d | 0x0000 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  21 |     TX_POWER | 0x1e | 0x0000 |  4 | 2202080E | 0000_1110_0000_1000_0000_0010_0010_0010\n|  22 |    CHAN_CTRL | 0x1f | 0x0000 |  4 | 22007A4A | 0100_1010_0111_1010_0000_0000_0010_0010\n|  23 |    AGC_CTRL1 | 0x23 | 0x0002 |  2 |     01DE | 1101_1110_0000_0001\n|  24 |    AGC_TUNE1 | 0x23 | 0x0004 |  2 |     9B88 | 1000_1000_1001_1011\n|  25 |    AGC_TUNE2 | 0x23 | 0x000c |  4 | 07A90225 | 0010_0101_0000_0010_1010_1001_0000_0111\n|  26 |    AGC_TUNE3 | 0x23 | 0x0012 |  2 |     3500 | 0000_0000_0011_0101\n|  27 |    AGC_STAT1 | 0x23 | 0x001e |  3 |   000000 | 0000_0000_0000_0000_0000_0000\n|  28 |      EC_CTRL | 0x24 | 0x0000 |  4 | 0400ADDE | 1101_1110_1010_1101_0000_0000_0000_0100\n|  29 |      EC_RXTC | 0x24 | 0x0004 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  30 |      EC_GOLP | 0x24 | 0x0008 |  4 | 00DEADDE | 1101_1110_1010_1101_1101_1110_0000_0000\n|  31 |    GPIO_MODE | 0x26 | 0x0000 |  4 | 000000DE | 1101_1110_0000_0000_0000_0000_0000_0000\n|  32 |     GPIO_DIR | 0x26 | 0x0008 |  4 | FF01ADDE | 1101_1110_1010_1101_0000_0001_1111_1111\n|  33 |    GPIO_DOUT | 0x26 | 0x000c |  4 | 000000DE | 1101_1110_0000_0000_0000_0000_0000_0000\n|  34 |    GPIO_IRQE | 0x26 | 0x0010 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  35 |    GPIO_ISEN | 0x26 | 0x0014 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  36 |   GPIO_IMODE | 0x26 | 0x0018 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  37 |    GPIO_IBES | 0x26 | 0x001c |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  38 |    GPIO_ICLR | 0x26 | 0x0020 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  39 |    GPIO_IDBE | 0x26 | 0x0024 |  4 | 0000ADDE | 1101_1110_1010_1101_0000_0000_0000_0000\n|  40 |     GPIO_RAW | 0x26 | 0x0028 |  4 | 000000DE | 1101_1110_0000_0000_0000_0000_0000_0000\n|  41 |   DRX_TUNE0b | 0x27 | 0x0002 |  2 |     1600 | 0000_0000_0001_0110\n|  42 |   DRX_TUNE1a | 0x27 | 0x0004 |  2 |     8D00 | 0000_0000_1000_1101\n|  43 |   DRX_TUNE1b | 0x27 | 0x0006 |  2 |     6400 | 0000_0000_0110_0100\n|  44 |    DRX_TUNE2 | 0x27 | 0x0008 |  4 | 5E013B35 | 0011_0101_0011_1011_0000_0001_0101_1110\n|  45 |   DRX_SFDTOC | 0x27 | 0x0020 |  2 |     4110 | 0001_0000_0100_0001\n|  46 |   DRX_PRETOC | 0x27 | 0x0024 |  2 |     0000 | 0000_0000_0000_0000\n|  47 |   DRX_TUNE4H | 0x27 | 0x0026 |  2 |     2800 | 0000_0000_0010_1000\n|  48 |  DRX_CAR_INT | 0x27 | 0x0028 |  3 |   000000 | 0000_0000_0000_0000_0000_0000\n|  49 | RXPACC_NOSAT | 0x27 | 0x002c |  2 |     0000 | 0000_0000_0000_0000\n|  50 |      RF_CONF | 0x28 | 0x0000 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  51 |   RF_RXCTRLH | 0x28 | 0x000b |  1 |       D8 | 1101_1000\n|  52 |    RF_TXCTRL | 0x28 | 0x000c |  3 |   A05C04 | 0000_0100_0101_1100_1010_0000\n|  53 |    RF_STATUS | 0x28 | 0x002c |  4 | 09DEADDE | 1101_1110_1010_1101_1101_1110_0000_1001\n|  54 |      LDOTUNE | 0x28 | 0x0030 |  5 | 8888888808 | ????\n|  55 |      TC_SARC | 0x2a | 0x0000 |  2 |     0000 | 0000_0000_0000_0000\n|  56 |      TC_SARL | 0x2a | 0x0003 |  3 |   000000 | 0000_0000_0000_0000_0000_0000\n|  57 |      TC_SARW | 0x2a | 0x0006 |  2 |     0000 | 0000_0000_0000_0000\n|  58 |   TC_PG_CTRL | 0x2a | 0x0008 |  1 |       BC | 1011_1100\n|  59 | TC_PG_STATUS | 0x2a | 0x0009 |  2 |     F90B | 0000_1011_1111_1001\n|  60 |   TC_PGDELAY | 0x2a | 0x000b |  1 |       C5 | 1100_0101\n|  61 |    TC_PGTEST | 0x2a | 0x000c |  1 |       00 | 0000_0000\n|  62 |    FS_PLLCFG | 0x2b | 0x0007 |  4 | 08054008 | 0000_1000_0100_0000_0000_0101_0000_1000\n|  63 |   FS_PLLTUNE | 0x2b | 0x000b |  1 |       26 | 0010_0110\n|  64 |     FS_XTALT | 0x2b | 0x000e |  1 |       72 | 0111_0010\n|  65 |     AON_WCFG | 0x2c | 0x0000 |  2 |     2000 | 0000_0000_0010_0000\n|  66 |     AON_CTRL | 0x2c | 0x0002 |  1 |       00 | 0000_0000\n|  67 |     AON_RDAT | 0x2c | 0x0003 |  1 |       00 | 0000_0000\n|  68 |     AON_ADDR | 0x2c | 0x0004 |  1 |       00 | 0000_0000\n|  69 |     AON_CFG0 | 0x2c | 0x0006 |  4 | EE1FFF50 | 0101_0000_1111_1111_0001_1111_1110_1110\n|  70 |     AON_CFG1 | 0x2c | 0x000a |  2 |     0000 | 0000_0000_0000_0000\n|  71 |     OTP_WDAT | 0x2d | 0x0000 |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  72 |     OTP_ADDR | 0x2d | 0x0004 |  2 |     1E00 | 0000_0000_0001_1110\n|  73 |     OTP_CTRL | 0x2d | 0x0006 |  2 |     0000 | 0000_0000_0000_0000\n|  74 |     OTP_STAT | 0x2d | 0x0008 |  2 |     0000 | 0000_0000_0000_0000\n|  75 |     OTP_RDAT | 0x2d | 0x000a |  4 | 12010000 | 0000_0000_0000_0000_0000_0001_0001_0010\n|  76 |    OTP_SRDAT | 0x2d | 0x000e |  4 | 00000000 | 0000_0000_0000_0000_0000_0000_0000_0000\n|  77 |       OTP_SF | 0x2d | 0x0012 |  1 |       00 | 0000_0000\n|  78 |   LDE_THRESH | 0x2e | 0x0000 |  2 |     0000 | 0000_0000_0000_0000\n|  79 |     LDE_CFG1 | 0x2e | 0x0806 |  1 |       00 | 0000_0000\n|  80 |   LDE_PPINDX | 0x2e | 0x1000 |  2 |     0000 | 0000_0000_0000_0000\n|  81 |   LDE_PPAMPL | 0x2e | 0x1002 |  2 |     0000 | 0000_0000_0000_0000\n|  82 |   LDE_RXANTD | 0x2e | 0x1804 |  2 |     0000 | 0000_0000_0000_0000\n|  83 |     LDE_CFG2 | 0x2e | 0x1806 |  2 |     0000 | 0000_0000_0000_0000\n|  84 |     LDE_REPC | 0x2e | 0x2804 |  2 |     0000 | 0000_0000_0000_0000\n|  85 |     EVC_CTRL | 0x2f | 0x0000 |  4 | 00DEADDE | 1101_1110_1010_1101_1101_1110_0000_0000\n|  86 |      EVC_PHE | 0x2f | 0x0004 |  2 |     0000 | 0000_0000_0000_0000\n|  87 |      EVC_RSE | 0x2f | 0x0006 |  2 |     0000 | 0000_0000_0000_0000\n|  88 |      EVC_FCG | 0x2f | 0x0008 |  2 |     0000 | 0000_0000_0000_0000\n|  89 |      EVC_FCE | 0x2f | 0x000a |  2 |     0000 | 0000_0000_0000_0000\n|  90 |      EVC_FFR | 0x2f | 0x000c |  2 |     0000 | 0000_0000_0000_0000\n|  91 |      EVC_OVR | 0x2f | 0x000e |  2 |     0000 | 0000_0000_0000_0000\n|  92 |      EVC_STO | 0x2f | 0x0010 |  2 |     0000 | 0000_0000_0000_0000\n|  93 |      EVC_PTO | 0x2f | 0x0012 |  2 |     0000 | 0000_0000_0000_0000\n|  94 |     EVC_FWTO | 0x2f | 0x0014 |  2 |     0000 | 0000_0000_0000_0000\n|  95 |     EVC_TXFS | 0x2f | 0x0016 |  2 |     0000 | 0000_0000_0000_0000\n|  96 |      EVC_HPW | 0x2f | 0x0018 |  2 |     0000 | 0000_0000_0000_0000\n|  97 |      EVC_TPW | 0x2f | 0x001a |  2 |     0000 | 0000_0000_0000_0000\n|  98 |     DIAG_TMC | 0x2f | 0x0024 |  2 |     0000 | 0000_0000_0000_0000\n|  99 |   PMSC_CTRL0 | 0x36 | 0x0000 |  4 | 000230F0 | 1111_0000_0011_0000_0000_0010_0000_0000\n| 100 |   PMSC_CTRL1 | 0x36 | 0x0004 |  4 | 38070281 | 1000_0001_0000_0010_0000_0111_0011_1000\n| 101 |   PMSC_SNOZT | 0x36 | 0x000c |  1 |       40 | 0100_0000\n| 102 |  PMSC_TXFSEQ | 0x36 | 0x0026 |  2 |     740B | 0000_1011_0111_0100\n| 103 |    PMSC_LEDC | 0x36 | 0x0028 |  4 | 200000DE | 1101_1110_0000_0000_0000_0000_0010_0000\n+-----+--------------+------+--------+----+----------+\nтрансивер может быть в следующих соcтояниях\n№\nState\nDescription\n1\nOFF\nчип без питания\n10\nWAKEUP\nКварц включен. LDO включен.\n2\nPowerUp\n--\n8\nDEEPSLEEP\nSPI передача невозможна\n3\nINIT\nКварц работает. SPI может работать только на 3MHz\n4\nIDLE\nPLL включен.  SPI может работать на полной скорости 20MHz\n6\nTX\nТрансивер передает пакет. После перейдет в IDLE.\n7\nRX PREAMBLE SNIFF\nТрансивер периодически переключается между IDLE и RX\n5\nRX\nТрансивер ищет преамбулу\n8\nSLEEP\nSPI передача невозможна. Потребление меньше 1uA. LDO выключены.\n9\nSNOOZE\n--\nСобственные SPI регистры чипа DW1000\nРегистровые файлы адресуются 6 битами. Это значит, что можно адресовать 64 регистровых файлов. В сумме у него 110 регистров\nhttps://docs.google.com/spreadsheets/d/1-cDqzBLOIxD7zWVG7oPmD_uq-V_fILkTvu4ADGFD_5E/edit#gid=0\nКакие настройки следует назначить в чипе DWM1000?\nПараметр\nUnits\nтип параметра\nTxPower\ndBm\nглавный\nPreamble Length\nSymbols\nпроизводный\nКанал приема\nnum\nпроизводный\npreamble code\n?\nпроизводный\nканал\nглавный\nКанал передачи\nnum\nпроизводный\nbandwidth\nHz\nпроизводный\ncentre frequency\nHz\nпроизводный\nBitRate\nBit/s\nглавный\nTransmit Pulse Repetition Frequency\nHz\nглавный\nНомер канала полностью определяет центральную частоту, ширину канала и  preamble code. Номер канала передатчика и номер канала приемника всегда должны совпадать в каждом отдельном трансивере.\nВот дерево зависимости параметров\nДерево зависимости конфигурации DWM1000\nКакие параметры влияют на дальность радиосвязи?\nБитовая скорость и длина преамбулы влияют на дальность. Более длинная преамбула обеспечивает улучшенную дальность действия. При высокой битовой скорости передачи данных рабочий диапазон короткий. При низкой битовой скорости можно передавать данные на большие расстояния.\nФормат радио пакета\nРадио пакет состоит из преамбулы, разделителя начала кадра, заголовка, полезной нагрузки\nВ модуле DW1000 имеется аппаратный 40-битный таймер. Он может считать от 0 до 2^40=1 099 511 627 776. Этот таймер тактируется частотой 64 GHz. Это значит, что он переполняется каждые 17.17 с.  Этот таймер увеличивается на 1 каждые 15.625ps. Свет за это время успевает пройти 0.004м или 4мм.\nМежду полями SFD и PHR чип вставляет метку времени. Эту метку времени можно прочитать из регистра 0x15.\nПередача данных\nПрием данных \nТак как UWB это технология для мобильной техники, то отлаживаться приходилось подключаясь к смартфону по Serial Over USB при помощи культового Android приложения Serial USB Terminal.\nВот так выглядел комплект для отладки\nКалибровка чипа DW1000\nЕсли вычитывать значения TimeStamp(ов) из регистров сразу после инициализации то значения будут не валидные. Вы получите 120...160 метров между трансиверами, когда как расcтония всего полтора метра. Это обусловлено плаванием параметров при изготовлении кремниевых пластин. \nКалибровочные параметры записываются в OTP память. Микроконтроллер может вычитывать данные из OTP и прописывать их в регистры DW1000.\nДля калибровки задержки антенны надо взять два DW1000, установить их на известное расстояние и измерить дальность. Задержка антенны настраивается до тех пор пока реальная дальность и прочитанная дальность не начнут совпадать. Затем значение задержки антенны следует прописать в OTP память. Есть задержка при отправке и задержка при приеме.   \nЗапаздывание отправки это время между внутренней цифровой отметкой времени и временем реальной отправки в антенну.\nЗапаздывание приема используется для компенсации времени между приемом сигнала RMARKER в антенне и внутренней временной отметке в цифровой цепи.\nВо многих исполнениях PCB запаздывания приема и отправки равны.\nТестирование дальности радио Link(а)\nВ помещении я разносил два DW1000 трансивера на 24 шага (16,5м) и UWB пакеты стабильно приходили в обе стороны. Дальше мешала геометрия помещения.  На улице мне удавалось принимать ping на расстояние 76 метров.\nТестирование измерения дальности по технологии SS-TWR/DS-TWR\nТестирование технологии измерения дальности без калибровки показывают, что при расстоянии между трансиверами всего 0,89м измерения показывают величины порядка 154,6 метров. Причем разброс был 0,9 метров. \nИдеи проектов на UWB трансиверах\nUWB chat. Обмен мгновенными текстовыми сообщениями.\nОбновление прошивки по радио\nПередача файлов по радио\nInDoor навигация\nУдаленное управление электронными приборами в помещении\nСловарь\nДля работы с DWM1000 надо разбираться в следующих акронимах\nАкроним\nРасшифровка\nAON\nAlways-On\nPOR\nPower On Reset\nAPI\nApplication Programming Interface\nETSI\nEuropean Telecommunications Standards Institute\nN.B. (NB)\nNota bene (note well  )\nPAC\npreamble acquisition chunk\nSFD\nstart of frame delimiter\nDW\nDecaWave\nXTI\ninternal 19.2 MHz clock (is the raw 38.4 MHz XTAL oscillator input ÷ 2)\nPRF\npulse repetition frequency\nBPM\nbi-phase modulation\nISO\nInternational Organization for Standardization\nBPSK\nbinary phase shift keying\nMSB\nmost significant bit\nFCS\nFrame Checking Sequence\nTWR\nTwo Way Ranging\nLO\nlocal oscillator\nIEEE\nInstitute of Electrical and Electronic Engineers\nPLL\nPhase Locked Loop\nCS\nchip select.\nCMOS\nComplementary metal–oxide–semiconductor\nQFN\nquad-flat no-leads\nLSB\nLeast Significant Bit\nLDE\nleading edge (or the process to find and adjust the RX message timestamp)\nLED\nlight-emitting diode\nPHR  \nPHY header\nPHY\nphysical layer\nSPI\nSerial Peripheral Interface\nGPIO\nGeneral Purpose Input Output\nOTP\nOne-Time Programmable\nRTLS\nreal time location systems\nWSNs\nwireless sensor networks\nRST\nReset\nTOF\ntime of flight\nIC\nIntegrated circuit\nFCC\nFederal Communications Commission\nTDOA\nTime Difference of Arrival\nMAC\nMedia Access Control\nCRC\ncyclic redundancy check\nUWB\nUltra Wideband\nTWR\ntwo way ranging\nTX\ntransmit\nRF\nradio frequency\nPSD\npower spectral density\nEIRP\nEffective Isotropic Radiated Power\nPCB\nprinted circuit board\nFEC\nForward error correction\nВывод\nСам по себе DW1000 очень сырой. Чтобы просто настроить канал надо прописать магические числа в дюжину регистров. При этом часть регистров адресуются 2мя байтами, а часть 3мя байтами. Хотя регистров всего, 110 штучек. Сами регистры рваные, разных размеров.  Для записи OTP параметров надо напряжение чуть выше привычных 3,3V на VCC (3.8V).  RxTimeStamp надо включать отдельно. Нужна калибровка запаздывания антенн.\nРегистров много. Для чипа dw1000 нужен сравнительно сложный драйвер. Нет смысла писать для него свой драйвер. Лучше взять драйвер от вендора.  Данные удалось передавать в обе стороны на расстояния до 78 метров. Определять Tx TimeStamp(ы). На первый взгляд дальность определяется с точностью +- 45см. В общем чип dw1000 сложный.\nЕще модуль можно задействовать как расширитель GPIO. С SPI на 8 pin(ов). \nКак по мне, дак UWB отличный интерфейс, чтобы обновлять прошивку или для дистанционного упрарления, но чтобы измерять дальность надо строить калибровочный стенд метров 10 в габаритах.\nLinks\nДокументация про модуль\nПокупка модуля\nПокупка переходника\nДокументация про чип DW1000:\nhttps://www.qorvo.com/products/p/DW1000\nhttps://how2electronics.com/getting-started-with-esp32-dw1000-uwb-ultra-wideband-module/\nКонтрольные вопросы:\n1--Как определить что передатчик в самом деле передает что-то?\n2--Нет радио Link(а) (например в UWB). Как выявить в чем дело? Передатчик не передает или приемник не принимает?\n3--Если ширина спектра широкая, то что можно сказать про форму сигнала во временной области?\n4--Если увеличить длину преамбулы, то как это скажется на дальности радио связи?\n \n ",
    "tags": [
        "DWM1000",
        "ieee 802.15.4",
        "uwb",
        "nrf",
        "nrf5340",
        "nrf5340-dk",
        "radio",
        "asic",
        "dw1000",
        "RF"
    ]
}
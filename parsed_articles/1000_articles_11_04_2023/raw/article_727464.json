{
    "article_id": "727464",
    "article_name": "Остановись, мгновенье. Медленное программирование — тренд для уставших разработчиков",
    "content": "Как же хочется иногда остановить дикую гонку разработки и получить удовольствие от вдумчивого, размеренного написания кода. Как же не хватает времени на обдумывание алгоритмов и исследование перспективных архитектурных вариантов системы. Как же тянет отыскать стоп-кран и остановить взбесившийся конвейер по штамповке недолговечных решений.\nЕсли вы устали от бесконечных дедлайнов, совещаний и спринтов, то, возможно, вам придётся по душе концепция медленного программирования. По своей сути она полностью противоположна мейнстриму — постоянному ускорению разработки. Попробуем рассмотреть все плюсы и минусы этой концепции.\nМедленная жизнь\nМедленное программирование — это часть большого «медленного движения» (Slow Movement). Это культурный тренд, к которому осознанно обращаются всё больше людей. Медленное движение имеет множество течений и направлений, которые объединены одной общей идеей: люди устали от сумасшедшего ритма жизни, хотят замедлиться и снова получать удовольствие от работы, образования, чтения, питания и других повседневных занятий.\nМедленное искусство пропагандирует не только тщательное и продуманное создание произведений искусства, но и протестует против быстрой пробежки туристов по музеям и достопримечательностям.\nМедленное чтение борется с противоестественным скорочтением и агитирует за медленное и вдумчивое изучение книг, перечитывание и анализ текстов.\nМедленное питание — это просто обычное здоровое питание безо всяких фастфудов и полуфабрикатов. Сторонники этого направления ратуют за возврат культуры застолья и за сохранение национальных и региональных кулинарных традиций.\nМедленное телевидение противостоит клиповому монтажу, дёрганому ритму и беспрецедентному падению уровня телевизионных передач. Всё большую популярность набирают каналы, которые транслируют многочасовые медитативные записи природы, поездок, путешествий.\nМедленное путешествие, в свою очередь, осуждает слишком быстрое перемещение, которое значительно уменьшает удовольствие от поездок и притупляет впечатления от незнакомой страны. Сюда же примыкает и медленная фотография. Она призывает делать вдумчивые редкие кадры вместо десятков тысяч фотографий, которые оседают в цифровых архивах их авторов.\nЕсть ещё медленное садоводство, медленное образование, медленное воспитание, медленная наука, медленная мода… Количество направлений этого движения постоянно растёт. Люди хотят, чтобы их наконец оставили в покое и дали пожить в своё удовольствие.\nПрограммисты — тоже люди и тоже порядком устали от бесконечной погони за призрачными показателями и результатами. Поэтому в этом ряду направлений и возникло медленное программирование.\nМедленное программирование\nКонцепция медленного программирования подразумевает:\nпродуманное и вдумчивое проектирование;\nбольшое внимание к деталям;\nтщательное тестирование;\nстремление к совершенству.\nПопробуем разобраться, что это означает на практике.\n1. Тщательное проектирование\nДля того чтобы запрограммировать что-нибудь \nненужное\n, требуется сначала всё как следует спроектировать. Это означает, что нужно:\nкак следует проанализировать пользовательский опыт;\nпровести поиск оптимальных решений;\nобдумать и проверить различные варианты реализации.\nЛюбая хорошая, добротная вещь начинается с исследования и проекта. В современном корпоративном мире эту работу обычно выполняют не программисты, но это не так важно. В любом случае торопиться тут точно не стоит — прежде, чем отрезать, нужно как следует отмерить.\n2. Программирование без компьютера\nПомните мемы о «ленивых» программистах, которые вместо того, чтобы усердно стучать по клавиатуре, занимаются неизвестно чем? С точки зрения \nэффективного менеджера\n стороннего наблюдателя они просто плюют в потолок и зря получают зарплату.\nСложно бывает объяснить, что:\nпочти любой фрагмент кода требует обдумывания и нескольких внутренних итераций его улучшения;\nпрограммист не должен начинать разработку сразу после получения ТЗ;\nобдумывание алгоритмов вдали от клавиатуры — важная часть его работы.\nКстати, качество этой самой работы не может оценивается количеством написанного кода за единицу времени.\n3. Стремление к совершенству\nВсем известно, что совершенства достичь невозможно, к нему можно только стремиться. Но хочется хотя бы начать двигаться в его сторону. Для этого требуются:\nтщательное проектирование дизайна и оформления приложения;\nкропотливый поиск наиболее эффективных решений;\nпроведение НИР (научно-исследовательских работ) — поиск наилучшего решения путём экспериментов.\nОдин из способов улучшения качества кода — это парное программирование. Для менеджеров это кошмар: двойное увеличение ресурсов на решение поставленной задачи.\nВозможно, в какой-то момент может прийти мысль, что совершенство — это минимализм и простота: кода, интерфейса, архитектуры. Вряд ли можно достичь истинного совершенства на базе множества лишних надстроек, библиотек и фреймворков. Многолетнее легаси тоже не добавляет системе изящества.\n4. Качество и отказ от долгов\nРевизия и рефакторинг старого кода не менее важны, чем разработка нового. Естественно, рефакторинг нужно делать осторожно — медленно и вдумчиво. И обязательно сопровождать тестированием — регрессионным и автоматическим.\nТермин «технический долг» лучше всего вообще исключить из лексикона:\nвсё, что требуется для проекта, делается сразу, а не откладывается на потом;\nникаких временных компромиссов, «костылей» и «велосипедов» в угоду срокам.\n5. Получение удовольствия от процесса\nЭтот пункт — самый «эгоистичный», но, пожалуй, самый важный. Медленное программирование — это способ снова превратить разработку кода в искусство. Это путь к тому, чтобы вернуть программисту:\nгордость за свою работу и за продукт своего труда;\nздоровый баланс между работой и жизнью;\nкомфортный ритм рабочих процессов;\nвозможность саморазвития.\nБыстрее — не значит лучше\nМножество статей и книг учат нас, как стать эффективнее и быстрее работать. При этом почему-то между эффективностью и скоростью ставят знак равенства. Корпоративный мир требует постоянного ускорения и сокращения трудозатрат. Нас окружают методики быстрых итераций, таск-трекеры и дедлайны. Всё нацелено на быстрое получение прибыли и сокращение времени между проектированием и внедрением.\nЗначит, времени на качественную работу остаётся всё меньше. Иногда, конечно, шедевры получаются случайно. Но чаще всего для того, чтобы сделать что-то качественное и красивое, нужно время. Его-то как раз у нас и нет.\nСнимаем розовые очки\nТеперь попробуем рассмотреть другую сторону проблемы. Перестанем мечтать об идеальном мире с \nбирюзовыми единорогами\n бездонными бочками трудозатрат. В современной корпоративной реальности медленное программирование — это утопия:\nбизнес нацелен на быстрое получение прибыли и опережение конкурентов;\nувеличение трудозатрат снижает прибыль и конкурентоспособность решения;\nигра не стоит свеч — идеальный сферический продукт в вакууме, на разработку которого потрачен год, устаревает через месяц после выпуска;\nвсе хотят знать, когда получат прибыль — бесконечные проекты с невозможностью прогнозирования сроков и результатов никому не нужны;\nмедленному программисту будет тяжело работать в команде, в которой остальные пишут код быстро;\nшедевры никому не нужны, рекорды продаж — у однодневных поделок.\nСуществует также опасность уйти в штопор перфекционизма — любой проект можно совершенствовать до бесконечности. Здесь важно уметь вовремя остановиться.\nВдобавок на горизонте замаячило \nнечто\n — как нас стращают в СМИ, ChatGPT скоро сможет заменить разработчиков. Достаточно будет лишь правильно поставить задание, и решение — раз-два, и готово! Безо всяких сроков и затрат — полная противоположность медленному программированию. Дело за малым: знать бы только, как это задание корректно сформулировать.\nОднако есть всё же оазисы, где медленное программирование не будет белой вороной:\nпет-проекты, где медленный программист — сам себе хозяин;\nНИР в рамках больших коммерческих проектов — выделенная песочница для неторопливых поисков истины.\nСергей Павлович Королёв однажды сказал: «Можно сделать быстро, но плохо, а можно — медленно, но хорошо. Через некоторое время все забудут, что было быстро, но будут помнить, что было плохо. И наоборот». Концепция медленного программирования — это одна из попыток неравнодушных профессионалов вернуть качество, надёжность и красоту в наш мир недолговечных пластмассовых решений.\n \n ",
    "tags": [
        "медленное программирование",
        "slow life",
        "медленная жизнь",
        "удовольствие от работы",
        "работа для души",
        "минимализм",
        "slow programming"
    ]
}
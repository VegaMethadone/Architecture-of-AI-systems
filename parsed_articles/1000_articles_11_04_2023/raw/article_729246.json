{
    "article_id": "729246",
    "article_name": "Telegram бот на ESP32 для удаленного мониторинга и управления насосной станцией",
    "content": "Нужда родит идею, идея - действие!\nПредисловие\nИстория создания данного девайса следующая: есть очистная станция, в которой шкафы управления насосами и компрессорами на ПЛК Schneider Electric. При отключении городской электросети и переходе на дизель генератор и обратно оборудование уходит в ошибку, для квинтирования которой необходимо на месте нажать кнопки сброса аварии и запуска компрессоров. В случаи не работы компрессоров бактерии в емкостях умирают. И если рабочий день окончен некому произвести данную процедуру.\nГотовые решения есть, но стоят они в десятки раз дороже данного решения.\nНи сказать чтобы компания не могла бы позволить себе купить готовые контроллеры с облачным управлением... Так как еще на своем опыте не почувствовал любовь инициативы к инициатору, решил сам сделать данный девайс.\nЖелезо\nВ качестве основы был выбран ESP32 WROOM. К нему были взяты.\nДля входных пинов -  Модуль опторазвязки с индикаторными светодиодами 24в на 3,3в\nДля выходных пинов - модуль с реле 8ми канальный (сами реле на 5В)\nДля удобства плата ESP32 установлена на плате расширения\nТакже для мониторинга наличия городской сети задействован эл.магнитный контактор (обычный на дин рейку)\nСхема подключения\n8ми канальный модуль реле подключен параллельно к кнопкам управления на шкафах управления насосной (всего шкафов 3 штуки). Было задействовано 6 реле (2е штуки остались в резерве).\nМодуль оптопар был подключен параллельно к индикаторным лампам на шкафу управления компрессорами, для мониторинга работы компрессоров.\nКатушка реле на дин рейке (220В) подключен к шинам питающим АВР, на нем будет 220в только тогда когда есть питание от ТП городской сети.\nСоздание бота в Телеграме\nВ сети полно более подробных инструкций, опишу все вкратце. Качаем и устанавливаем себе Телеграм на телефон или компьютер. Создаем аккаунт если его у вас еще нет. В поиске находим БОТА под ником BotFather.\nНачинаем с ним диалог сообщением:  \n/start\nОн ответит какие каманды может выполнять, нас интересует: \n/newbot \nвводим и следуем инструкциям по созданию бота.\nЕсли ваш бот успешно создан, вы получите сообщение со ссылкой для доступа к нему и \nтокеном бота\n. Сохраните токен бота, он вам понадобится, чтобы обеспечить взаимодействие ESP32 с ботом.\nДалее я создал группу в телеграме т.к. ботом будут управлять помимо меня другие люди.\nСоздаем группу даем ей имя, добавляем туда созданного нами бота (в списке контактов у вас его не будет, нужно в графе поиска набрать его имя и добавить его) и других людей которые будут иметь доступ к нашему контроллеру.\nТакже нужно временно добавить бота который укажет нам id нашего чата, в случае группы id будет отрицательным числом.\nПрограммирование ESP32:\nДля написания скетча была использована среда Arduino IDE 2.0\nВ качестве библиотеки для телеграм бота была выбрана\n библиотека fastbot\nСам код, с поясняющими комментариями:\n#define WIFI_SSID \"ImyaTochkiDostupa\"                               //Имя сети WIFI\n#define WIFI_PASS \"Password\"                                      \t//Пароль сети WIFI\n#define BOT_TOKEN \"1234567890:ABCdEfghiJKlMnopQr1STUvWx23Y-4ZaBCD\"  //Токен бота ТЕЛЕГРАМ\n#define CHAT_ID \"-123456789\"                                        //ID чата в который будет писать БОТ и откуда будет принимать сообщения\n#include <FastBot.h>                                                //Подключаем библиотеку телеграм бота AlexGyver\n\n#define gorodset 12       //Городская сеть\n#define BTN_14_1_start 32 //14.1 ПУСК\n#define BTN_14_2_start 33 //14.2 ПУСК\n#define BTN_GrO_reset 25  //Грубая очистка СБРОС\n#define BTN_MlO_reset 26  //Мелкая очистка СБРОС\n#define BTN_PrE_reset 27  //Приемная емкость СБРОС\n#define BTN_LOS_reset 14  //ЛОС СБРОС\n#define ON_14_1 34        //14.1 Включен\n#define ON_14_2 35        //14.2 Включен\n\nunsigned short workled = 0;         //Переменная для таймера для моргания светодиода индикатора работы (быстро моргает попытка к подключения к wifi, раз в секунду проход через цикл LOOP)\nuint32_t startUnix;                 //Переменная в которую записываем время включения ESP32 для игнорирования сообщений которые приходили пока ESP32 была не в сети\nbool status_14_1 = false;           //Переменная для Статуса 14.1\nbool prev_status_14_1 = false;      //Переменная для хранения предыдущего статуса компрессора 14.1\nbool status_14_2 = false;           //Переменная для Статуса 14.2\nbool prev_status_14_2 = false;      //Переменная для хранения предыдущего статуса компрессора 14.2\nbool status_gorodset = true;        //Переменная для статуса городская сеть\nbool prev_status_gorodset = true;   //Переменная для хранения предыдущего статуса городской сети\nbool auto_sbros = true;             //Переменная (авто/вручную) сброс ошибок и запуск компрессоров при переходе на дизель и обратно. Если true то переключения будут автоматические\nunsigned long prev_connect = 0;     //Время последней попытки подключения\nunsigned long time_kompr = 0;       //Таймер для сообщений о том что компрессоры не запускались более 3600000 миллисекунд (ЧАС)\nunsigned long prev_time_kompr = 0;  //Таймер для сообщений о том что компрессоры не запускались более 3600000 миллисекунд (ЧАС)\nunsigned int time_kompr_min = 0;    //Таймер не работающих компрессоров в минутах\nunsigned int prev_a_sbros = 0;      //Таймер время с момента предыдущего авто сброса в минутах\nunsigned long prev_time_kompr2 = 0;\nunsigned long time_notconnected = 0;  //Таймер запоминает время в котором нет подключения\nunsigned long time_connected = 0;     //Таймер запоминает время в которое еще есть подключение к wifi\nunsigned long time_gorset = 0;        //Таймер проверки Городской сети\nunsigned long time_status_14_1 = 0;   //Таймер проверки состояния компрессора 14.1\nunsigned long time_status_14_2 = 0;   //Таймер проверки состояния компрессора 14.2\nunsigned long time_utro = 0;          //Таймер отправки сообщения утром(для того чтобы не отправлял сообщение многократно)\nString time_izm_14_1 = \"hh:mm:ss\";\t\t//Время изменения состояния компрессора 14.1\nString time_izm_14_2 = \"hh:mm:ss\";\t\t//Время изменения состояния компрессора 14.2\nString date_izm_14_1 = \"dd:mm:yy\";  \t//Дата изменения состояния компрессора 14.1\nString date_izm_14_2 = \"dd:mm:yy\";  \t//Дата изменения состояния компрессора 14.2\nString time_izm_gorset = \"hh:mm:ss\";\t//Время изменения состояния городской сети\nString date_izm_gorset = \"dd:mm:yy\";  \t//Дата изменения состояния городской сети\n\nFastBot bot(BOT_TOKEN);\t\t\t\t\t//Инициализируем бота\n\nvoid setup() {\n  //Настраиваем ПИНЫ\n  pinMode(2, OUTPUT);             //2й пин, на нем сидит встроенный светодиод\n  digitalWrite(2, LOW);           //изначально встроенный светодиод в выключееном состоянии\n  pinMode(BTN_14_1_start, OUTPUT);\n  digitalWrite(BTN_14_1_start, LOW);\n  pinMode(BTN_14_2_start, OUTPUT);\n  digitalWrite(BTN_14_2_start, LOW);\n  pinMode(BTN_GrO_reset, OUTPUT);\n  digitalWrite(BTN_GrO_reset, LOW);\n  pinMode(BTN_MlO_reset, OUTPUT);\n  digitalWrite(BTN_MlO_reset, LOW);\n  pinMode(BTN_PrE_reset, OUTPUT);\n  digitalWrite(BTN_PrE_reset, LOW);\n  pinMode(BTN_LOS_reset, OUTPUT);\n  digitalWrite(BTN_LOS_reset, LOW);\n  pinMode(ON_14_1, INPUT);         //Нужно подтянуть к высокому уровню 3.3В через резистор, на плате DST-1R4p-N уже сделано\n  pinMode(ON_14_2, INPUT);         //Нужно подтянуть к высокому уровню 3.3В через резистор, на плате DST-1R4p-N уже сделано\n  pinMode(gorodset, INPUT_PULLUP); //Нужно подтянуть к высокому уровню 3.3В через резистор, на плате DST-1R4p-N уже сделано\n\n  connectWiFi();                   //Подключаемся к ВайФай\n  delay(1000);                     //ждем 1сек\n  bot.setChatID(CHAT_ID);          // установить ID чата, чтобы принимать сообщения только из него, передай \"\" (пустую строку) чтобы отключить проверку\n                                   // можно указать несколько ID через запятую\n                                   //bot.setChatID(\"123456,7891011,12131415\");\n  bot.skipUpdates();               //пропустить сообщения которые приходили в момент когда плата была выключена\n  bot.sendMessage(\"Я в сети!\");    // отправить сообщение в чат указанный в setChatID\n  startUnix = bot.getUnix();       //Запоминаем время включения ESP32 для игнорирования сообщений которые приходили пока ESP32 была не в сети\n  bot.attach(newMsg);              //подключаем функцию-обработчик\n}\n\nvoid newMsg(FB_msg& msg) {         // обработчик сообщений\n  if (msg.unix < startUnix) return;// игнорировать сообщения которые приходили пока ESP32 была не в сети\n  \n  //+++++++ОБНОВЛЕНИЕ ПРОШИВКИ ПО ВОЗДУХУ+++++++\n        if (msg.OTA && msg.fileName == \"update.bin\" && msg.chatID == \"-123456789\") bot.update();\t//Прошиваем если имя файла update.bin и сообщение пришло от чата с id -123456789\n  //+++++++ОБНОВЛЕНИЕ ПРОШИВКИ ПО ВОЗДУХУ+++++++\n  \n  if (msg.text == \"/help\"){               //если пришло сообщение /help...\n    bot.sendMessage(\"Я умею:\\n/clock - Синхронизировать время\\n/hardreset - Перезагрузка\\n/auto_sbros_on - Включить автосброс\\n/auto_sbros_off - выключить автосброс\\n/on_14_1 - Пуск 14.1\\n/on_14_2 - Пуск 14.2\\n/gruboch_reset\\n/melkoch_reset\\n/priememk_reset\\n/los_reset\", msg.chatID);\n  }  \n\n  if (msg.text == \"/clock\"){              //если пришло сообщение /clock...\n    bot.sendMessage(\"Синхронизирую время с серверами ТЕЛЕГРАМ\", msg.chatID);    //отправляем сообщение в чат (необходимо для получения времени в UNIX)\n    bot.getUnix();                                                              //синхронизируем время с серверами ТЕЛЕГРАМ\n    FB_Time t = bot.getTime(3);                 //Записываем время в UNIX в локальную переменную t\n\t  time_izm_gorset = t.timeString();           //записываем время изменения состояния городской сети в формате чч:мм:сс в переменную time_izm_gorset\n    date_izm_gorset = t.dateString();           //записываем дату изменения состояния городской сети в формате дд:мм:гг в переменную date_izm_gorset\n    time_izm_14_1 = t.timeString();       //записываем время изменения состояния компрессора 14.1 в формате чч:мм:сс в переменную time_izm_14_1\n    date_izm_14_1 = t.dateString();       //записываем дату изменения состояния компрессора 14.1 в формате дд:мм:гг в переменную date_izm_14_1\n    time_izm_14_2 = t.timeString();       //записываем время изменения состояния компрессора 14.2 в формате чч:мм:сс в переменную time_izm_14_2\n    date_izm_14_2 = t.dateString();       //записываем дату изменения состояния компрессора 14.2 в формате дд:мм:гг в переменную date_izm_14_2\n    delay(1000);                          //ждем 1сек\n    proverka();                           //Запускаем функцию проверки состояния компрессоров и городской сети\n    //  отправляем состояние компрессоров и городской сети в чат\n    if (!status_14_1 && status_14_2) bot.sendMessage(\"14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && !status_14_2) bot.sendMessage(\"14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && status_14_2) bot.sendMessage(\"ВНИМАНИЕ! \\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2 + \"\\nНеработают \" + time_kompr_min + \" минут(ы),\\nАВТО сброс=\" + String(auto_sbros), msg.chatID);\n\t  if (!status_14_1 && !status_14_2) bot.sendMessage(\"СТРАННО! \\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2 + \"\\nАВТО сброс=\" + String(auto_sbros), msg.chatID);\n    if (!status_gorodset) bot.sendMessage(\"\\U00002705 ЕСТЬ городская сеть c \" + time_izm_gorset + \" \" + date_izm_gorset, CHAT_ID);\n    if (status_gorodset) bot.sendMessage(\"\\U0000274c НЕТ городской сети c \" + time_izm_gorset + \" \" + date_izm_gorset, CHAT_ID);\n  }\n\n  if (msg.text == \"/hardreset\"){          //если пришло сообщение /hardreset...\n    bot.sendMessage(\"ПЕРЕЗАГРУЖАЮСЬ...\", msg.chatID);                           //отправляем сообщение в чат\n    delay(1000);                                                                //ждем 1сек\n    bot.tickManual();                                                           //пропускаем один тик для того чтобы сообщение указалось прочитанным и плата не ушла в бесконечную перезагрузку\n    ESP.restart();                                                              //перезагружаем плату\n  }\n\n  if (msg.text == \"/auto_sbros_on\"){      //если пришло сообщение /auto_sbros_on...\n    auto_sbros = true;                                                                                    //записываем в переменную, автосброс включен\n    bot.sendMessage(\"Автоматический сброс аварий и запуск компрессоров \\U00002705 ВКЛЮЧЕН \\nАВТО сброс=\" + String(auto_sbros), msg.chatID);  //отправляем сообщение о новом состоянии функции автосброса\n  }\n  \n  if (msg.text == \"/auto_sbros_off\"){     //если пришло сообщение /auto_sbros_off...\n    auto_sbros = false;                                                                                   //записываем в переменную, автосброс выключен\n    bot.sendMessage(\"Автоматический сброс аварий и запуск компрессоров \\U0000274c ОТКЛЮЧЕН \\nАВТО сброс=\" + String(auto_sbros), msg.chatID); //отправляем сообщение о новом состоянии функции автосброса\n  }\n\n  if (msg.text == \"/on_14_1\"){            //если пришло сообщение /on_14_1...\n    digitalWrite(BTN_14_1_start, HIGH);                           //включаем реле ПУСК 14.1\n    delay(1000);                                                  //ждем 1сек\n    digitalWrite(BTN_14_1_start, LOW);                            //выключаем реле ПУСК 14.1\n    bot.sendMessage(\"СТАРТ 14.1\", msg.chatID);                    //отправляем сообщение о пуске компрессора 14.1 в чат\n  } \n  else if (msg.text == \"/on_14_2\"){       //если пришло сообщение /on_14_2...\n    digitalWrite(BTN_14_2_start, HIGH);                           //включаем реле ПУСК 14.2\n    delay(1000);                                                  //ждем 1сек\n    digitalWrite(BTN_14_2_start, LOW);                            //выключаем реле ПУСК 14.2\n    bot.sendMessage(\"СТАРТ 14.2\", msg.chatID);                    //отправляем сообщение о пуске компрессора 14.2 в чат\n  }\n  else if (msg.text == \"/gruboch_reset\"){ //если пришло сообщение /gruboch_reset...\n    digitalWrite(BTN_GrO_reset, HIGH);                            //включаем реле СБРОС ошибки Грубой очистки\n    delay(1000);                                                  //ждем 1сек\n    digitalWrite(BTN_GrO_reset, LOW);                             //выключаем реле СБРОС ошибки Грубой очистки\n    bot.sendMessage(\"СБРОС Аварии Грубой очистки\", msg.chatID);   //отправляем сообщение о сбросе ошибки грубой очистки в чат\n  }\n  else if (msg.text == \"/melkoch_reset\"){ //если пришло сообщение /melkoch_reset...\n    digitalWrite(BTN_MlO_reset, HIGH);                            //включаем реле СБРОС ошибки Мелкой очистки\n    delay(1000);                                                  //ждем 1сек\n    digitalWrite(BTN_MlO_reset, LOW);                             //выключаем реле СБРОС ошибки Мелкой очистки\n    bot.sendMessage(\"СБРОС Аварии Мелкой очистки\", msg.chatID);   //отправляем сообщение о сбросе ошибки мелкой очистки в чат\n  }\n  else if (msg.text == \"/priememk_reset\"){ //если пришло сообщение /priememk_reset...\n    digitalWrite(BTN_PrE_reset, HIGH);                             //включаем реле СБРОС ошибки приемной емкости\n    delay(1000);                                                   //ждем 1сек\n    digitalWrite(BTN_PrE_reset, LOW);                              //выключаем реле СБРОС ошибки приемной емкости\n    bot.sendMessage(\"СБРОС Аварии Приемной емкости\", msg.chatID);  //отправляем сообщение о сбросе ошибки приемной емкости в чат\n  }\n  else if (msg.text == \"/los_reset\"){      //если пришло сообщение /los_reset...\n    digitalWrite(BTN_LOS_reset, HIGH);                             //включаем реле СБРОС ошибки ЛОС\n    delay(1000);                                                   //ждем 1сек\n    digitalWrite(BTN_LOS_reset, LOW);                              //выключаем реле СБРОС ошибки ЛОС\n    bot.sendMessage(\"СБРОС Аварии ЛОС\", msg.chatID);               //отправляем сообщение о сбросе ошибки ЛОС в чат\n  }\n\n  //      сверяем состояния компрессоров и состояние городской сети, исходя из этого отправляем нужное сообщение в чат\n  else if (msg.text == \"/status\"){         //если пришло сообщение /status...\n\t  if (!status_14_1 && status_14_2) bot.sendMessage(\"14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && !status_14_2) bot.sendMessage(\"14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && status_14_2) bot.sendMessage(\"ВНИМАНИЕ! \\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2 + \"\\nНеработают \" + time_kompr_min + \" минут(ы),\\nАВТО сброс=\" + String(auto_sbros), msg.chatID);\n\t  if (!status_14_1 && !status_14_2) bot.sendMessage(\"СТРАННО! \\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n    if (!status_gorodset) bot.sendMessage(\"\\U00002705 ЕСТЬ городская сеть c \" + time_izm_gorset + \" \" + date_izm_gorset + \"\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID);\n    if (status_gorodset) bot.sendMessage(\"\\U0000274c НЕТ городской сети c \" + time_izm_gorset + \" \" + date_izm_gorset + \"\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID);\n  }\n\n  else if (msg.text == \"/lllsbroslll\"){    //если пришло сообщение /lllsbroslll...\n    bot.sendMessage(\"Начинаю СБРОС после переключения электричества...\", msg.chatID); //отправляем сообщение о начале сброса ошибок и запуска компрессоров в чат\n    int32_t lmsgidd = bot.lastBotMsg();       //переменная куда запоминаем id сообщения отправленного ботом выше для его последующего редактирования\n    digitalWrite(BTN_LOS_reset, HIGH);        //включаем реле СБРОС ошибки ЛОС\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_LOS_reset, LOW);         //выключаем реле СБРОС ошибки ЛОС\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\", msg.chatID); //редактируем предыдущее сообщение с добавлением новой информации(аналогично сообщения ниже)\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_GrO_reset, HIGH);        //включаем реле СБРОС ошибки Грубой очистки\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_GrO_reset, LOW);         //выключаем реле СБРОС ошибки Грубой очистки\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\", msg.chatID);\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_MlO_reset, HIGH);        //включаем реле СБРОС ошибки Мелкой очистки\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_MlO_reset, LOW);         //выключаем реле СБРОС ошибки Мелкой очистки\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\", msg.chatID);\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_PrE_reset, HIGH);        //включаем реле СБРОС ошибки Приемной емкости\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_PrE_reset, LOW);         //выключаем реле СБРОС ошибки Приемной емкости\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\", msg.chatID);\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_14_1_start, HIGH);       //включаем реле Пуск 14.1\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_14_1_start, LOW);        //выключаем реле Пуск 14.1\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\", msg.chatID);\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_14_2_start, HIGH);       //включаем реле Пуск 14.2\n    delay(1000);                              //ждем 1сек\n    digitalWrite(BTN_14_2_start, LOW);        //выключаем реле Пуск 14.2\n    bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\", msg.chatID);\n    delay(3000);                              //ждем 3сек\n    proverka();                               //Запускаем функцию проверки состояния компрессоров и городской сети\n    delay(500);                               //ждем 0,5сек\n    \n    //исходя из состояния компрессоров и городской сети, редактируем последнее сообщение с добавлением статуса компрессоров и городской сети\n\t  if (!status_14_1 && status_14_2) bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && !status_14_2) bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n\t  if (status_14_1 && status_14_2) bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n!!! ВНИМАНИЕ !!!\\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n    if (!status_14_1 && !status_14_2) bot.editMessage(lmsgidd, \"Начинаю СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\nСТРАННО!\\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, msg.chatID);\n    delay(1000);                              //ждем 1сек\n    bot.sendMessage(\"ГОТОВО\", msg.chatID);    //отправляем сообщение ГОТОВО в чат\n  }\n}\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nvoid loop() {\n  margun();                         //вызов функции мигания встроенного светодиода\n  bot.tick();                       //тикаем в луп (проверка входящих и отметка о прочтении предыдущих)\n  FB_Time t = bot.getTime(3);       //Записываем время в UNIX в локальную переменную t\n\tString vremya = t.timeString();   //записываем время изменения состояния городской сети в формате чч:мм:сс в переменную time_izm_gorset\n  if (millis() - time_utro >= 600000){\n    if (vremya == \"10:00:00\" || vremya == \"10:00:01\"){\n      if (!status_14_1 && status_14_2) bot.sendMessage(\"14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n\t    if (status_14_1 && !status_14_2) bot.sendMessage(\"14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n\t    if (status_14_1 && status_14_2) bot.sendMessage(\"ВНИМАНИЕ! \\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2 + \"\\nНеработают \" + time_kompr_min + \" минут(ы),\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID);\n\t    if (!status_14_1 && !status_14_2) bot.sendMessage(\"СТРАННО! \\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \"  \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n     if (!status_gorodset) bot.sendMessage(\"\\U00002705 ЕСТЬ городская сеть c \" + time_izm_gorset + \" \" + date_izm_gorset + \"\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID);\n      if (status_gorodset) bot.sendMessage(\"\\U0000274c НЕТ городской сети c \" + time_izm_gorset + \" \" + date_izm_gorset + \"\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID);\n      delay(2000);\n      time_utro = millis();\n    }\n  }\n  proverka();                       //проверяем состояние компрессоров 14.1 и 14.2, если они отключены более 3600000 мсек(ЧАС) - отправляем сообщение в чат\n  if (auto_sbros == true){          //если автосброс включен... (включен по умолчанию (прсле перезагрузки платы), можно отключить отправив сообщение боту /auto_sbros_off)               \n    if (millis() - prev_a_sbros >= 1800000) a_sbros();  //если включен авто сброс и время с момента предыдущего а.сброса прошло больше 30ти минут, совершить авто сброс\n  }  \n  stat_wifi();                      //Проверка состояния подключения к сети wifi\n}\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nvoid connectWiFi() {              //функция подключения к сети wifi\n  delay(2000);                                     //ждем 2сек\n  WiFi.begin(WIFI_SSID, WIFI_PASS);                //подключаемся используя указанные выше SSID(имя сети) и PASS(пароль от данной сети)\n  prev_connect = millis();                         //записываем время когда была попытка подключиться\n  while (WiFi.status() != WL_CONNECTED){           //пока нет водключения к сети wifi...\n    for (unsigned short x=0;x<=2;x++){             //цикл для обозначения встроенным светодиодом о том, что нет соединения с wifi сетью (быстрое мерцание) unsigned short в arduino ide 0...255\n      digitalWrite(2, HIGH);    //включаем встроенный светодиод\n      delay(250);               //ждем 0,25сек\n      digitalWrite(2, LOW);     //выключаем встроенный светодиод\n      delay(250);               //ждем 0,25сек\n    }\n    if ((millis() - prev_connect) > 5000) return;  //ждем 5 сек\n  }\n}\nvoid stat_wifi() {                //Проверка состояния подключения к сети wifi\n  if (WiFi.status() != WL_CONNECTED) {    //если нет водключения к сети wifi...\n    digitalWrite(2, HIGH);                //включаем встроенный светодиод\n    delay(50);                            //ждем 0,05сек\n    digitalWrite(2, LOW);                 //выключаем встроенный светодиод\n    delay(50);                            //ждем 0,05сек\n    time_notconnected = millis();         //записываем последнее время при котором не было подключения к сети wifi для таймера переподключения\n  }\n  if (WiFi.status() == WL_CONNECTED) time_connected = millis();   //если плата подключена к сети wifi, записываем текущее время в переменную time_connected\n  \n  if (WiFi.status() != WL_CONNECTED && ((time_notconnected - time_connected) >= 60000) && (millis() - prev_connect) > 15000) connectWiFi(); //если нет подключения более 1 мин пытаемся переподключиться\n\n}\nvoid proverka(){                   //функция проверки (проверяем состояние компрессоров 14.1 и 14.2, если они отключены более 3600000 мсек(ЧАС) - отправляем сообщение в чат)\n  \n  if (millis() - time_gorset >= 1500){        //Проверяем состояние городской сети раз в 1,5сек. для избегания дребезга контактов\n    status_gorodset = digitalRead(gorodset);  //записываем состояние городской сети в переменную status_gorodset\n    time_gorset = millis();                   //записываем время для таймера переодичности опроса состояния городской сети\n  }\n  \n  if (status_gorodset != prev_status_gorodset){ //Если состояние городской сети изменилось (пропала гор сеть или появилась)\n    prev_status_gorodset = status_gorodset;     //записываем новое состояние гор.сети в переменную предыдущего состояния гор.сети\n    FB_Time t = bot.getTime(3);                 //Записываем время в UNIX в локальную переменную t\n\t  time_izm_gorset = t.timeString();           //записываем время изменения состояния городской сети в формате чч:мм:сс в переменную time_izm_gorset\n    date_izm_gorset = t.dateString();           //записываем дату изменения состояния городской сети в формате дд:мм:гг в переменную date_izm_gorset\n    if (!status_gorodset) bot.sendMessage(\"\\U00002705 ЕСТЬ городская сеть с \" + time_izm_gorset + \" \" + date_izm_gorset, CHAT_ID);\n    if (status_gorodset) bot.sendMessage(\"\\U0000274c НЕТ городской сети с \" + time_izm_gorset + \" \" + date_izm_gorset, CHAT_ID);\n    if (auto_sbros == true) bot.sendMessage(\"Автоматический сброс аварий и запуск компрессоров \\U00002705 ВКЛЮЧЕН\", CHAT_ID);\n    if (auto_sbros == false) bot.sendMessage(\"Автоматический сброс аварий и запуск компрессоров \\U0000274c ВЫКЛЮЧЕН\", CHAT_ID);\n  }\n\n  if (millis() - time_status_14_1 >=1500){  //Проверяем состояние 14.1 раз в 1,5сек. для избегания дребезга контактов\n    status_14_1 = digitalRead(ON_14_1);     //Записываем состояние компрессора 14.1 в переменную status_14_1\n    if (status_14_1 != prev_status_14_1){   //Если состояние коипрессора 14.1 изменилось...\n\t    prev_status_14_1 = status_14_1;       //Записываем новое состояние компрессора 14.1 в переменную последнего состояния prev_status_14_1\n      FB_Time t = bot.getTime(3);           //Записываем время в UNIX в локальную переменную t\n\t    time_izm_14_1 = t.timeString();       //записываем время изменения состояния компрессора 14.1 в формате чч:мм:сс в переменную time_izm_14_1\n      date_izm_14_1 = t.dateString();       //записываем дату изменения состояния компрессора 14.1 в формате дд:мм:гг в переменную date_izm_14_1\n    }\n    time_status_14_1 = millis();            //записываем время для таймера переодичности опроса состояния компрессора 14.1\n  }\n  \n  if (millis() - time_status_14_2 >=1500){  //Проверяем состояние 14.2 раз в 1,5сек. для избегания дребезга контактов\n    status_14_2 = digitalRead(ON_14_2);     //Записываем состояние компрессора 14.2 в переменную status_14_2\n    if (status_14_2 != prev_status_14_2){   //Если состояние коипрессора 14.2 изменилось...\n\t    prev_status_14_2 = status_14_2;       //Записываем новое состояние компрессора 14.2 в переменную последнего состояния prev_status_14_2\n      FB_Time t = bot.getTime(3);           //Записываем время в UNIX в локальную переменную t\n\t    time_izm_14_2 = t.timeString();       //записываем время изменения состояния компрессора 14.2 в формате чч:мм:сс в переменную time_izm_14_2\n      date_izm_14_2 = t.dateString();       //записываем дату изменения состояния компрессора 14.2 в формате дд:мм:гг в переменную date_izm_14_2\n    }\n    time_status_14_2 = millis();            //записываем время для таймера переодичности опроса состояния компрессора 14.2\n  }\n  \n  if (!status_14_1 || !status_14_2) {       //Если один из компрессоров включен...\n    time_kompr = millis();                  //записываем время для таймера состояния компрессоров time_kompr\n    prev_time_kompr = millis();             //записываем время для таймера предыдущего состояния компрессоров prev_time_kompr\n    prev_time_kompr2 = millis();            //записываем время для таймера предыдущего состояния компрессоров prev_time_kompr2\n    prev_a_sbros = millis();                //записываем время для таймера запоминания предыдущего времени автоматического сброса\n  }\n  \n  if (status_14_1 == true && status_14_2 == true){              //если оба компрессора выключены...\n    time_kompr = millis();                                      //записываем время отключенного состояния обоих компрессоров в переменную time_kompr\n    time_kompr_min = ((time_kompr - prev_time_kompr2)/60000);   //считаем и записываем время которое не работают оба компрессора в минутах, в переменную time_kompr_min\n  }\n\n  if (status_14_1 == true && status_14_2 == true && ((time_kompr - prev_time_kompr) >= 3600000)){ //если оба компрессора отключены и находятся в таком состоянии болше 3600000мс-часа...\n    prev_time_kompr = millis();                                                                   //записываем время для таймера переодичности оповещения о том, что таймеры не работают в чат\n    bot.sendMessage(\"Компрессоры не работают уже \" + String(time_kompr_min) + \" минут\\nАВТО сброс=\" + String(auto_sbros), CHAT_ID); //отправляем оповещение в чат\n  }\n}\nvoid a_sbros(){                    //Функция автоматического сброса аварий и включения компрессоров\n    prev_a_sbros = millis();            //Запоминаем время автосброса в минутах\n    bot.sendMessage(\"Начинаю Автоматический СБРОС после переключения электричества...\", CHAT_ID); //отправляем сообщение в чат\n    int32_t lmsgidd = bot.lastBotMsg(); //переменная куда запоминаем id сообщения отправленного ботом выше для его последующего редактирования\n    digitalWrite(BTN_LOS_reset, HIGH);  //включаем реле \"Сброс аварии ЛОС\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_LOS_reset, LOW);   //выключаем реле \"Сброс аварии ЛОС\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\", CHAT_ID); //редактируем предыдущее сообщение с дополнением\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_GrO_reset, HIGH);  //включаем реле \"Сброс аварии Грубой очистки\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_GrO_reset, LOW);   //выключаем реле \"Сброс аварии Грубой очистки\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\", CHAT_ID); //редактируем пред.сообщение\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_MlO_reset, HIGH);  //включаем реле \"Сброс аварии Мелкой очистки(14.х)\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_MlO_reset, LOW);   //выключаем реле \"Сброс аварии Мелкой очистки(14.х)\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\", CHAT_ID);\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_PrE_reset, HIGH);  //включаем реле \"Сброс аварии Приемной емкости\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_PrE_reset, LOW);   //выключаем реле \"Сброс аварии Приемной емкости\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\", CHAT_ID);\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_14_1_start, HIGH); //включаем реле \"Пуск компрессора 14.1\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_14_1_start, LOW);  //выключаем реле \"Пуск компрессора 14.1\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\", CHAT_ID);\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_14_2_start, HIGH); //включаем реле \"Пуск компрессора 14.2\"\n    delay(1500);                        //ждем 1,5сек\n    digitalWrite(BTN_14_2_start, LOW);  //выключаем реле \"Пуск компрессора 14.2\"\n    bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\", CHAT_ID);\n    delay(3000);                        //ждем 3сек\n    proverka();                         //выполняем функцию проверки (опрос состояния компрессором и городской сети)\n\n\t  if (!status_14_1 && status_14_2) bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n\t  if (status_14_1 && !status_14_2) bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n\t  if (status_14_1 && status_14_2) bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\n!!! ВНИМАНИЕ !!!\\n14.1 Выключен \\U0000274c в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Выключен \\U0000274c в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n    if (!status_14_1 && !status_14_2) bot.editMessage(lmsgidd, \"Начинаю Автоматический СБРОС после переключения электричества...\\nСБРОС Аварии ЛОС...\\nСБРОС Аварии Грубой очистки...\\nСБРОС Аварии Мелкой очистки...\\nСБРОС Аварии Приемной емкости...\\nСТАРТ 14.1...\\nСТАРТ 14.2...\\n\\nСТРАННО!\\n14.1 Включен \\U00002705 в \" + time_izm_14_1 + \" \" + date_izm_14_1 + \"\\n14.2 Включен \\U00002705 в \" + time_izm_14_2 + \"  \" + date_izm_14_2, CHAT_ID);\n    delay(1000);                        //ждем 1сек\n    bot.sendMessage(\"ГОТОВО\", CHAT_ID); //отправляем сообщение в чат\n}\nvoid margun (){                    //Функция мигания встроенным светодиодом для визуального определения работы программы(если светодиод не мигает программа гдето зависла) \n  if (workled <= 2767) {           //если значение переменной workled менее или равно 2767\n    digitalWrite(2, HIGH);         //включаем встроенный светодиод\n    workled++;                     //увеличиваем значение в переменной workled на единицу\n  }\n  if (workled > 2767) {            //если значение переменной workled более 2767\n    digitalWrite(2, LOW);          //выключаем встроенный светодиод\n    workled++;                     //увеличиваем значение в переменной workled на единицу\n  }\n}\n \n ",
    "tags": [
        "esp32",
        "esp8266",
        "c++",
        "telegram",
        "telegrambot",
        "telegram bot"
    ]
}
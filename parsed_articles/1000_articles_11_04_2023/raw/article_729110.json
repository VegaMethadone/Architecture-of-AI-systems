{
    "article_id": "729110",
    "article_name": "Полное руководство по конфигурационным файлам Linux. Часть 1",
    "content": "Конфигурационные файлы Linux одновременно и упрощают, и усложняют управление ОС. Параметры конфигурации легко менять, а также переносить на другие системы, но их документирование часто бывает утомительным. Мы собрали понятные объяснения и инструкции по редактированию конфигурационных файлов. Разумеется, в рамках одной статьи невозможно охватить всё, поэтому сосредоточимся на самых распространённых файлах для нескольких дистрибутивов Linux.\nНемного вводных\nКаждый дистрибутив Linux может использовать разные приложения и сервисы для выполнения одной и той же функции. Например, Red Hat и Ubuntu используют разные приложения для сетевых служб. Когда возможно и уместно, мы отмечаем это в статье. Но если вы встретите конфигурационный файл, о котором здесь не упоминалось, не бойтесь — он просто называется как-то по-другому для используемого вами дистрибутива.\nВ этом случае вам, возможно, придётся обратиться к документации дистрибутива, который настраиваете. Однако общая идея и процесс близки к тому, о чём говорится далее. \nИ прежде чем продолжить, упомянем кое-что важное. В примерах мы использовали редактор Nano. Вы можете использовать любой текстовый редактор командной строки, но перед редактированием конфигурационного файла мы настоятельно рекомендуем сначала создать его копию. При копировании добавьте расширение .bak в конец файла, чтобы позже вы могли идентифицировать, что это файл резервной копии.\ncp originalFile.conf orginalFile.conf.bak\nСуществует большая вероятность, что вы в конечном счёте совершите ошибку при редактировании. Поэтому резервные файлы важны. Итак, мы вас предупредили. А теперь погрузимся в удивительный мир конфигурационных файлов Linux.\nЧто такое конфигурационные файлы\nКонфигурационные файлы — это локальные файлы, которые управляют работой программы, утилиты или процесса. Они содержат настройки и инструкции для различных систем и приложений. Часто это текстовые файлы, которые содержат имя переменной (параметра), за которой следует её значение. Большинство конфигурационных файлов Linux можно открыть с помощью обычного текстового редактора и обновить напрямую. Но для редактирования таких файлов вы, скорее всего, будете использовать редактор командной строки, например, Nano или Vim.\nКонфигурационные файлы Linux используются для настройки параметров различных процессов операционной системы. Некоторые из этих файлов определяют доступ к сети и протоколы, в то время как другие инструктируют операционную систему о том, как получить доступ к серверам имён. Опытный администратор управляет Linux, редактируя конфигурационные файлы.\nВ разных дистрибутивах Linux используются не только разные конфигурационные файлы, но и соглашения об именах. Иногда конфигурационные файлы упоминаются только по имени, например «dhclient» или «nsswitch». А иногда на них можно ссылаться с расширением — с точкой или без нее, например, «dhclient.conf» или «nsswitch.conf».\nВ некоторых случаях на конфигурационные файлы можно ссылаться по расположению в каталоге, например, «/etc/dhclient.conf» или «/etc/nsswitch conf». Хотя соглашения об именах файлов могут немного измениться, как и их расположение в файловой системе, общая идея того, как редактировать отдельные конфигурационные файлы, остаётся прежней. Опытный администратор сможет применить советы из этой статьи к любому дистрибутиву Linux.\n«Администрирование Linux. Мега»\nКак редактировать конфигурационные файлы \nДля редактирования конфигурационного файла нужно только найти его и открыть с помощью текстового редактора. Подавляющее большинство конфигурационных файлов Linux хранят свои данные в виде обычного текста, и изменение их содержимого и сохранение — всё, что требуется для обновления настроек. Для этой работы подойдет множество текстовых редакторов, и обычно их выбор зависит от личных предпочтений. \nМногие конфигурационные файлы Linux можно найти в каталоге /etc/ или подкаталоге. Значительную часть времени они будут редактироваться через командную строку, поэтому осваивайтесь с такими приложениями, как Nano или Vi. Эти конфигурационные файлы обычно защищены от стандартных учётных записей пользователей, поэтому не забудьте изменить свои привилегии (можете использовать команду sudo или su). В противном случае могут возникнуть проблемы с поиском файлов.\nХотя настройки применяются сразу после сохранения отредактированного файла, приложения не будут воспринимать изменения до тех пор, пока вы не перезапустите приложение. \nКонфигурационный файл network-scripts\nКак и в Windows, в Linux есть конфигурационные файлы для каждого сетевого интерфейса. Они сообщают операционной системе сведения о названии интерфейса, следует ли использовать DHCP и должен ли быть включен IPv6. Здесь так стоит упомянуть, что сетевым интерфейсом может быть как виртуальное, так и физическое устройство, как проводное, так и беспроводное \nКонфигурационный файл network-scripts — это файл, который управляет сетевым интерфейсом. Параметры конфигурации для данного устройства или виртуального интерфейса сохраняются и редактируются в конфигурационном файле, уникальном для каждого интерфейса в каталоге network-scripts.\nКак настроить конфигурационный файл network-scripts\nСуществует два способа редактирования:\nграфическая среда;\nкомандная строка. \nИ REHL (и CentOS), и Ubuntu содержат графические утилиты для редактирования конфигурационных файлов. Эти графические утилиты доступны по-разному в зависимости от того, какой графический интерфейс вы используете.\nКак правило, настройки можно найти в разделе «Сеть» или «Утилиты». В параметрах сети будут перечислены все интерфейсы, доступные в системе. При редактировании этих сетевых интерфейсов вы получите доступ к большинству настроек, упомянутых выше.\nДругой способ редактирования — через текстовый редактор в командной строке. В этом случае вы используете приложение, например, Nano или Vi, чтобы открыть каждый файл и отредактировать его. В REHL все конфигурационные файлы указываются как отдельные файлы. В Ubuntu они находятся в одном файле по пути /etc/network/ file system.\nВажно упомянуть, что для редактирования этих файлов вам потребуются повышенные привилегии. Если вы используете графический интерфейс, нужно ввести пароль root. Если командную строку — команду sudo.\nOption\nValue\nExplanation\nTYPE\nDevice Type (Eg. Ethernet)\nЧто это за сетевой интерфейс\nBOOTPROTO\nNone, bootp, dhcp\nИспользует ли этот интерфейс протокол bootp или dhcp\nDEFROUTE\nYes, no\nУстановлен ли этот интерфейс в качестве маршрута по умолчанию\nIPV6_DEFROUTE\nYes, no\nУстановлен ли этот интерфейс в качестве маршрута по умолчанию для IPv6\nIPV6INIT\nYes, no\nВключен ли IPv6\nIPV4_FAILURE_FATAL\nYes, no\nОтключен ли этот интерфейс при сбое IPv4\nIPV6_FAILURE_FATAL\nYes, no\nОтключен ли этот интерфейс при сбое IPv6\nONBOOT\nYes, no\nВключен ли этот интерфейс при загрузке\nHWADDR\nMAC address\nMAC-адрес интерфейса\nIPADDRN\nIpv4 address\nIPv4-адрес устройства\nPREFIXN\nN\nДлина значения сетевой маски IPv4\nGATEWAYN\nIPv4 address\nАдрес шлюза для интерфейса\nDNSN\nIPv4 address\nDNS-адрес для интерфейса\nDOMAIN\nDNS search domain\nДомен поиска DNS по адресу\nГде находится конфигурационный файл network-scripts\nКаждый сетевой интерфейс имеет собственный конфигурационный файл. Местоположение файла зависит от того, какую версию Linux вы используете.\nRedhat Enterprise Linux (REHL): /etc/sysconfig/network-scripts/\nДистрибутивы Linux на основе Ubuntu/Debian: /etc/network/interfaces.\nПример конфигурационного файла network-scripts\nПрежде чем редактировать конфигурационный файл network-scripts, нужно узнать, какие сетевые интерфейсы активны в данный момент и каковы их текущие конфигурации (IP-адрес, информация DNS и др.). Для этого введите команду ifconfig в командной строке.\neth0:  flags=4163&lt;UP, BROADCAST, RUNNING, MULTICAST&gt;    mtu 1500\n        inet  192.168.1.3  netmask  255.255.255.0  broadcast  192.168.1.255\n        inet6  fe80: :215:5dff:fe01:4303  prefixlen  64   scopeid  0x20&lt;link&gt;\n        inet6 2601:985:281:2b60:215:5dff:fe01:4303  prefixlen  64  scopeid  0x0&lt;global&gt;\n        ether  00:15:5d:01:43:03   tx        queuelen  1000   (Ethernet)\n        RX packets 1920033  bytes  404804795  (404.8 MB)\n        RX errors 0    dropped 198   overruns 0    frame 0\n        TX packets 855570   bytes  366074892  (366.0 MB)\n        TX errors 0    dropped 0    overruns 0    carrier 0    collisions 0\nlo:  flags=73&lt;UP, LOOPBACK, RUNNING&gt;     mtu  65536\n        inet 127.0.0.1   netmask  255.0.0.0\n        inet6  : :1  prefixlen 128  scopeid  0x10&lt;host&gt;\nloop   txqueuelen  1000   (Local Loopback)\nRX packets 82302    bytes   7837655  (7.8  MB)\nRX errors 0     dropped 0     overruns 0     frame 0\nTX packets 82302    bytes   78376555  (7.8 MB)\nTX errors 0   dropped 0   overruns 0     frame 0    collisions 0\nПримечание: команда ifconfig мало где осталась. Вместо неё используется утилита ip.\nNetwork Config Files в Oracle Linux\nБольшинство дистрибутивов Linux позволяют настраивать сетевые интерфейсы через GUI. Но иногда использование графического интерфейса для настройки ОС невозможно. Это особенно распространено в серверных и облачных средах. И дистрибутив Oracle Linux как раз используется и для серверных, и для облачных приложений. Как настроить сетевую карту в Oracle Linux без графического интерфейса? Через редактирование конфигурационных файлов сети (Network Config Files). \nВ Oracle Linux конфигурационный файл сети — это место, где хранятся и редактируются общие сетевые настройки. Важно отметить, что конфигурационный файл сети отличается от конфигурационных файлов отдельных сетевых интерфейсов. Общие сетевые настройки (например, информация о шлюзе) хранятся в конфигурационном файле сети. Другие настройки (например, статические IP-адреса) хранятся в конфигурационных файлах для каждого сетевого интерфейса отдельно.\nДля настройки сетевой среды Oracle Linux в основном использует:\n/etc/sysconfig/network\n/etc/sysconfig/network-scripts/…\nКаталог /etc/sysconfig/network-scripts/ содержит несколько файлов для каждого сетевого интерфейса. Сетевой интерфейс может быть физической или виртуальной сетевой картой, и эти файлы содержат информацию о конфигурации для каждой сетевой карты. А так называемый файл конфигурации сети (/etc/sysconfig/network) содержит настройки сетевого стека для самой системы.\nКонфигурационный файл конфигурации в Oracle Linux (находится в /etc/sysconfig/network) обычно содержит такую информацию: Networking, Hostname, Gateway. Параметр NETWORKING сообщает ОС Linux, включена ли сеть в системе. Он настраивается с логическим значением (yes, no). «Hostname» — это имя хоста Linux-машины. Наконец, «Gateway» сообщает системе шлюз, который следует использовать для этой машины.\nТипичный конфигурационный файл сети может выглядеть так:\nNETWORKING=yes\nHOSTNAME=iAmAWebServer.localdomain\nGATEWAY=192.168.1.1\nДругая информация, например статические IP-адреса, назначается сетевым интерфейсом. Конфигурационные файлы для каждого сетевого интерфейса хранятся в каталоге /etc/sysconfig/network-scripts/. Если бы ваш сетевой интерфейс назывался eth0, в этом каталоге был бы конфигурационный файл с именем «ifcfg-eth0».\nПример конфигурационного файла сети для Oracle Linux\nХотя подробное описание конфигурационных файлов для сетевых интерфейсов выходит за рамки этой статьи, кратко рассмотрим, как может выглядеть типичный файл. Это поможет понять разницу между параметрами конфигурации для сетевого файла и параметрами конфигурации для сетевых интерфейсов:\nDEVICE=eth0\nNM_CONTROLLED=yes\nONBOOT=yes\nTYPE=Ethernet\nBOOTPROTO=none\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=yes\nIPV6INIT=no\nNAME=”System eth0″\nUUID=5fb06bd0-0bb0-7ffb-45f1-d6edd65f3000\nHWADDR=52:54:00:91:6a:C4\nPEERROUTES=yes\nIPADDR=192.168.1.5\nNETMASK=255.255.255.0\nGATEWAY=192.168.1.1\nDNS1=192.168.1.1\nUSERCTL=no\nХотя приведенная конфигурация включает несколько настроек, обратите внимание, что мы назначаем статический IP-адрес сетевому интерфейсу. Если хотите, чтобы сетевой интерфейс использовал DHCP — просто удалите последние пять строк конфигурации.\nПочему у серверных и облачных версий Linux нет графического интерфейса\nОдна из лучших сторон использования Linux в качестве серверной ОС заключается в том, что вам нужно установить только то, что вам нужно для использования. Это значит, что если вам нужен веб-сервер, вам нужно всего лишь установить Apache или Nginx без множества других сервисов и функций. Это включает в себя графические интерфейсы — например, Gnome или KDE.\nОбычно графический интерфейс в Linux не из-за дополнительных ресурсов — использование того же Gnome или KDE может легко удвоить требования к памяти для виртуальной машины и привести к дополнительным нагрузкам на процессор.\nПри использовании Linux в качестве сервера удобнее выполнять настройки и операции в командной строке.\nInterfaces Config File в Debian\nПопулярность Debian обусловлена стабильностью, именно поэтому дистрибутив часто выбирают в качестве серверной операционной системы. Однако настройка сетевых служб в Debian отличается от настройки в большинстве дистрибутивов Linux. \nВ Debian конфигурационный файл интерфейсов (Interfaces Config File) — это способ, с помощью которого администратор может убедиться, что все интерфейсы настроены правильно и работают корректно. \nКонфигурационный файл интерфейсов также известен как etc/network/interfaces.conf или interfaces conf. Он содержит информацию о конфигурации для различных сетевых интерфейсов на компьютере.\nDebian поддерживает конфигурационные файлы для сетевых интерфейсов, установленных на компьютере. Этими сетевыми интерфейсами могут быть виртуальные устройства, беспроводные устройства или проводные сетевые адаптеры. В отличие от других дистрибутивов Linux, в Debian все данные о конфигурации сетевого интерфейса хранятся в одном файле. \nГде находится конфигурационный файл интерфейсов в Debian\nНа конфигурационный файл интерфейсов часто ссылаются по расположению в каталоге: /etc/network. Перейдите в /etc/network/interfaces, чтобы увидеть, где происходит «\nсетевое волшебство\n».\nЗдесь не так много файлов: сетевой каталог содержит параметры конфигурации сети, а также приложения для управления этими сетевыми конфигурациями. В нём есть только один конфигурационный файл и пара приложений. Это немного, но все, что вам нужно для настройки сетевых интерфейсов в Debian, находится в каталоге /etc/network/interfaces.\nКогда и зачем настраивать конфигурационный файл интерфейсов в Debian\nЕсли нужно вручную изменить поведение сетевого интерфейса или узнать, какие протоколы на нём выполняются или активен ли он вообще, можете сделать это и многое другое с помощью Interfaces Config File.\nНастройка сетевых интерфейсов в Debian обычно проще, чем в других дистрибутивах Linux. Вот пример настройки Interfaces Config File:\nauto eth0\nallow-hotplug eth1\niface eth0 inet dhcp\niface eth0 inet6 auto\niface eth1 inet static\n        address 192.168.1.2/24\n        gateway 192.168.1.1\niface eth1 inet6 static\n        address fec0:0:0:1::2/64\n        gateway fec0:0:0:1::1\nФайл содержит конфигурацию для каждого сетевого интерфейса на компьютере. В данном случае их два: eth0 и eth1. Если говорить очень широко, вот что делает эта конфигурация:\nEth0 настроен на автоматическое включение при запуске Debian. У него есть DHCP-адрес.\nДля Eth1 разрешен Hot Plug. Он имеет статический адрес IPv4 и IPv6.\nКонфигурационный файл Dhclient\nКонфигурационный файл dhclient делает возможным расширение и настройку DHCP в Linux. Протокол динамической настройки хоста, или DHCP, — один из лучших инструментов, к которым имеют доступ администраторы. Без него приходилось бы тратить кучу времени на ручную настройку IP-адресов для подключенных к сети устройств.\nКонфигурационный файл dhclient в Linux также известен как dhclient.conf или etc/dhclient conf. Dhclient conf используется для настройки и редактирования параметров протокола динамической настройки хоста (DHCP) в сети Linux. Когда устройство подключается к сети через физическое проводное соединение или через Wi-Fi, оно начинает транслировать сигнал в сеть в поисках DHCP-сервера. \nКак только клиентское устройство и DHCP-сервер находят друг друга, клиентское устройство отправляет запрос на получение IP-адреса. DHCP-сервер выдаёт IP-адрес и указывает срок действия этого IP-адреса.\nКонечно, в исполнении это сложнее и включает в себя больше шагов. DHCP-сервер требует, чтобы клиент соответствовал определённым критериям, прежде чем он выдаст IP-адрес. Аналогично, у клиента есть требования, которым должен соответствовать DHCP-сервер. dhclient.conf — конфигурационный файл, в котором содержатся эти требования.\ndhclient.conf содержит данные о:\nвремени, которое требуется для ответа DHCP-сервера;\nвремени ожидания клиента, прежде чем он снова начнет отправлять DHCP-запросы.\nЧто такое DHCP\nDHCP расшифровывается как протокол динамической настройки хоста. Это система, в которой клиенты запрашивают IP-адрес и получают его. В большинстве бизнес-сетей клиентским устройствам необходим IP-адрес для правильной связи с сетью. Каждое устройство должно иметь собственный IP-адрес. В противном случае, когда данные будут передаваться по сети с устройства, сеть не будет знать, на какое устройство отправлять эти данные. Если два устройства используют один и тот же IP-адрес, вы можете столкнуться с проблемами.\nОдин из способов справиться с этим — назначить статический IP-адрес каждому устройству. Администратору нужно вручную присвоить каждому устройству уникальный IP-адрес, который никогда не меняется. Это подходит для серверов, где IP-адрес должен быть постоянно предсказуемым. Другие устройства (например, ноутбуки или смартфоны) не обязательно должны быть предсказуемыми. Кроме того, вручную назначать IP-адреса каждому из них было бы непросто.\nВот почему нужен DHCP. DHCP автоматически отслеживает IP-адреса устройств и выдаёт их при подключении к сети. При использовании DHCP-сервера управление IP-адресами превращается в автоматический процесс, который не требует участия администраторов.\nГде находится конфигурационный файл dhclient\nЧтобы отредактировать файл dhclient.conf, сначала найдите его в файловой системе. Чаще всего dhclient.conf находится в каталоге /etc или /etc/DHCP. Редактирование файла требует повышенных привилегий, поэтому не забудьте ввести команду su или sudo, прежде чем открывать его.\nКак настроить конфигурационный файл dhclient\nЧтобы настроить конфигурационный файл dhclient, нужно выбрать из списка команд и настроек, конкретные конфигурации которых вы можете установить. Файл dhclient.conf обычно редактируют только в том случае, если нужны дополнительные настройки или требуется увеличить или уменьшить время ожидания при обмене данными с DHCP-сервером.\nНастройки\nОбъяснение\nRetry\nКак долго DHCP-клиент ожидает повторной попытки выполнения DHCP-запроса. Это значение является целым числом в секундах.\nSelect-timeout\nВ некоторых случаях в сетях может быть несколько DHCP-серверов. Одни серверы могут быть предпочтительнее других. Этот параметр определяет, как долго DHCP-клиент ожидает ответа DHCP-сервера о времени аренды. Это значение является целым числом в секундах.\nReboot\nПараметр указывает DHCP-клиенту, как долго следует ждать запроса адреса после перезагрузки клиента. Это значение является целым числом в секундах.\nBackoff-cutoff\nПараметр сообщает DHCP-клиенту, как долго следует ждать времени отключения. Это полезно в среде, где множество устройств могут одновременно отправлять запросы DHCP. Значение является целым числом в секундах.\nInitial-interval\nПараметр сообщает клиенту, сколько времени следует ждать перед отправкой другого запроса, если он не получит ответа DHCP. Это именно время ожидания перед отправкой запроса, а не то, как долго нужно прослушивать ответ. Значение является целым числом в секундах.\nКогда нужно настраивать конфигурационный файл dhclient\nБольшую часть времени настраивать файл dhclient.conf не придётся. Дистрибутивы вроде Red Hat или Ubuntu хорошо справляются с этим за вас. Но иногда настройка файла dhclient.conf всё же нужна, чтобы сократить время подключения к сети.\nПример настройки dhclient conf:\noption rfc3442-classless-static-routes code 121 = array of unsigned integer 8;\nsend host-name = gethostname();\nrequest subnet-mask, broadcast-address, time-offset, routers,\n        domain-name, domain-name-servers, domain-search, host-name,\n        dhcp6.name-servers, dhcp.domain-search, dhcp6.fqdn, dhcp6.sntp-servers\n        netbios-name-servers, netbios-scope, interface-mtu,\n        rfc3442-classless-static-routes, ntp-servers;\n#send dhcp-client-identifier 1:0:a0:24:ab:fb:9c;\n#send dhcp-lease-time 3600;\n#supersede domain-name \"fugue.com home.vix.com\";\n#prepend domain-name-servers 127.0.0.1;\n#require subnet-mask, domain-name-servers;\ntimeout 300;\n#retry 60:\n#reboot 10;\n#select-timeout 5;\n#initial-interval 2;\n#script \"/sbin/dhclient-script\";\n#media \"-link0 -link1 -link2\", \"link0 link1\";\n#reject 192.33.137.209;\n#alias {\n#        interface \"eth0\";\n#        fixed-address 192.5.5.213;\n#        option subnet-mask 255.255.255.255;\n#}\n#lease {\n#  interface \"eth0\";\n#  fixed-address 192.33.137.200;\n#  medium \"link0 link1\";\n#  option host-name \"andar.swiftmedia.com\";\n#  option subnet-mask 255.255.255.0;\n#  option broadcast-address 192.33.137.255;\n#  option routers 192.33.137.250;\n#  option domain-name-servers 127.0.0.1;\n#  renew 2 2000/1/12 00:00:01;\n#  rebind 2 2000/1/12 00:00:01;\n#  expire 2 2000/1/12 00:00:01;\n#}\nОбратите внимание на хэштег перед каждой строкой. Это считается комментариями. Любая строка в файле dhclient.conf, которой предшествует хэштег, будет игнорироваться Linux (точнее, программным обеспечением DHCP).\nЧасто тайм-аут — это параметр, который необходимо изменить большинству администраторов Linux. Этот параметр определяет, как долго клиентское устройство ожидает ответов.\nЗаключение \nМы рассмотрели четыре конфигурационных файла, которые встречаются особенно часто. И совсем скоро вернёмся с разбором ещё пяти.\n«Администрирование Linux. Мега»\n \n ",
    "tags": [
        "linux",
        "linux kernel",
        "linux для всех",
        "конфигурационные файлы",
        "конфиги"
    ]
}
{
    "article_id": "722426",
    "article_name": "Postgresso 3 за 2023 (52)",
    "content": "Конференции\nПриходите на PGConf.Russia 2023!\nНа Хабре появился этот анонс конференции (пройдёт 3-4 апреля) с описанием докладов, которые там будут, а на сайте конференции появилась сама \nпрограмма\n конференции. Трудно выбрать, что протранслировать сюда. Пожалуй, пусть здесь будет 1:1 блок, посвящённый миграции:\nО ней послушаем \nМаксима Афиногенова\n,\n Дмитрия Умникова\n (Axenix), \nВасилия Пучкова\n (Лукойл-Технологии), \nАнтона Немцева\n (Нетрика),\n \nВладимира Сердюка\n (SoftPoint) и \nАльфреда Столярова\n (EvApps). \nЕлена Скворцова\n (ИТ-Экспертиза) расскажет о \nмиграции 1С\n. \nМаксим Емелин\n из Postgres Professional расскажет о \nприменении Debezium\n. \nАлександр Любушкин и Андрей Чибук\n (Форс Телеком) поделятся своим опытом \nпереноса больших объемов данных\n и представят разработанную для этого утилиту.\n Игорь Мельников\n представит новинку Postgres Pro - \nпакеты, почти как в Oracle\n.\nОфлайн-иностранец будет один: \nКристофер Треверс\n (Christopher Travers), которым многим по обе стороны Атлантики стал известен после лихой статьи \nWhich is worse when working on production databases? Being drunk or tired?\n о которой мы писали в \nпрошлом номере\n. На этой конференции он поговорит на сугубо технологические темы - сразу 2 доклада: \nPGConf.Russia 2023 - Crazy things you can do with PostgreSQL Indexes\n и \nPostgreSQL vs Redis: Making the Right Choice\n. Онлайновый ино-участник тоже один: \nБрюс Момджян\n, который представит свой доклад \nBeyond Joins and Indexes \nоб исполнителе запросов PostgreSQL (онлайн). \nUPD\n: будет ещё один иностранный онлайн-участник - это \nВигнешваран Си\n (Vigneshwaran C, Fujitsu), о его докладе есть ниже в разделе \nРепликация и бэкап\n.\nЕщё некоторые доклады: \nО некоторых интересных исторических уязвимостей Postgres\n сделает доклад \nАндрей Бородин\n из Яндекс.Облако, \nИван Фролков\n (Postgres Professional) на этот раз расскажет \nоб использовании UUID\n различных версий в качестве первичных ключей и о том, что нового в Postgres по этой части, а \nАндрей Рудомётов\n (тоже Postgres Professional) передаст \nПривет от встроенного мультимастера! (Сравнение двунаправленной репликации в ваниле и Postgres Pro Multimaster)\n.\nОт отдела образования Postgres Professional будут 2 доклада: \nПавел Толмачёв:\n \nПознакомимся с GEQO за 20 минут\n - о том, как работает генетический оптимизатор запросов в PotstgreSQL, и \nPostgreSQL 16: На финишной прямой\n - традиционный обзор новинок \nПавла Лузанова, \nкоторый на этот раз будет открывать конференцию.\nБудет, разумеется, и астрономический доклад - \nЭкстремальная астрономия\n \nВладимира Липунова.\nPGDay Belgium 2023\nПройдёт 12-го мая в Хаасроде, недалеко от Брюсселя. Приём докладов закончен, а регистрация \nпродолжается\n. Докладчики ещё не объявлены.\nPGConf.de 2023\n \nи\n \nSwiss PGDay 2023\nНемецкий PGConf пройдёт в Эссене 27-го июля. \nПродолжается\n регистрация. Интересный вид рекламы: организаторы говорят: заодно потом сможете съездить на \nSwiss PGDay 2023\n на той же неделе - 29-30-го. Там можно подавать \nзаявки на доклады\n до 17-го апреля, а на \nпостеры\n, рядом с которыми можно вести пояснительную работу - до 15-го мая.\nРаз уж зашла речь о Крисе Треверсе, офлайновом иностранном участнике конференции PGDay.Russia, то вот интервью с ним в еженедельнике \nПерсоны Недели\n Андреаса Шербаума :\nChris Travers | PostgreSQL Person of the Week\nНекоторые фрагменты:\n- Откуда вы родом?\n- Из США, пожалуй. Когда я был подростком, много мотался по Калифорнии, Мичигану, Юте, по Вашингтону (штату). В 2010-м я уехал за границу и с тех пор не возвращался. Жил в Индонезии, Швеции, Германии. Сейчас опять в Индонезии.\n- Какими СУБД вы пользуетесь?\n-  Их много: MySQL, HBase, MongoDB, Redis, CouchDB, SQLite, Firebird, Neo4J  и другие. PostgreSQL - моя любимая, но есть за что ценить и другие. Я считаю, что SQLite сильно недооценили. Пожалуй, по расширяемости софта управления базой это единственная СУБД, сравнимая в этом с PostgreSQL. Если вам нужна база, встроенная в ваше приложение, я, ни секунды не сомневаясь, посоветую SQLite.\nКрис там говорит о том, что более известен статьями и докладами \nо человеческом факторе\n, но и о высоконагруженных системах ему есть что сказать - взять хотя бы доклад  \nPostgreSQL at 20TB And Beyond\n на FOSDEM 4 года назад. Вообще-то, там он говорит даже не о 20, а о 400ТБ данных, которые можно использовать для аналитики почти в реальном времени. Этот доклад относится к периоду его работы в берлинской Adjust, о которой мы немного знаем по рассказам работающих там бывших коллег - \nАртура Закирова\n, например. В Adjust Крис возглавлял команду постгресистов. Сейчас работает в Timescale.\nКрис говорит примечательную вещь: для постгрессиста важно уметь учиться [ну, это понятно - прим. редакции] и желание/способность \nдумать, когда нужно, в духе формальной математической теории и логики. РСУБД реализуют математические модели, и SQL не лучший пример реализации такой математики. Если мы понимаем математику, лежащую под этим, мы сможем избежать многих ненужных проблем.\n \nЧто до соцсетей, то Крис предпосылает этим трём богатырям чёткое разделение труда:\nlinkedin - продуктивное общение по PostgreSQL,\nFacebook - фото,\nYoutube - там он делится своими собственными кулинарным шоу: кухня Западной Суматры, литовская кухня, итальянская. Планируются Ява и Бали, немецкая кухня. \nНу и заодно, пусть будет здесь статья Криса: \nInvoking (Your Own) Perl from PL/Perl\n.\nPostgres Pro Enterprise 15.2.1\nОтличия новой версии у Enterprise всегда двух видов: некоторые наследуют изменениям соответствующей версии PosstgreSQL (в данном случае 15.2 по сравнению с 15.1), а некоторые изменения суть отличия от предыдущей версии самого Enterprise (то есть 15.1.1). Об этом не надо забывать. \nВ PostgreSQL 15.2 закрыли дыру в безопасности \nCVE-2022-41862: Client memory disclosure when connecting, with Kerberos, to modified server.\n Она, соответственно, закрыта и в Enterprise 15.2.1. Об этом непосредственно не сказано в отличиях версии \nPostgres Pro Enterprise 15.2.1\n, но там говорится, что \nвсе изменения, унаследованные от PostgreSQL 15.2, описаны в\n \nЗамечаниях к выпуску PostgreSQL 15.2\n. И там эта устранённая проблема сформулирована чуть более технологично, чем на \npostgresql.org\n: \nУстранение утечки содержимого памяти после сбоя инициализации шифрования трафика GSSAPI в библиотеке libpq.\nПо части собственно Enterprise есть новое:\nдобавлен параметр \nenable_large_mem_buffers\n, позволяющий копировать и выгружать значения типов \nbytea\n и \ntext\n большого размера;\nулучшена производительность, ранее страдавшая из-за многочисленных сбросов кеша;\nустранена ошибка сегментации, которая могла возникать в PL/pgSQL при попытке удалить отдельное поле составного типа после завершения \nавтономной транзакции\n;\nисправлена проблема, связанная со значительным потреблением памяти при оптимизации запроса, содержащего большое количество подзапросов \nUNION ALL\n.\n Кроме того, входящие в Enterprise модули и утилиты обновились до:\naqo 1.6\n,\npg_probackup 2.6.1 Enterprise\n,\nPTRACK 2.4.1\n,\npgpro_scheduler 2.9\n,\npgpro_stats 1.5\n,\n(PWR) pgpro_pwr 4.1.2\n.\nэто были разработки Postgres Professional, а кроме этого ещё и\npgbouncer 1.18\n и\nPLV8 3.1.5\n.\nАнонимы и фейкеры\nЗа классом программ, подменяющих данные при анонимизации, закрепилось словечко \nfaker\n. Я не борец за чистоту русского языка, хотя меня иногда утомляют хейтеры, газлайтингеры и пр. Но вот фейкер - этого слова точно не хватает в современном русском. Ладно, к делу.\nПоявился анонимизатор \npg-anonymizer\n. \nОн экспортирует базу, анонимизируя данные. То есть это статическая анонимизация. Задача у создателя - \nРафаэля Юшэ\n (Raphaël Huchet aka rap2hpoutre) - была сделать простенький, легко инсталируемый инструмент, а не конкурировать в функциональности с существующими. Последняя версия - \n0.7.0\n. Сейчас этот анонимизатор умеет:\nвыбирать столбцы для анонимизации (можно задать список);\nфункцию-фейкер можно выбирать;\nможно пропускать указанные таблицы;\nNULL можно не анонимизировать;\nможно менять локали, которые использует фейкер;\nможно импортировать анонимизированный SQL-файл через psql.\nВ конце этой странички есть любопытное замечание: раздел Why - чего ради затеяли ещё один анонимайзер. Потому, что существующие не понравились по разным причинам:\nPostgreSQL Anonymizer\n - его \nтрудно настраивать\n, да и вообще он неуклюжий для нехитрых задач - считает Рафаэль, - но всё же это лучшее решение из существующих.\npganonymize\n не работает со схемой данных, отличной от public, а также со столбцами с названиями, в которых есть символы верхнего регистра.\npgantomizer\n валится в простых ситуациях, да ещё и не сообщая об ошибке.\nПро первый мы писали в выпуске \nPostgresso 2\n, когда рассказывали о недавно появившемся в \nPostgres Pro Enterprise 15\n своём \npgpro_anonymizer\n с похожим богатым набором функций. Второй - почти тёзка \npg_anonymize\n \nЖюльена Руо\n (Julien Rouhaud), но он ещё в бета-фазе.\nPostgreSQL Faker\nРасширение Postgres, основанное на \nPython Faker Library\n. Опять французского происхождения (Dalibo). Им пользуется \nМ.Грамин\n в статье ниже.\nAI + PG\nНачалось недавно, сейчас таких статей много, а будет их лавина. Делятся они грубо на 2 категории: в одних AI сочиняет SQL для запросов, в других PostgreSQL интегрирован в инфраструктуру AI. \nCreating a SQL generator app with ChatGPT, PostgreSQL, and ToolJet\nТейджа Куммарикунтла\n (\nTeja Kummarikuntla\n) работает в \nToolJet\n и в статье заодно хотел показать, как этот ToolJet хорош и удобен. Но задействует он и ещё одну сущность - \nElephantSQL\n - PostgreSQL-as-a-Service в облаке. Общение с ChatGPT (GPT-3.5 Turbo) происходит через  Rest API, который есть в этом ToolJet, запросы к SQL-Слону тоже посылаются через ToolJet.\nТейджа создаёт простенькую табличку с именем и возрастом. С запросами \nПокажи мне всех в этой таблице\n и \nПокажи мне тех, чьё имя начинается на D \nэта штука справляется.\nА если делить не грубо, то первую задачу - помощь в кодировании - можно развернуть, как в статье \nHow to Use ChatGPT to Write SQL JOIN Queries\n \nХелены Александер\n (Helena Alexander, dbForge) на целый список задач:\nSQL для DML и DDL;\nпомочь дебажить запросы, дать советы по исправлению ошибок и оптимизации, определение потенциальных проблем кода;\nпомочь информацией по синтаксису, ключевым словам и функциям;\nпревращать результаты запросов в отчёты на человеческих языках.\nВ статье, вообще-то, не PG, а MySQL, к которому подключаются, как можно догадаться, по dbForge, но не это главное. Хелена обращается к GPT (3) с подобающей вежливостью (\nне могли бы вы составить <такой-то> запрос\n), и сеть охотно (иногда начиная фразу с \nконечно\n) выдаёт запросы, реализующие виды джойнов \nINNER JOIN\n, \nLEFT JOIN\n, \nRIGHT JOIN\n, \nCROSS JOIN\n, \nFULL OUTER JOIN\n и \nSELF JOIN\n.\nКстати, поиск по теме даже находит расширение для Хрома - \ngpt2pg\n, авторства, видимо, \nРауфа Чебри\n (Rauf Chebri). Он из Неона. Там происходит какая-то деятельность в этом направлении, ещё не оформившаяся в громкие анонсы и релизы. Есть, например, расширение PostgreSQL \npg_gpt\n, которое может конвертировать вопросы на человеческом языке в SQL, а также пояснять сгенерированный SQL. И есть \nask-neon\n - приложение, которое можно спрашивать по поводу PostgreSQL и Neon. Использует \npgvector\n \nЭндрю Кейна\n (о нём мы писали \nв прошлом выпуске\n), автор - \nПрабин Ахария\n (Prabin Acharya aka \npra6in\n), но следы тянутся тоже к Неону и его сооснователю \nСтасу Кельвичу\n.\nИ вот статья Рауфа на 11 минут чтения:\nBuilding an AI-Powered ChatBot using Vercel, OpenAI, and Postgres\nВ статье есть диаграммы последовательности обмена сообщениями, много иллюстраций, код. Используются Edge Functions (отсюда \nVercel\n в названии статьи), которые \nбыстрее\n, чем бессерверные. Модель -  text-davinci-003, способная принять 4096 токенов. Чтобы всё заработало, нужно:\nполучить вопрос (на человеческом языке) на входе;\nгенерировать эмбединги для вопроса при помощи OpenAI API;\nвычислить дистанции между эмбедингами и вернуть контекст (пояснения в статье);\nгенерировать ответ, используя методы дописывания OpenAI.\npg_tiktoken: Postgres Extension for Fast BPE Tokenization\nЭто уже статья Стаса. BPE это эффективный алгоритм токенизации с кодированием пар байтов (\nByte Pair Encoding\n). \npg_tiktoken - \nобёртка вокруг \nтокенайзера OpenAI\n, известного своим быстродействием при работе с естественно-языковыми задачами.\nИтого: коллектив молодых и талантливых, кажется, серьёзно инвестирует усилия в это направление.\nГенерация данных — творчество или рутина?\nМаксим Грамин\n написал дважды интересную статью: генерация текстовых данных и сама по себе тема интересная. Но он ещё и нагенерил их для разминки с помощью ChatGPT.\nВ ней он даже слегка пофилософствовал: \nДолгие годы люди стремились к всё более реалистичному изображению  окружающих их вещей. Много лет прошло от симпатичных наскальных мамонтов  до шедевров эпохи Ренессанса и Просвещения. Однако где‑то в 19-м веке  (примерно, когда стала появляться первая фототехника, ага), что‑то пошло  не так, и живопись сменила своё направление от реализма к абстракции.  Дальше больше; и все «скатилось» до клякс, пятен и потёков, размазанных  по холсту или любой другой поверхности стоимостью в миллионы долларов...  И при этом зачастую совершенно было непонятно, кто автор «шедевра»: 3-х  летний ребенок, маститый художник, нейросеть или кот, опрокинувший  банку варенья.\n  \nВ статье Максим решил доверить генерацию данных всё же не коту, а нейросети. И, хотя, на мой вкус, эта аналогия (назовём её для красоты аллегорией) неточна (генерация нужна именно что \nстохастически реалистичная\n - мамонты и человеки, просто не похожие на конкретных мамонтов и конкретных человеков), я лично приветствую такие лирические отступления. Но ближе к делу:\nМаксим берёт учебную схему Pagila (о парочке Pagila/Sakila мы рассказывали, например, \nздесь\n) и бесхитростно просит GPT сгенерировать SQL-скрипт для случайных данных в схеме Pagila. С этим заданием сеть, в общем, справляется, но Максим хочет большего. Поэтому, как ни странно, оставляет GPT в покое и дальше генерит скрипты сам, используя характерные конструкции с\ngenerate_series и md5(random()::text).\nНо сам себе \nне верит\n и пробует декартово произведение реальных имён на реальные фамилии, воспользовавшись \nвот этим\n.\nДальше он рассказывает о различных фейкерах (то есть можно было поместить эту статью в предыдущий раздел, но уж ладно) и ссылается на фейкеры для \nJava\n, \nPython\n, \nJS\n, \nRuby\n. Всю статью пересказываеть не будем. Кстати, Максим - автор \nMalewicz\n (Postgres-клиент, я не пробовал, но за одно название можно многие недостатки - если есть - простить), поддерживает страницу \nAwesome DB Tools\n. \nРепликация и бэкап\nInside logical replication in PostgreSQL: How it works\nВигнешаваран Си\n (Vigneshwaran C, Fujitsu) сетует, что его читатели не все присутствовали на его триумфе - докладе на PGConf India 2023, где была толпа народу, а сам доклад попал в 27 отбранных из 120 заявленных. И восполняет, пересказывая. Для первого знакомства действительно полезная статья: она удачно организована, наглядна. Вот её краткое (она и сама вполне краткая) содержание: \n1. \nВступление\n 2. \nПрименения (use cases)\n 3. \nАрхитектура\n 4. \nПубликации\n 5. \nПодписки\n 6. \nПроцессы\n 7. \nИнкрементальная репликация\n 8. \nОбработка падения apply worker\n 9. \nИзменения в подписке (Altering a subscription)\n 10. \nКак работает synchronous_commit\n 11. \nСлот репликации\n 12. \nФильтры строк\n 13. \nСписок столбцов\n 14. \nПреимущества фильтров строк и списков столбцов\n 15. \nTABLES IN SCHEMA\n 16. \nЧто читать дальше\n.\nUPD: стало известно, что онлайн-доклад будет и на PGConf.Russia 2023. Он здесь называется \nLogical replication internals\n.\nIntroduction to Postgres Backups\nФилип Хёрст\n (Philip Hurst)  и \nЭлизабет Кристенсен\n (Elizabeth Christensen) из Crunchy Data не врут: это действительно интро, самые первые шаги в изучении темы. Кроме pg_dump/pg_restore, base_backup и (конечно) pgBackRest, упоминаются WAL-E и WAL-G - в довольно неожиданном конетексте. Оказываетя, в Crunchy Data при создании Crunchy Bridge рассматривали оба варианта: WAL-G и pgBackRest: были сотрудники, поддерживавшие WAL-G, были и поддерживавшие pgBackRest. А свои изюминки есть у обоих решений. Но в конце концов выбрали pgBackRest.\nThe Tale of the 11TB Write Ahead Log\nПод статьёй в \nблоге\n Adjust подписались трое - \nАртур Закиров\n (Artur Zakirov), \nИхорь Сироштан\n (Ihor Siroshtan) и \nАндреас Шербаум\n (Andreas Scherbaum, теперь он глава департамента баз данных в Adjust). Они были подняты по тревоге: 80% NVMe-диска в 47ТБ забито, по расчётам осталось 30 часов. Пришлось отложить субботние дела и разбираться.\nБаза нагенерила 11ТБ WAL в 1.3 млн. файлов. Это короткая (но поучительная) детективная история, поэтому спойлер: некорректно запустили pgBackRest. Подробности в статье.\nЕщё один Крис\nEverything you know about setting `work_mem` is wrong\nБлог называется \npostgresql when it's not your job\n, то есть как бы любительский, Postgres как хобби. Но это кокетство: автор этого блога с адресом the build \nКристоф Петтус\n (Christophe Pettus), гендир \nPostgreSQL Experts\n (PGX).\nКристофер шутит: \nесли вы погуглите, как настроить  \nwork_mem\n  в PostgreSQL, вы, скорее всего, найдёте что-то в этом роде:\nВозьмите число соединений, добавьте 32, поделите на цифру, соответствющую вашему знаку зодиака (Водолей=1), конвертируйте в систему счисления по основанию 7. Готово! Прочитайте как обычное десятичное число, и вот она, нужная память в мегабайтах!\nНо я спасу вас: ВСЕ формулы для \nwork_mem\n лгут. Каждая формула лжёт. Не то, чтобы всегда чудовищно врёт, но, в лучшем случае, даёт первое приближение.\nЧто же предлагает сам Кристоф?\nПредлагает итерации:\nУстановить по одной из формул, скажем: 50% свободной памяти + системные буферы, делить на число соединений.\nЕсли производительность устраивает, оставить как есть.\nЕсли нет, то заглянуть в логи, найти сообщения о создании врЕменных файлов, например таких [см в статье].\nЕсли таких нет, оставить как есть.\nЕсли есть, добавить памяти вдвое больше самого большого временного файла.\nЭто не на все случаи жизни. А вообще, пользуйтесь  \npgbadger\n , чтобы отслеживать подобные вещи, - советует Кристоф.\nДомашние вдохновители PostgreSQL\nTitus the Coton de Tulear\nТитус Котон де Тулеар (фото хозяина)\nПосле полугодового перерыва обновились \nPostgreSQL Pets\n. Очаровательный пёс принадлежит Джозефу Скьяррино/Шьяррино (Joseph Sciarrino). \nИнтервью\n с ним есть в коллекции \nАндреаса Шербаума\n. Джозеф сооснователь WH Hydra, построенного на базе PostgreSQL. У него есть лицензия уличного скрипача, хотя он играл и в симфонических оркестрах. Но главное - у него есть Титус Котон де Тулеар (\nмадагаскарский бишон\n). \nПредыдущими вдохновителями были:\nХолли (курица)\nЭмба (пёс)\nMilo (котик)\nЕщё один котик\nAdopting PgCat: A Next-Gen Postgres Proxy\nНапомним\n, что автор PG-кота -  \nЛев Кокотов\n ака \nlevkk\n, который поддерживает расширение \npgml\n для машинного обучения. \nPgCat\n - пулер с шардингом, блансировкой нагрузки и аварийным переключением (failover). Но написал статью не создатель, а коллектив: \nМостафа Абдельрауф, Зайн Кабани\n и\n Эндрю Теннер\n (Mostafa Abdelraouf, Zain Kabani и Andrew Tanner) из InstaCart. Им нужно горизонтально масштабироваться, но простое добавление реплик для чтения и/или шардирование не решало проблемы, а новых добавляло. Справлялись с Ruby-библиотекой \nMakara\n, но не хотелось привязываться к Ruby. Естественным решением стал \nPgBouncer\n. Им и пользовались, он всем (почти) хорош, но он не поддерживает failover и недостаточно гибко балансирует нагрузку.\nРассматривали ещё \nYandex Odyssey\n. В результате в статье есть табличка с плюсами и минусами PgBouncer |  PgBouncer с внешними средствами failover | Odyssey | PgCat. Победил Кот. В статье объясняют, почему. И что пришлось докрутить в Коте.\n \nНа сегодня всё, готовимся к конференции.\n \n ",
    "tags": [
        "postgresql",
        "postgres",
        "dbms",
        "rdbms",
        "data bases",
        "субд",
        "рсубд",
        "базы данных"
    ]
}
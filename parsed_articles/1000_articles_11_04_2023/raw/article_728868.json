{
    "article_id": "728868",
    "article_name": "ChatGPT на Java пишет renamer для файлов",
    "content": "Мне понадобилось написать своей renamer для фото.\nЗачем?\n Ведь есть куча бесплатного софта для пакетного переименовывания файлов. Я попробовал несколько, и в моем случае они были бесполезны, т.к. мне нужно было в качестве имени файла указывать инфу находящуюся в метаданных. А набор этих метаданных у разных форматов файлов разный (в моем случае JPG и MOV). Причем мне нужны были нужны метаданные, так как я переименовывал файлы скаченные с GooglePhoto, и у файла меняется ДатаСоздания и ДатаИзменения на текущую. И единственный способ узнать дату, когда сделано фото - это лезть в метаданные.\nЯ решил, что ChatGPT быстрее меня сможет найти библиотеки на java для этого, и поэтому обратился к нему. И, спойлер, он не подвёл.\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.TimeZone;\n\nimport com.drew.imaging.ImageMetadataReader;\nimport com.drew.imaging.quicktime.QuickTimeMetadataReader;\nimport com.drew.metadata.Directory;\nimport com.drew.metadata.Metadata;\nimport com.drew.metadata.exif.ExifSubIFDDirectory;\nimport com.drew.metadata.mov.QuickTimeMovieHeaderDirectory;\n\npublic class RenameFilesExample {\n    public static void main(String[] args) {\n        String folderPath = \"path/to/folder\";\n        File folder = new File(folderPath);\n        if (!folder.isDirectory()) {\n            System.out.println(\"Specified path is not a folder\");\n            return;\n        }\n\n        File[] files = folder.listFiles();\n        for (File file : files) {\n            try {\n                if (file.isFile()) {\n                    String newName = getNewFileName(file);\n                    File newFile = new File(folderPath + \"/\" + newName);\n                    boolean success = file.renameTo(newFile);\n                    if (!success) {\n                        System.out.println(\"Could not rename file: \" + file.getName());\n                    }\n                }\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    private static String getNewFileName(File file) throws IOException {\n        String extension = getFileExtension(file.getName()).toLowerCase();\n        Metadata metadata;\n        String dateStr;\n        switch (extension) {\n            case \"jpg\":\n            case \"jpeg\":\n                metadata = ImageMetadataReader.readMetadata(file);\n                ExifSubIFDDirectory directory = metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class);\n                Date date = directory.getDate(ExifSubIFDDirectory.TAG_DATETIME_ORIGINAL);\n                dateStr = formatDate(date);\n                break;\n            case \"mov\":\n                metadata = QuickTimeMetadataReader.readMetadata(file);\n                QuickTimeMovieHeaderDirectory headerDirectory = metadata.getFirstDirectoryOfType(QuickTimeMovieHeaderDirectory.class);\n                date = headerDirectory.getDate(QuickTimeMovieHeaderDirectory.TAG_CREATION_TIME);\n                dateStr = formatDate(date);\n                break;\n            default:\n                dateStr = \"\";\n                break;\n        }\n        return dateStr + \".\" + extension;\n    }\n\n    private static String getFileExtension(String fileName) {\n        int dotIndex = fileName.lastIndexOf('.');\n        if (dotIndex == -1 || dotIndex == fileName.length() - 1) {\n            return \"\";\n        } else {\n            return fileName.substring(dotIndex + 1);\n        }\n    }\n\n    private static String formatDate(Date date) {\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd_HH-mm-ss\");\n        dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        return dateFormat.format(date);\n    }\n}\n\nТут я создал проект и скопировал себе этот код. Но оказалось, что одна из библиотек, которую использовать ChatGPT отсутcвует в mvn central.\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.TimeZone;\n\nimport com.drew.imaging.ImageMetadataReader;\nimport com.drew.imaging.quicktime.QuickTimeMetadataReader;\nimport com.drew.metadata.Directory;\nimport com.drew.metadata.Metadata;\nimport com.drew.metadata.exif.ExifSubIFDDirectory;\nimport org.mp4parser.IsoFile;\nimport org.mp4parser.boxes.iso14496.part12.MovieHeaderBox;\n\npublic class RenameFilesExample {\n    public static void main(String[] args) {\n        String folderPath = \"path/to/folder\";\n        File folder = new File(folderPath);\n        if (!folder.isDirectory()) {\n            System.out.println(\"Specified path is not a folder\");\n            return;\n        }\n\n        File[] files = folder.listFiles();\n        for (File file : files) {\n            try {\n                if (file.isFile()) {\n                    String newName = getNewFileName(file);\n                    File newFile = new File(folderPath + \"/\" + newName);\n                    boolean success = file.renameTo(newFile);\n                    if (!success) {\n                        System.out.println(\"Could not rename file: \" + file.getName());\n                    }\n                }\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    private static String getNewFileName(File file) throws IOException {\n        String extension = getFileExtension(file.getName()).toLowerCase();\n        Metadata metadata;\n        String dateStr;\n        switch (extension) {\n            case \"jpg\":\n            case \"jpeg\":\n                metadata = ImageMetadataReader.readMetadata(file);\n                ExifSubIFDDirectory directory = metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class);\n                Date date = directory.getDate(ExifSubIFDDirectory.TAG_DATETIME_ORIGINAL);\n                dateStr = formatDate(date);\n                break;\n            case \"mov\":\n                IsoFile isoFile = new IsoFile(file);\n                MovieHeaderBox movieHeaderBox = isoFile.getMovieBox().getMovieHeaderBox();\n                Date creationTime = new Date(movieHeaderBox.getCreationTime().getTime() * 1000);\n                dateStr = formatDate(creationTime);\n                break;\n            default:\n                dateStr = \"\";\n                break;\n        }\n        return dateStr + \".\" + extension;\n    }\n\n    private static String getFileExtension(String fileName) {\n        int dotIndex = fileName.lastIndexOf('.');\n        if (dotIndex == -1 || dotIndex == fileName.length() - 1) {\n            return \"\";\n        } else {\n            return fileName.substring(dotIndex + 1);\n        }\n    }\n\n    private static String formatDate(Date date) {\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd_HH-mm-ss\");\n        dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        return dateFormat.format(date);\n    }\n}\n\nВ итоге я взял этот код, последние версии использованных в нем библиотек и вставил путь в папке с тысячами фоток и видео. И вуаля. \nПолучается, за 20 мин я получил от ChatGPT рабочий софт, который отлично выполнил необходимую мне задачу. Имхо, на поиски существующего софта и настройку его работы ушло бы сильно больше времени.\nНу и конечно я\n \nзапушил этот код на gitHub\n. \n \n ",
    "tags": [
        "chatgpt",
        "java",
        "renamer",
        "file",
        "filereader",
        "googlephoto"
    ]
}
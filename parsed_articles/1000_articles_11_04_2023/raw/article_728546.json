{
    "article_id": "728546",
    "article_name": "Сети и графы",
    "content": "Как выбрать лучшую структуру сети\nНа практике часто необходимо при заданных условиях и ограниченных ресурсах для построения сети выбирать из потенциально возможных структур лучшую в некотором смысле, например, устойчивую к неисправностям (отказам) связей между узлами (каналов) транспортной сети, сети связи, сетей нефте- и газопроводных и многих других. Предлагается рассматривать ряд задач поиска оптимального решения в рамках числовых примеров. Актуальность проблемы несомненна, даже наше городское жилье охвачено большим числом обеспечивающих удобства и комфорт сетями различного назначения: электрическими, снабжения холодной и горячей водой, газопроводной, теплоснабжения, телевизионной, радиотрансляционной, интернетом, канализацией, мусоропроводом, охранного видеонаблюдения и др.\nПроектирование, синтез и расчет таких сетей осуществляется путем построения их моделей, и использования методов оптимизации их функционирования с учетом имеющихся ресурсов, условий и ограничений. Средства для создания моделей предоставляют различные теории, и для моделирования структуры сетей чаще других используется теория графов.\nВ работе [2] приводятся результаты о \nполном\n количестве (\nр, q\n) - графов с \nр\n вершинами и \nq\n ребрами и о количестве \nсвязных\n (\nр, q\n) - графов. Таблицы с небольшими значениями \nр\n и \nq\n приводятся многими авторами в публикациях. Приведенные здесь таблицы \n1, 2\n заимствованы из [2, стр.281]. Эти таблицы могут служить отправным пунктом для многих исследований сетей в различных предметных областях. Разработка новых методов получения результатов не только существования таких графов (числа графов), но перечислительного представления (желательно визуального) самих графов имеет несомненный интерес для практики и может служить прекрасной мотивировкой исследований. Дело в том, что даже в предлагаемой работе [2] перечисление графов в задачах ограничено и не доводится до визуальной формы (до изображений), а часто завершается получением \nпроизводящих функций\n. Поэтому тем, кто стремится проводить глубокий анализ структур сетей, необходим для такого анализа (и возможно синтеза) перечень конкретных графов (их рисунков), что позволяет привлекать когнитивные способности человеческого мозга к поиску наилучших решений.\nТаблица \n1\n – Число (\nр, q\n) - графов  \nсимволом \nр\n обозначено число вершин, символом \nq\n \n– \nчисло ребер\nПодчеркнуты строки и в них элементы, которые используются в числовых примерах. Здесь не приводятся многочисленные определения теории графов, так как их легко можно найти в интернете. В текст включены только те, которые используются в описании графов.\nТаблица \n2\n – Число связных (\nр, q\n) -графов   \nсимволом \nр\n обозначено число вершин, символом \nq\n \n– \nчисло ребер\nЗадача.\n Простым примером, иллюстрирующим основные средства получения решения, может служить следующая задача. Для \n5\n узлов системы связи требуется между ними проложить \n7\n информационных каналов, надежность которых одинакова. Теория графов предлагает модели для построения структур подобных сетей, и методы количественного анализа их характеристик. Возможные конфигурации структур \nG\n (\n5, 7\n) содержатся в классе графов, состав и представители которого неизвестны. Необходимо решать вопрос о существовании (количество в классе) и перечислении всех графов (структур сети) этого класса. Вопрос же определения качества предлагаемых структур лежит в предметной области за рамками теории графов.\nКлассификация графов\nОпределение графа. \nОбыкновенный граф \nG\n (\nV, U\n) порядка \nn\n представляет собой конечное непустое множество \nV\n, содержащее \nn\n = |\nV\n| вершин, и множество \nU \nнеупорядоченных пар \nU\n \n≤ V×V \nиз \nр\n = |\nU\n| различных вершин (\nv\ni\n, v\nj\n); при таком определении автоматически исключаются петли при вершинах и параллельные (кратные) между парами вершин ребра. Пара вершин \nu\nij\n = (\nv\ni\n, v\nj\n), соединенных отрезком линии и принадлежащая множеству \nU\n, называется ребром графа \nG\n и говорят, что ребро\n u\nij\n соединяет вершины \nv\ni\n \nи \nv\nj\n. Вершины \nv\ni\n \nи \nv\nj\n называются при этом смежными.\nКлассификация графов\n. Графы представляют собой достаточно сложный объект и их классификация до настоящего времени не завершена. Различают конечные, бесконечные графы и гиперграфы, связные и несвязные, детерминированные и стохастические, ориентированные, неориентированные и смешанные, псевдографы и мультиграфы. Здесь остановимся на рассмотрении только обыкновенных (конечных, без петель и кратных ребер, неориентированных, детерминированных) графов.\nПри рассмотрении классификации графов полезно определиться с перечнем свойств определяющих класс и для отдельного графа, определить какие из них следует сделать (положить) основными. Очевидно, что их наличие и значение должно относить объект (граф) к определенному классу, который далее может быть расчленен на подклассы.\nИзвестно, что классификации объектов бывают естественными (например, таблица Менделеева) и искусственными (практически все остальные в любой предметной области). Понятно, что при проведении классификации следует стремиться к варианту естественной, но установить ее очень не просто. Менделееву Д.И. это удалось после многочисленных попыток других ученых и многократных собственных поисков и размышлений.\nХорошая классификация должно обладать свойством предсказания, обеспечивать прогнозы, выполнение расчетов, например, объемов классов, перечисление его элементов и свойств. В публикации предлагается такой набор свойств: количество вершин, количество ребер, распределение степеней вершин (РСВ), изоморфизм. Примером класса (Табл. 6) в этой классификации могут быть: 6-вершинники с 8 ребрами, фиксированным РСВ <\n123334\n>, неизоморфные графы.\nПодобная классификация просто описывается деревом с 4-мя ярусами: 1-й вершины, 2-й ребра, 3-й РСВ, 4-й изоморфизм. Решение прикладных задач с использованием классов в рамках подобной классификации предусматривает привлечение разнообразного математического инструментария: комбинаторного анализа сочетаний, разбиений числа, установления (проверки) изоморфизма графов, включаемых в конкретный класс.\nСвойства графов и их элементов\nИнцидентность.\n Пара вершин \nvi, vj\n являющихся оконечными в ребре\n u\nij\n = (\nv\ni\n, v\nj\n), называются инцидентными ребру, а ребро – инцидентным каждой из этих вершин. \nСтепень вершины\n. Каждой  вершине \nvi \nграфа  с  номером \ni\n, \ni\n = \n1\n(\n1\n) \nn, \nинцидентно \ndi\n ребер \ndi = 0(1) n – 1.\n Переменная (величина) \ndi\n называется \nстепенью \nвершины графа. Множество вершин графа описывается характеристикой \nD\n = <\nd1, d2, d3, …, dn\n> – распределение степеней вершин (РСВ). Число вершин в графе, имеющих нечетные степени – четно, а сумма степеней всех вершин графа равна удвоенному количеству ребер \nD\nσ\n = \n∑\ni≤n\ndi\n \n= \n2р. \nГлавный подход (цель) при классификации – собрать в классы объекты с одинаковыми наборами, но с разными значениями показателей свойств. Визуально графы легко различаются значениями: \nn = |V|\n – количеством вершин, \nр\n = |\nU\n| – количеством ребер, \ndi\n – значениями степеней  вершины  ( количеством  ребер, сходящихся  в  одной  \ni\n-й вершине )  и  вектором  \nD \n= <\nd1, d2, d3, …, dn\n> – распределением степеней вершин (РСВ) графа. Это существенно упрощает контроль принадлежности графа классу.\nМожно отобрать из полного множества (из всех) графов, имеющие одинаковые числа вершин, и создать класс \nn\n-вершинников \nG\n(\nn\n). Тогда среди всех \nn\n-вершинников возникнут подклассы \nр\n-реберников \nG \n(\nn, p\n) с равными количествами ребер (\nр\n), при этом часть графов в классе \nG \n(\nn, p\n) будет различаться структурой, что проявится в несовпадении РСВ. \nПри фиксировании вектора \nD \nкласс графов \nG \n(\nn, p\n) распадается по этому признаку (свойству) на подклассы \nG\n (\nn, p, D\n) с набором трех показателей. Классы графов \nG\n (\nn, p, D\n) хорошо разделяются по количественным признакам на множества обыкновенных (без петель и кратных ребер) графов, но включают в себя изоморфные графы. Этот дополнительный (новый) признак скорее качественный, чем количественный, но является весьма важным.\nВекторы \nD\n с различными значениями \nn\n компонентов, сумма которых постоянна, удобно описывать разбиениями четного числа \n2р\n на \nn\n блоков (частей). Для формирования конкретного класса графов необходим \nалгоритм генерации\n графов - элементов класса.\nДля конечных графов соответствующее количество \nразбиений\n также конечно, но среди их множества не все будут отвечать требованиям РСВ графа. Для разбиений чисел вводится понятие «графическое разбиение». Выбором из полного множества разбиений (табл.4) только «графических», получаем из таких разбиений множество допустимых РСВ. Ниже в числовом примере \n1\n будет показан механизм такого выбора.  \nПример\n. Ниже в таблице \n6\n приводится множество графов, образующих класс \nG\n (\n6, 8\n). В этом классе можно увидеть и выделить подкласс \nG\n (\n6, 8, D\n), где \nD =\n.<\nd1, d2, d3, …, d6\n>=<\n1,2,3,3,3,4\n>. Подкласс образуют графы с номерами \nG9, G10, G11, G13\nМатрицы\n. Нам потребуется матричное представление графа и подстановочные матрицы, представляющие перестановки симметрической группы.  \nНекоторые типы матриц для графа \n   \nматрицы смежности и инцидентности для графа на рис. 2, также перестановочная матрица g\nГенерация графов заданного класса\nЧтобы получить непосредственно изображения графов, образующих конкретный класс, необходимо разработать алгоритм и программу их генерации. Как это можно сделать показывается в тексте и примерах, без особого глубокого погружения в проблему.\nСтруктура\n обыкновенного графа определяется количествами (\nn\n) элементов (вершин) и (\nр\n) связей этих элементов (ребер), а также пространственным размещением связей между парами вершин, что определяется РСВ. Связи в неориентированном графе называются ребрами (в ориентированном графе – дугами). Каждая связь соединяет пару вершин. При \nn\n вершинах количество ребер (\nр\n) в \nполном графе\n вычисляется как число комбинаторных сочетаний по два из \nn \nвершин \nр\n =  \nn(n – 1)/2\n                                                                                                      \nДля размеченных графов подсчет их числа в классе \nG\n (\nn, p\n) осуществляется по формулам комбинаторных сочетаний. Перечисление графов класса \nG\n (\nn, p\n) реализуется генерацией сочетаний. Все графы в множестве сгенерированных сочетаний разные. Если номера вершин убрать, множество графов класса распадается на подмножества с одинаковыми РСВ. \nРисунок 1 - Полный пятивершинник и соотношения для вычислений \nВ этой ситуации в ряде классов \nG\n (\nn, p, D\n) графы с одинаковыми \nD, n \nи \nр\n оказываются разными. Их структуры не совпадают (не совмещаются) при наложении графов одного на другой. Другими словами, существует признак, который делает графы, принадлежащие классу, а, следовательно, и структуры разными. Этот признак скорее качественный, чем количественный и называется изоморфизм. Разные по структуре графы – неизоморфны.\nПри известных числах вершин (\nn\n) и ребер (\np\n) в классе \nG\n (\nn, p\n), его объем определяется \n \nкак число сочетаний из числа ребер в полном \nn\n-вершиннике по заданному числу \nр \nребер моделируемого класса.\nПример 1\n. Для класса обыкновенных графов\n G\n (\nn, p\n) = \nG\n (\n5, 7\n) получить множество всех графов. Необходимо генерировать для \n5\n-вершинников все семиреберники. Решение этой задачи возможно несколькими путями, зависящими от формы представления графов: рисунками, сочетаниями, матрицами или как-то иначе. Выберем представление графа сочетанием ребер.  Полный обыкновенный \n5\n-вершинный  граф (рис. \n1\n) содержит \nр\n =\n10\n ребер, но в задаче требуются \n7\n-реберные графы, ребра которых должны связывать пары из \n5\n вершин и создавать разные структуры, следовательно, в полном графе необходимо для получения \n7\n-реберника убрать \n3\n ребра. В класс попадает столько графов, сколько существует различных вариантов убрать три ребра из десяти.\nПредварительно в полном \n5\n-вершиннике пронумеруем позиции всех его десяти ребер (рисунок \n1\n полный \n5\n-вершинник). Тогда каждому очередному графу сочетание из списка    (табл. 3) укажет в какие позиции полного графа должны укладываться \n7\n заданных ребер. Таких сочетаний (следовательно, и структур графов) существует \n120.\nС другой стороны, для сочетаний справедливы \n120\n соотношений, из которых следует, что для получения семиреберников с \n5\n вершинами из полного \n5\n-вершинника можно удалять \n3\n ребра. Для этого необходимо генерировать сочетания    по три ребра из \n10\n, и получаемые в списке сочетаний тройки с номерами ребер удалять из полного графа.\nТаблица 3 – Нумерованные сочетания из \n10\n ребер по \n3\n, которые удаляются из полного графа, чтобы получить все \n5\n-вершинные \n7\n-реберники\nВ клетках за двоеточием записаны номера удаляемых ребер полного 5-вершинника\nНе все из этих \n120\n структур, для представляения графов, различны. Среди \n120\n графов будет много изоморфных, т. е. с одинаковой структурой, хотя визуально установить это достаточно сложно. \nИзоморфизм графов\n. Два графа \nА\n и \nВ\n с матрицами смежности \nn × n,\n называются изоморфными (обозначается \nА≈ В\n) тогда и только тогда, когда существует  \ng\n-матрица (подстановочная) порядка \nn\n, соответствующая подстановке\n g\n \nϵ\n S\nn\n , для которой выполняется \ng А g\n-1\n = В\n. Здесь \ng\n и\n g\n-1\n прямая и обратная подстановочные матрицы порядка \nn × n\n. Для всех матриц \nА\n (\nG\n(\nn, p\n)) смежности графа в классе\n G\n(\nn, p\n)  вводится понятие «старшинство» матриц. \nЛюбую (\n0, 1\n) -матрицу можно представить двоичным числом, выписывая последовательно ее строки одну за другой с \n1\n-й до \nn\n-й. Эту \n(0, 1\n) -последовательность прочитывают как двоичное число. Для двух сравниваемых матриц старшей будет та, для которой число больше. Для симметрических матриц смежности графа можно (при преобразовании ее в число) ограничиться верхней треугольной частью. Наибольшее число старшей матрицы в классе называется кодом Харари матрицы.\nЕсли при действии на \nА\n любой \ng\n-матрицей из симметрической группы \nS\nn\n \nподстановок степени \nn\n ее старшинство в линейно-упорядоченном множестве матриц не возрастает, т.е. для любой \ng ϵS\nn\n, g А g\n-1\n ≤ А\n, то \nА\n – каноническая матрица. Очевидно, две различные канонические матрицы смежности графов соответствуют неизоморфным графам.\nСодержательное описание изоморфизма можно представить так. Для пары изоморфных графов (с одинаковым числом вершин, ребер и вектором РСВ) один граф может быть наложен на другой с условием полного совпадения. Но, если число вершин, РСВ и число ребер у графов А и В одинаковы, но структура одного графа не позволяет совместить ее со структурой другого без разрыва и последующего склеивания связей (допускаются только растяжения, скручивания и повороты), то такие графы неизоморфны. Следовательно, графы А и В неизоморфны. При совпадении структур – изоморфны. \nРисунок 2 - 5-вершинник с 7 ребрами \nРисунок 2 -При получении \n5-\nвершинников с одной вершиной степени \ndi = 2\n (РСВ           \nD\n =<\n2 3 3 3 3\n>) из полного графа необходимо удалять три ребра: пару ребер инцидентных этой вершине и третье ребро, не инцидентное трем вершинам, удаляемых ребер. В полном графе с каждой вершиной инцидентны \n4\n ребра из чего следует шесть возможностей удаления двух из них  \n4(4 – 1)/2 = 6\n. \nДругими словами, с каждой вершиной связаны 6 изоморфных графов, а вершин в графе \n5\n, следовательно, получаем \n6×5 = 30\n изоморфных графов, в которых одна из вершин имеет степень два. Рисунок 2 поясняет приводимые рассуждения. Пятая вершина имеет степень два (\nd\n5\n = 2\n), удалены два инцидентных ребра с номерами \n4\n и \n9\n. Этим двум ребрам инцидентны три вершины \nv\n5\n, v\n1\n, v\n3\n не инцидентное ребро связывает другие вершины \nv\n2\n, v\n4\n. Оно будет третьим удаляемым ребром.\nПример 2\n. Простейшими примерами неразличимости неизоморфных графов по трем признакам в таких классах могут быть:\n6\n-вершинники с \n6\n-ю ребрами и РСВ вида \nD \n= <\n2, 2, 2, 2, 2, 2\n>; пара графов: один граф цикл (кольцо), содержащий все вершины, другой – два треугольника;\n8\n-вершинники с \n8\n-ю ребрами и РСВ вида \nD\n = <\n2,2,2,2,2,2,2,2\n>, аналогично цикл (кольцо) или два четырехугольника. Наложение пар таких графов одного на другой покажет несовпадение их структур, т.е. пары графов неизоморфны. Второй граф в паре несвязен.\nРисунок 3 - Пары неизоморфных графов в классах \nG\n (\nn, p, D\n)   \nГраф (полный) \n6\n-вершинник имеет \n15\n ребер. Мы рассматриваем два \n6\n-вершинных \n6\n-реберника: один граф – кольцо и второй – несвязный \n6\n-вершинник – два треугольника. В полном списке графов \n6\n-вершинников с шестью ребрами (их существует \n5005\n) кольцо имеет код сочетания \n1,5,6,10,13,15\n и порядковый номер № \n1613\n, а пары несвязных треугольников, например, с кодами \n4, 5, 15, 6, 7, 10\n и \n1,2,6,12,13,15\n получают соответственно № \n4099\n и № \n587\n.\nРазбиения числа\n. Как определить и задать РСВ графов? Степени вершин графа удобно описывать разбиениями четного числа (удвоенного числа ребер) на \nn\n блоков. Среди множества разбиений (табл.4) будут встречаться такие, которые представляют РСВ графов из классов с заданными количествами вершин и ребер. Степень \ndi\n любой вершины обыкновенного графа \nG\n (\nV, P\n) не может превышать \ndi ≤ n – 1 \nих число в графе. \nПример 3\n. Для класса \nG\n (\n5, 7\n) все возможные РСВ, содержащиеся в списке разбиений числа \n14\n на \n5\n частей помещены в таблице 4 ниже.\nТаблица 4 – нумерованные разбиения четного числа \n14\n на \n5\n частей\n5-вершинники с 7 ребрами и заданным разбиением удвоенного числа ребер, среди которых (с номерами 18, 21-23) являются распределением степеней сершин\nВсе разбиения подразделяются на \nграфические\n и \nнеграфические\n. Неграфическими разбиениями являются, содержащие блоки со значением \nn = 5\n и более. Такие блоки не могут быть компонентами РСВ  \n5\n-вершинника.  В таблице выше это разбиения с номерами: \n1 – 11, 13 –16, 19, 20.\n \nСледовательно, проверке разбиения на возможность стать РСВ должны подвергаться только разбиения с номерами: \n12, 17, 18, 21–23\n. Построить графы с номерами компонентов РСВ \n12\n и \n17\n невозможно, поэтому остаются допустимыми только четыре РСВ: \n18, 21–23\n, соответствующие неизоморфным графам.\n. Рисунок 4 – Пятивершинные графы с 7-ю ребрами и объемы классов\nСвязность графа\nВ задачах, где генерируются множества графов некоторой программой, результат часто выводится в форме матриц, векторов или иным способом (без визуализации рисунка). При этом может оказаться, что требуемые свойства графа выполнены, но он оказывается несвязным. \nТак в примере \n2\n задаются две пары графов: в первой паре оба графа имеют число (\nn = 6\n) вершин и число (\np = 6\n) ребер графа равными, одинаковы у них и РСВ <\n222222\n> – распределение степеней вершин (РСВ), во второй паре графы также имеют число (\nn = 8\n) вершин и число (\np = 8\n) ребер графа равными, одинаковы у них и РСВ <\n22222222\n> – распределение степеней вершин (РСВ), но вторые графы в этих парах генерируемых графов – несвязные (рис.\n3\n). \nЧтобы избежать этого в программе необходимо задать процедуру проверки связности графа. Граф называется\n связным\n, если каждая пара несмежных вершин в графе связана. Это означает, что между каждой парой вершин существует путь\nРисунок 5 – \n8\n-вершинник с \n16\n ребрами и \nD\n = <\n4, 4, 5, 3, 4, 6, 4, 2\n>. Для пары вершин     \nv = 3\n и \nv = 8\n граф растянут в прямую линию\nОпределение\n. Вершинной связностью \nτ\n = \nτ\n(\nG\n) графа \nG\n называется наименьшее число вершин, удаление которых приводит к несвязному или тривиальному графу. Это вершинная связность.\nОпределение\n. Реберной связностью \nλ =λ\n(\nG\n) графа \nG\n называется наименьшее число ребер, удаление которых приводит к несвязному или тривиальному графу.\nГраф называется \nсвязным\n, если каждая пара его вершин связана. Это означает, что между каждой парой вершин существует путь.\n \nАлгоритмы установления (проверки) связности графа\nВ этих условиях возникает задача сортировки графов по признаку связности и исключения из дальнейшего рассмотрения несвязных графов. Такая сортировка и упорядочение графов может быть осуществлена разными алгоритмами, которые позволяют установить для каждого графа является ли он связным или нет, а некоторые из алгоритмов определяют также количественные значения показателя связности. Эти количественные значения в последующем могут быть легко упорядочены. \nВыбор конкретного показателя связности по существу определяет и выбор алгоритма вычисления его значения для различных графов. Наиболее распространенными показателями связности графов в детерминированных задачах можно назвать следующие:\n– минимальная степень (\nd\n) вершин в графе;\n– минимальное число ребер (\nр\nmin\n), образующих сечение в графе;\n– минимальное число вершин (\nu\nmin\n), образующих сечение в графе, что соответствует гарантированному числу вершинно-независимых путей, связывающих произвольную пару вершин в графе;\n– число деревьев (корневых) содержащихся в графе.\nДля вероятностных графов в качестве показателей связности называются следующие:\n– вероятность связности графа;\n– вероятность существования хотя бы одного пути, связывающего произвольную пару вершин.\nИз приведенного перечня можно увидеть какое разнообразие подходов и взглядов на структуры он отражает. При всех подходах основным, тем не менее, является установление самого факта связности структуры.\nПростейший алгоритм\n проверки факта является ли граф связным использует известные свойства графов. Известно, что в связном графе, имеющем \nn\n вершин, для любой пары вершин всегда найдется связывающая их цепь, которая содержит не более чем \nn – 1\n ребро (рис. \n5\nб). \nЭто свойство следует из того, что если в графе выбрать пару вершин, которые наиболее удалены одна от другой и, «потянуть» за вершины в противоположные стороны, то все ребра цепи, связывающей эту пару вершин, выстроятся в одну линию. Очевидно, самая длинная цепь в графе, возникает тогда, когда она содержит все \nn\n его вершин, при этом она будет состоять из \nn – 1\n ребра.\nПример 4\n. Задан размеченный граф (\n8\n-вершинник) с \n16\n ребрами (рис. \n5\n). В нем выбрана пара не смежных вершин \nv = 3, v = 8\n. Результат эластичного растяжения графа и его ребер изображен на (рис. \n5\n). Вершины \nv = 3, v = 8\n связаны цепью, содержащей все остальные вершины графа и \nn – 1\n ребро, следовательно, граф является связным.\nМатричный алгоритм\n установления связности. Другое свойство графа связано с матрицей смежности \nА\n[n]\n графа. Если матрицу графа последовательно возводить в степень \nk,   k = 2\n(\n1\n)(\nn – 1\n), то элементы последовательно получаемых матриц описывают для соответствующих пар вершин число связывающих их цепей «длины» \nk\n, которая измеряется числом ребер.\nПри фиксированном значении \nk\n нулевые элементы в матрице показывают, что цепей длины \nk\n, связывающих пару вершин в графе нет, но это не исключает возможности существования цепей с длиной меньшей или большей чем \nk\n, которые связывают эту пару вершин.\nДля связного графа матрица \nС\n[n]\n \n(\nn – 1\n) = \n1\n[n]\n+ \n∑\nк<n\n \nА\nк\n[n]\n \nне содержит нулевых элементов. Если это не так, то граф, для которого определена матрица \nС\n[\nn\n] \nне является связным. Таким образом, алгоритм определения\n С\n[\nn\n] \n(\nn – 1\n) позволяет установить факт связности (несвязности) графа.\nРедукционный алгоритм\n. Для графов с небольшими значениями \nn\n алгоритмы легко реализуются с использованием программ перемножения матриц. При значительных \nn\n вычисления будут занимать много времени и требовать значительной памяти, что экономически не целесообразно. Для графов с большим числом (\nn\n) вершин может быть предложен другой алгоритм, который также является достаточно простым и обладает хорошим быстродействием.  \nТаблица 5 \n– \nНумерованные разбиения четного числа 16 на 6 частей\n6-вершинники с 8 ребрами и заданным разбиением удвоенного числа ребер, среди которых разбиения (с номерами 13-15, 18, 20-23, 26-30, 32-35) являются распределением степеней вершин\nМетод использует матрицу смежности \nА\n[\nn\n]\n рассматриваемого графа. Если пара (\nvi, vj\n) вершин соединена ребром, то элемент матрицы \nа\nij\n = 1\n, если нет, то \nа\nij\n = 0\n. Подсчитывается количество единиц в каждой строке и подставляют эти значения вместо нулей на главной диагонали в той же строке. Все единицы, не лежащие на главной диагонали, заменяют на (\n–1\n). Теперь при отбрасывании любой вершины \ni\n, т. е. вычеркивания \ni\n-х строки и столбца получаем матрицу    \nВ\n[\nn-1\n]. \nВычисляя значение определителя матрицы \nВ\n[\nn–1]\n определяем является ли граф связным или нет. \nЕсли \ndetВ\n[\nn-1\n] \n>\n0\n, то граф является связным, если \ndetВ\n[\nn-1\n] \n≤ \n0\n, то граф не является связным. Этот алгоритм подробно описан в работе [1] и использован автором при вычислениях. Завершая изложение публикации, приведем пример построения всех (\n22\n графа )связных графов класса \nG\n(\n6, 8\n), представляемых матрицами смежности и изображениями в одинаковом порядке. Над каждым изображаемым графом выписаны векторы\n D\n – распределения степеней его вершин. \nТаблица 6 \n– \n Матричное представление нумерованных графов класса \nG\n (\n6, 8\n). Объем класса \n22\n графа, что можно увидеть в таблице 2.\nМатричные представления графов класса \nG\n (\n6, 8\n).    \nВизуальные изображения графов класса \nG\n (\n6, 8\n) с указанием для каждого из них РСВ  \nВизуальные изображения графов класса \nG\n (\n6, 8\n).  \n   \nЗаключение\n. Пришло время ответить на вопрос, поставленный в задаче в начале текста. Как выбрать лучшую структуру для сети? Обратимся к рисунку \n4\n. На нем представлен класс графов \nG\n(\n5,7\n) – это всего \n4\n изображения связных 5-вершинников с \n7\n ребрами. Из этих \n4\n-х структур предстоит сделать выбор лучшей структуры для сети в смысле надежности ее функционирования в условиях возмущающих воздействий. Эти воздействия могут приводить к отказам линий связи: одной или более с вычисляемой вероятностью. Левая конфигурация отклоняется при выборе лучшей сразу, так как при ее выборе и отказе одной линии связи связь с вершиной \n1\n будет утрачена. \nСложнее ситуация, допускающая отказ двух связей. Наш пример подобран так, что и в этом случае ответ будет однозначным – это правая структура рисунка. Шанс утратить связь с одной из вершин при отказе двух линий в этой структуре наименьший из трех остающихся потенциально возможных для выбора структур. Дело в том, что в правой структуре имеется единственная вершина степени \nd = 2\n и именно эта единственная вершина связана с остальными менее надежно. Слева от правой структуры расположена структура, имеющая две вершины со степенью два, а левее этой структуры расположена структура, имеющая три вершины степени два. Как видим шансы структуры остаться связной при отказе двух линий у этих трех структур различны. Поэтому выбор однозначен лучшая – это правая структура.\nЛитература\n1. Авондо-Бодино Дж. Применение в экономике теории графов – М.: Прогресс,1966. –160с.  2. Харари Ф., Палмер Перечислительные задачи комбинаторного анализа. – М.: Мир, 1979. – 364 с.\n3. Харари Ф. Теория графов. – М.: Мир, 1973. – 300 с.\n  \n   \n \n ",
    "tags": [
        "граф",
        "вершина",
        "ребро",
        "матрица",
        "связность",
        "пути",
        "класс",
        "дерево"
    ]
}
{
    "article_id": "728560",
    "article_name": "Безопасный Wi-Fi в отеле для всей семьи на Raspberry Pi",
    "content": "Всем привет! Сегодня хочу рассказать о своем «семейном» проекте на Raspberry Pi. Путешествуя по миру, я постоянно сталкиваюсь с потребностью подключаться к быстрому и, что не менее важно, безопасному интернету. \nПредставьте ситуацию: вы въехали в отель со своей семьей, пару часов решаете вопросы с размещением и, изрядно устав, пытаетесь подключить всё семейство к сети: дети требуют мультики, супруга хочет поискать ближайшие магазины, где можно пошопиться, а тебе нужно просто поработать. Для этого ты цепляешь каждое устройство к точке доступа отеля и надеешься, что в эту сеть внедрены хоть какие-то механизмы защиты.\nК типовым проблемам открытых беспроводных сетей относятся возможность перехвата трафика, подделка ответов веб-приложений и DNS-спуфинг, если сама сеть уже скомпрометирована. Поэтому в любой публичной сети нужно вести себя максимально осторожно. Один из лучших способов защитить свой трафик от влияния извне — использовать свой VPN.\nВ России с безопасностью беспроводных сетей дело обстоит еще более-менее. В других же странах, где мне довелось побывать, всё не так радужно. Что дает использование своего VPN? Возможность подключать все устройства семьи разом к интернету через публичные сети, при этом еще защищая трафик с помощью VPN. Про настройку собственного VPN есть отличный гайд на \nYoutube\n.\nСобственно, идея не нова — решил сделать небольшой travel-роутер для семьи. Можно, конечно, использовать и готовые решения, однако у меня уже была «малинка» и внешние адаптеры к ней, поэтому для реализации моей задумки не пришлось ничего докупать. Плюс этот инструмент можно всегда хранить на флешке и использовать в семейных поездках, а в остальное время у «малинки» другая жизнь. \nЯ решил подготовить пошаговую инструкцию для тех, кто захочет повторить мой опыт. Надеюсь, он окажется для вас полезным.\nВариант первый (роутер на основе OpenWrt)\nСуть схемы подключения: мы поднимаем на одном внешнем Wi-Fi интерфейсе «малинки» нашу точку доступа, к которой всегда будут подключаться наши беспроводные клиенты, а вторым адаптером (встроенным в моем случае, но при желании можно и второй внешний использовать) подключаемся к публичному Wi-Fi. При этом весь трафик наших беспроводных девайсов будет идти через наш VPN-туннель.\nДля проекта потребуются:\n1) Raspberry Pi 4,\n2) адаптер питания, \n3) microSD-карта, \n4) Ethernet-кабель, \n5) внешний USB Wi-Fi адаптер (у меня недорогой с AliExpress AC-1200 на чипсете MT7612U).\nШаг первый\nЗальем образ OpenWRT на microSD-карту. Для этого нам пригодится следующее ПО: \nRaspberry Pi Imager\n, а также корректный образ OpenWRT. Нужный образ для вашей «малинки» можно найти \nпо ссылке\n. Итак, запускаем Raspberry Pi Imager, указываем путь до файла с прошивкой OpenWRT, выбираем нашу microSD-карту, куда нужно записать файл, и жмем WRITE. Дожидаемся окончания процесса записи и проверки, потом извлекаем microSD-карту.\nШаг второй\nВставляем microSD-карту в нашу «малинку» и подключаем ее к питанию. Далее подсоединяем ее к нашему домашнему роутеру, к которому подключен наш ПК, при помощи Ethernet-кабеля. Важно: для дальнейшей настройки нашей «малинки» необходимо, чтобы компьютер и «малинка» находились в одной подсети. В моем случае это 192.168.1.0/24 по умолчанию. После установки свежей прошивки OpenWRT интерфейс «малинки» будет иметь IP 192.168.1.1/24. Соответственно, для обеспечения сетевой связности необходимо, чтобы ваш компьютер находился в той же подсети.\nШаг третий\nЧтобы продолжить настройку нашего будущего роутера, необходимо подключиться к нему по SSH. Можно рассмотреть вариант через GUI, однако в моем случае я использую CLI, все действия можно повторить и через графический интерфейс соответственно.\nSSH root@192.168.1.1\nНас пустит без пароля. Однако оставлять это так не будем, сразу же зададим секурный пароль.\npasswd\nДалее хорошим решением будет забэкапить файлы, которые мы будем править, на случай, если что-то пойдет не по плану :)\ncd /etc/config/\ncp firewall firewall.bk\ncp network network.bk\ncp wireless wireless.bk\nНастроим сетевые интерфейсы.\nvi /etc/config/network\nconfig interface 'loopback'\n        option device 'lo'\n        option proto 'static'\n        option ipaddr '127.0.0.1'\n        option netmask '255.0.0.0'\n\nconfig globals 'globals'\n        option ula_prefix 'fd27:468f:224c::/48'\n\nconfig device\n        option name 'br-lan'\n        option type 'bridge'\n        list ports 'eth0'\n\nconfig interface 'lan'\n        option device 'br-lan'\n        option proto 'static'\n        option ipaddr '10.10.10.40'\n        option netmask '255.255.255.0'\n        option ip6assign '60'\n        option force_link '1'\n\nconfig interface 'wwan'\n        option proto 'dhcp'\n        option peerdns '0'\n        option dns '8.8.8.8 1.1.1.1'\nА также дадим доступ к Интернету сегменту LAN:\nvi /etc/config/firewall (здесь нам нужно изменить только одно значение — в зоне WAN option INPUT выставить ACCEPT).\nПерезагружаем нашу малинку и подключаемся уже по измененному IP-адресу (в нашем случае это 10.10.10.40).\nДалее нам нужно подключить адаптер Wi-Fi. Но прежде нам нужно доустановить драйверы для этого адаптера. Поэтому сначала подключим «малинку» к нашему домашнему Wi-Fi:\n \nvi /etc/config/wireless\nconfig wifi-device 'radio0'\n        option type 'mac80211'\n        option path 'platform/soc/fe300000.mmcnr/mmc_host/mmc1/mmc1:0001/mmc1:0001:1'\n        option channel '7' \n        option hwmode '11g' \n        option htmode 'HT20' \n        option disabled '0'   \n        option short_gi_40 '0'    \n                                  \nconfig wifi-iface 'default_radio0'\n        option device 'radio0'\n        option network 'lan' \n        option mode 'ap'        \n        option ssid 'OpenWrt'   \n        option encryption 'none'\n uci commit wireless\nwifi\nДалее продолжим настройку через GUI:\nhttps://10.10.10.40/\nВводим те же самые логин и пароль, с которыми мы логинились по SSH.\nПереходим в настройки беспроводных сетей Network > Wireless\nНажимаем Scan и подключаемся к домашней беспроводной сети, чтобы установить драйверы для нашего Wi-Fi адаптера.\nПосле того как у «малинки» появился доступ в интернет, обновляем пакеты OpenWRT и ставим драйверы для большинства адаптеров. Однако следует исходить из следующих моментов: чипсет адаптера, который у вас есть, должен быть совместим с OpenWRT (какие чипсеты в данный момент поддерживаются, можно проверить на официальном сайте OpenWrt).\nopkg update\nopkg install kmod-mt76x2u kmod-rt2800-lib kmod-rt2800-usb kmod-rt2x00-lib kmod-rt2x00-usb kmod-usb-core kmod-usb-uhci kmod-usb-ohci kmod-usb2 usbutils nano\nУбеждаемся, что внешний адаптер установился корректно.\nlsusb\nifconfig wlan1 up\nЕсли интерфейс поднялся, значит, мы на верном пути.\nДальше нам нужно поднять свою точку доступа! Для этого необходимо отредактировать файл еще раз:\nnano /etc/config/wireless\nconfig wifi-device 'radio1'\n        option type 'mac80211'\n        option path 'scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/usb2/2-1/2-1:1.0' < --путь сгенерится автоматом, его трогать не нужно\n        option channel '36'\n        option band '5g'\n        option htmode 'VHT80'\n        option disabled '0' <-- Не забыть включить\n\n config wifi-iface 'default_radio1'\n        option device 'radio1'\n        option network 'lan'\n        option mode 'ap'\n        option ssid 'Название сети, к которой вы будете подключать все свои девайсы' \n        option encryption 'psk2'\n        option key 'Пароль для этой сети'\n uci commit wireless\n wifi\nТеперь у вас есть работающий travel-роутер. Подключаете всю семью один раз к Wi-Fi на «малинке» и всё. Для того чтобы интернет был на всех девайсах, вам достаточно подключиться к публичной сети. (Примечание: при подключении Wi-Fi адаптера используйте тот же USB-разъем, в ином случае интерфейс может не стартануть). Однако ваш трафик по-прежнему передается по незащищенному каналу, поэтому нужно настроить VPN.\nВ моем случае я буду настраивать подключение к собственному VPN-серверу. Настройка других VPN-провайдеров не будет сильно отличаться.\nНаша «малинка» будет клиентом, который при получении доступа в интернет будет автоматически устанавливать соединение с VPN-сервером, формируя защищенный туннель, внутри которого будет передаваться весь трафик.\nУстановим необходимые пакеты для нашего VPN:\nopkg update\nopkg install wireguard-tools\nopkg install luci-app-wireguard\nДалее заходим через GUI и добавляем новый интерфейс Network > Interfaces > Add New interface.\nДаем название интерфейсу и выбираем протокол WireGuard VPN.\nДалее импортируем конфигурацию для добавления нового клиента, которую можно получить с нашего VPN-сервера.\nДальше нам нужно настроить правила для межсетевого экрана следующим образом:\n Во вкладке Network > Firewall добавить новую зону и выставить параметры:\n \nInput - Reject\nOutput - Accept\nForward - Reject\nMasquerading - Checked\nMSS clamping - Checked\nИнтерфейс выбираем тот, который относится к туннелю Wireguard, смотрим из какой зоны нам разрешен форвардинг.\nДалее выбираем Save и Save&Apply.\nДля того чтобы весь трафик у нас ходил только через наш туннель и никак иначе, можно дополнительно скорректировать правило межсетевого экранирования следующим образом: заходим в настройки зоны Lan и выставляем параметр Allow forward to destination zones таким образом, что из сегмента Lan будет доступ только в сегмент нашего туннеля.\nНа этом настройка роутера для путешествий на основе Raspbery Pi завершена :) Дальше, когда вам потребуется на новом месте раздать Wi-Fi для всей семьи, вам нужно будет подключиться к «малинке», зайти в Network > Wireless и подключиться к новой сети.\nДанный способ настройки travel-роутера не отличается простотой, однако обладает высокой надежностью, позволяет использовать основные преимущества открытой прошивки и требует настройки всего лишь один раз. Дальше можно создать образ и пользоваться им для быстрого развертывания.\nВторым способом превратить «малинку» в travel-роутер поделюсь в следующем посте, чтобы не нагружать этот)\nАвтор: Евгений Артемьев, Консультант по информационной безопасности \"Инфосистемы Джет\" \n \n ",
    "tags": [
        "роутер",
        "настройка wifi",
        "raspberry pi"
    ]
}
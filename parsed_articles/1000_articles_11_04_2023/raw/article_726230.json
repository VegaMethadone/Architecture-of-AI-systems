{
    "article_id": "726230",
    "article_name": "Базовая настройка Zabbix 6.4.0 под CentOS 8 / Rocky Linux 8",
    "content": "Вот прошло уже 2 недели с появления новой версии Zabbix, а именно, версии 6.4.0. И поскольку новым версиям посвещено довольно мало статей, а интерфейс и логику работы они поменяли прямо очень сильно, я решил написать кратенькую инструкцию как с актуальной на данный момент времени вообще жить. Сейчас начнём с основ, а там посмотрим на реакцию публики. Итак...\nСобственно, установка\nТут всё просто. \nСоветую воспользоваться официальным гайдом\n.\nТолько обратите внимение, что на этой странице в пункте 1 надо выбрать то, что соответствует вашим пожеланиям, в зависимости от выбора каждого пункта инструкция будет изменяться. Я предпочитаю использовать Zabbix в комплекте с Postgres, потому дальнейшие советы будут про него.\nЕще для установки на восьмёрку придётся обновить версии пары пакетов относительно штатных системных, иначе установка пройдёт успешно, но потом ничего работать не будет:\ndnf install -y epel-release\n# Устанавливаем сторонний репозиторий, содержащий нужные нам версии php\ndnf install -y https://rpms.remirepo.net/enterprise/remi-release-8.rpm\n\ndnf module reset php\ndnf module enable php:remi-7.4 -y\ndnf -qy module disable postgresql\ndnf install -y postgresql15 postgresql15-server\n После установки необходимых пакетов и создания базы данных нужно зайти в конфиг сервера \n/etc/zabbix/zabbix_server.conf\n и внести некоторые изменения, я ограничился следующими:\n# Данные для подключения к базе, должны соответствовать тому, \n# что использовалось при установке базы:\nDBName=zabbix\nDBUser=zabbix\nDBPassword=password\n\n# Параметры, отвечающие за быстродействие, оптимизированы под меня\nStartDiscoverers=10\nStartHTTPPollers=10\nStartVMwareCollectors=5\nVMwareCacheSize=32M\nVMwareTimeout=120\n\nStatsAllowedIP=127.0.0.1,::1,2001:db8::/32,zabbix.your-company.ru\n Сохраняем изменения, перезагружаем сервер\nsystemctl restart zabbix-server.service\n … и выполняем первый вход через веб, в процессе которого надо будет указать параметры подключения к базе. А потом еще зайти в интерфейс и сменить пароль администратора с Admin/zabbix на что-нибудь более безопасное.  \nЕсли почему-то веб-интерфейс не открывается, то «чиним» фаерволл:\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --add-service=https --permanent\nfirewall-cmd --add-service=zabbix-agent --permanent\nfirewall-cmd --add-service=zabbix-server --permanent\nfirewall-cmd --reload\nНастройка\nА дальше начинается самое интересное… Если вы ранее работали с более старой версией (как например я, который до этого использовал версию 4.5), то интерфейс вы можете не узнать вообще.  \nДля начала зайдём в Data Collection — Discovery. Тут нам нужно пока 2 правила, первое зададим так:\nData Collection — Discovery\nЭто правило позволит нам обнаруживать все пингующиеся узлы в сети. Если сетей нужно несколько, пишем их через запятую.\nДалее, создаём второе правило, которое позволит нам находить все узлы с установленным Zabbix-агентом:\nТеперь, если мы зайдём в Monitoring — Discovery, то мы уже увидим какие-то найденные узлы, но сверху можно выбрать конкретное Discovery rule, применить его и мы узнам, какой именно узел, подпадающий под это правило, находится в каком состоянии:\nОтличие живых узлов от мертвых\nПервые строки соответствуют узлам в статусе «доступен» и отображают непрерывное время доступности, последние же соответствуют узлам в статусе «не доступен» и отображают время недоступности.\nУзлы, находящиеся тут, это все узлы, активность которых Zabbix зафиксировал. Реального сбора с них вполне может не идти!\nДалее, устанавливаем заббикс-клиент на узел, который мы хотим мониторить. Для этого на каком-то сервере точно также добавляет репозиторий, устанавливаем пакет zabbix-agent, после чего вносим правки в конфиг и перезапускает сервер. В конфиге я лично ограничусь следующими необходимыми и достаточными мне на первое время правками:\nServer=zabbix.yourcompany.ru\nServerActive=zabbix.yourcompany.ru\n#Hostname=Zabbix server\nHostnameItem=system.hostname\nHostMetadata=Linux\nСтрочку Hostname надо убрать любым способом, например закомментировать как в моем примере. Конечно, вы можете указать имя сервера и напрямую (и тогда не указывать HostnameItem), но на мой взгляд это неудобно потому, что тогда каждый конфиг будет уникальным, в данном же случае, все конфиги всех серверов оказываются строго идентичными, благодаря чему их можно раскладывать централизованно например при установке через ansible или любой другой механизм. А имя сервера будет браться из его собственного имени хоста, для работы с которым существует две удобные команды:\nОднако, пока новый агент в списке доступных серверов не появится. И чтобы это исправить надо произвести еще несколько действий. Во-первых, заходим в \"Alerts-Action-Autoregistration actions\", создаём новое действие («Create Action» в правом верхнем углу), которое по наличию в Metadata слова \"Linux\" будет добавлять хост в группу \"Linux Servers\", при этом там создаём условие (\"Add\" в поле \"Condition\")\nА после нажатия кнопки сохранения (\"Add\") переходим на вкладке \"Operations\" и там также жмём \"Add\", добавляем соответствующее действие и опять сохраняем.\nТут кстати важно заметить, что в отличие от старых версий, сейчас есть возможность добавлять узлы не только по метаданным, но также по PSK-ключам, что конечно гораздо безопаснее и о чём подробнее вы можете почитать тут: \nhttps://www.zabbix.com/documentation/current/en/manual/discovery/auto_registration#secure-autoregistration\nЯ же не буду на этом останавливаться потому, что если сервер находится в закрытой корпоративной сети, что является типовой схемой применения системы мониторинга, такие меры безопасности на мой взгляд являются избыточными.\nВо-вторых, заходим в \"Alerts-Action-Discovery actions\", там создаём новое \"Discovery action\" примерно с такими условиями, как на картинке выше и примерно с такими действиями, как на картинке ниже.\nИ опять видим что-то новое! Что за «Set host inventory mode?»- спросите вы — Оказывается, если раньше правила автоопределения просто работали, то сейчас мало того, что их поделили на 2 группы, так еще по умолчанию их выполнение не может добавить узел в Inventory! И исправить эту ситуацию можно одним из двух путей: либо через дополнительный пункт в действиях правила автоопределения, как на изображении выше, либо через смену поведения по-умолчанию, которая производится в Administration-General-Other-Default host inventory mode.  \nТеперь те Linux-сервера, на которых установлен Zabbig agent, будут автоматически добавляться в Inventory hosts, хотя и не сразу… В начале узел должен пропинговаться и стать «Доступен», потом к нему попытается сходить правило Autoregistration action, оно уточнит, точно ли агент настоящий, потом хост он будет добавлен в список узлов Data collection-Hosts, потом к нему будет применено Discovery action и только после этого узел появится в Inventory и начнёт отображаться его доступность. При параметрах, которые приведены в примере, это должно занять менее полутора часов.\nЕсли статья окажется интересна и наберёт положительные отзывы, я напишу как подружить Zabbix с VmWare ESXi.\nА если будут просто какие-то пожелания или возражения -- пишите, с удовольствием исправлю. Я -- не частый автор статей для Хабра, потому с большим вниманием отнесусь к критике и постараюсь исправить возможные ошибки. Рука не набита, как говорится.\n \n ",
    "tags": [
        "zabbix",
        "centos 8"
    ]
}
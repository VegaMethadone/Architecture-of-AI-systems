{
    "article_id": "726692",
    "article_name": "PokiToki: Удобный GPT-бот в телеграме",
    "content": "За последние месяцы только ленивый не сделал телеграм-бота, который работает с API OpenAI. Были такие статьи и на Хабре.\n\r\n\nНаписать игрушечного ChatGPT-бота можно хоть за час. А вот сделать его удобным в повседневной работе заметно сложнее. Я занимался этим последние несколько недель и хочу показать, что получилось.\n\r\n\nИтак, \npokitoki\n — это чат-бот на Python, который использует языковую модель ChatGPT (GPT-3.5 или GPT-4) от OpenAI. Вот некоторые его возможности:\n\r\n\nРаботает в личных и групповых чатах.\n\r\n\nОтвечает на прямые вопросы, упоминания и форварды.\n\r\n\nЧитает внешние ссылки (статьи, код, данные).\n\r\n\nПоддерживает шорткаты (команды для нейросети).\n\r\n\n\r\n\nЛичные чаты\n\r\n\nВ личном чате бот работает как ваш персональный ассистент.\nЧтобы разрешить личные чаты с другими пользователями, пропишите их в настройке \ntelegram_usernames\n.\n\r\n\nПо умолчанию у бота ужасная память, поэтому он не помнит предыдущие реплики. Но можно задавать уточняющие вопросы через ответную реплику (\nCtrl/Cmd + ↑\n на десктопе) или плюсик:\n\r\n\n\r\n\n \n \nуточнение через ответ\n \n\r\n\n \n \nи через плюсик\n \n\r\n\n\r\n\n \nПочему так?\n\r\nВ большинстве случаев люди задают нейросети несвязанные вопросы. Поэтому по умолчанию каждый вопрос начинает диалог «с чистого листа».\n\r\n \nЕсли человек хочет продолжить диалог, то отвечает на сообщение собеседника — это стандартная для телеграма механика. Поэтому вопрос, заданный в ответ на сообщение бота, считается продолжением беседы.\n\r\n \nЯ рассматривал альтернативный вариант: по умолчанию считать вопросы одним диалогом и принудительно завершать его командой \nreset\n. Но оказалось, что так менее удобно.\nКоманды:\n\r\n\n/retry\n — переспрашивает последний вопрос;\n\r\n\n/help\n — показывает помощь;\n\r\n\n/version\n — показывает информацию о боте.\n\r\n\n\r\n\nГруппы\n\r\n\nЧтобы бот ответил на вопрос в группе, тегните его на уже заданном вопросе или задайте прямой вопрос:\n\r\n\n\r\n\n \n \nтегните бота на чужом сообщении\n \n\r\n\n \n \nили задайте прямой вопрос\n \n\r\n\n\r\n\nЧтобы бот отвечал всем участникам группы, пропишите ID группы в настройке \ntelegram_chat_ids\n. Если настройка не задана, бот игнорирует вопросы от всех участников группы, кроме перечисленных в \ntelegram_usernames\n.\n\r\n\nЕсли не знаете ID группы, команда \n/version\n поможет его выяснить:\n\r\n\nChat information:\n- id: -1001405001234\n- title: My Favorite Group\n- type: supergroup\n...\n\r\n\nВнешние ссылки\n\r\n\nЕсли скормить ChatGPT ссылку, она либо начнет галлюцинировать, либо признается, что не может прочитать:\n \nQ: What is the content of \nsqlime.org/employees.sql\n? Make no assumptions.\n \nA: As an AI language model, I cannot access external URLs on the internet.\nЧтобы решить эту проблему, бот предварительно загружает текст по ссылке и подает на вход нейросети:\nПоддерживает только текстовый контент (статьи, код, данные), но не PDF, изображения или аудио.\n\r\n\nШорткаты\n\r\n\nИспользуйте короткие команды, чтобы сэкономить время и заставить бота сделать что-то конкретное с заданным вопросом.\n\r\n\nНапример, попросите проверить и исправить текст командой \n!proofread\n:\nВот преднастроенные шорткаты:\n\r\n\nbugfix\n чинит проблемы в коде.\n\r\n\nproofread\n вычитывает и исправляет текст.\n\r\n\ntranslate\n переводит текст на английский.\n\r\n\nsummarize\n резюмирует длинный текст.\n\r\n\nМожно добавлять собственные шорткаты, см. примеры в \nconfig.example.yml\n.\n\r\n\nДругие полезные штуки\n\r\n\nУдобство работы с ботом складывается из мелочей. Вот некоторые ситуации, в которых он экономит время и действия.\n\r\n\nФорварды\n\r\n\nДопустим, вы получили сообщение от коллеги или прочитали пост на канале, и хотите задать по нему вопрос. Просто перешлите сообщение боту и ответьте на уточняющий вопрос, который он задаст:\n\r\n\n\r\n\n \n \nперешлите сообщение боту\n \n\r\n\n \n \nи сформулируйте задачу\n \n\r\n\n\r\n\nОтвет вложением\n\r\n\nБывает, что ответ нейросети не вмещается в максимальный размер сообщения, предусмотренный телеграмом. В этом случае бот не сломается и не будет спамить вас сообщениями. Вместо этого пришлет ответ вложенным markdown-файлом:\n\r\n\nИсправленный вопрос\n\r\n\nЧтобы перефразировать или дополнить последний вопрос, отредактируйте его (\n↑\n на десктопе). Бот заметит это и ответит на уточненный вопрос.\n\r\n\nИнформация о боте\n\r\n\nКоманда \n/version\n показывает подробную информацию о чате, боте и настройках нейросети:\n\r\n\nChat information:\n- id: -1001405001234\n- title: My Favorite Group\n- type: supergroup\n\nBot information:\n- id: 5930739038\n- name: @pokitokibot\n- version: 70\n- usernames: 6 users\n- chat IDs: []\n- access to messages: True\n\nAI information:\n- model: gpt-3.5-turbo\n- history depth: 3\n- shortcuts: ['bugfix', 'proofread', 'summarize', 'translate']\n\r\n\nКак установить\n\r\n\nПолучить ключ для \nOpenAI API\n\r\n\nПолучить токен для телеграм-бота от \n@BotFather\n\r\n\nСкопировать \nconfig.example.yml\n в \nconfig.yml\n и прописать там ключи.\n\r\n\nЗапустить бота.\n\r\n\ndocker compose up --build --detach\n\r\n\nОстановить бота:\ndocker compose stop\n\r\n\nДля старых версий Docker используйте \ndocker-compose\n вместо \ndocker compose\n.\n\r\n\nИсходники\n\r\n\nЯ старался писать понятный модульный код, с комментариями и тестами.\nКраткое описание модулей:\n\r\n\nbot\n стартует бота и обрабатывает полученные от пользователя команды и сообщения. Логику ответов на вопросы делегирует модулям \nquestions\n, \nfetcher\n и \nai.chatgpt\n.\n\r\n\nquestions\n обрабатывает вопрос от пользователя перед тем, как задать его нейросети. Отличает обычные вопросы от уточняющих, обрабатывает упоминания в группе. Активирует шорткаты с помощью модуля \nshortcuts\n. \n\r\n\nshortcuts\n извлекает шорткат из текста вопроса и заменяет его на конкретную команду нейросети.\n\r\n\nfetcher\n извлекает ссылки из вопроса, подтягивает их содержимое и подставляет в текст вопроса.\n\r\n\nmodels\n предоставляет обертку для истории сообщений пользователя.\n\r\n\nai.chatgpt\n предоставляет обертку над API OpenAI.\n\r\n\nconfig\n загружает настройки из файла \nconfig.yml\n.\n\r\n\nИсходники на гитхабе\n\r\n\nБуду рад, если бот вам пригодится. По отзывам, он неплохо подходит как для индивидуального использования, так и для небольших сообществ (по интересам или рабочих).\n \n ",
    "tags": [
        "chatgpt",
        "gpt-3.5",
        "gpt-4",
        "openai",
        "telegram",
        "telegram bot",
        "python",
        "open source"
    ]
}
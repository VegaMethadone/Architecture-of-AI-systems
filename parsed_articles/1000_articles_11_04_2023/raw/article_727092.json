{
    "article_id": "727092",
    "article_name": "Как написание кода с помощью машинного обучения всё (не)изменит",
    "content": "\r\n\n\r\nАстрологи объявили неделю (месяц?, год?) кухонной аналитики по AI и ML на Хабре. Настало время для этой статьи, которую я писал два года назад. И вот что удивительно — она должна была устареть, однако не устарела.\n\r\n\n\r\nОсновной урок истории заключается в том, что уроками истории, как правило, пренебрегают. Этот афоризм описывает в первую очередь политику, но вполне неплохо применим и к технологиям. \n\r\n\n\r\nЕсть много технологий, поменявших мир, но поменяли они его не за счёт более быстрых лошадей, как говорил известный инноватор Форд. Новая страница истории начинается, когда технологии начинают решать задачу новым способом. Порой даже полностью изменяя её, как это было с лошадьми и автомобилями.\n\r\n\n\r\nТак что же такого революционного дали нам нейросети применительно к программированию?\n\r\n\n\r\nВопрос кажется наивным. Ну серьёзно, это же огромный шаг вперёд — генерация кода по словесному описанию!\n\r\n\n\r\nНа самом деле нет, это не огромный шаг вперёд, это лишь крохотный шажок. Собственно говоря, всё, что мы имеем сейчас, было вполне доступно лет десять назад, просто не было настолько на виду. Узкоспециальные же задачи по написанию кода были реализованы куда как раньше. Сделать API и базу данных по чуть более формальному описанию, чем сейчас это требуется для ChatGPT — перечисление параметров и типов — можно уже лет тридцать как. \n\r\n\n\r\nДавайте устроим небольшую ретроспективу. Итак, много лет тому назад программирование перешло от перекидывания перемычек на плате к использованию перфокарт. Всеобщее ликование, радость, прогнозирование стремительного роста числа программистов.\n\r\n\n\r\nНе выросло.\n\r\n\n\r\nСледующий этап — написание кода на клавиатуре. Теперь можно исправлять ошибки без перфоратора и стопки карт. Вот теперь любой мало-мальски образованный человек сможет писать программы.\n\r\n\n\r\nНе смог.\n\r\n\n\r\nЯзыки программирования высокого уровня. Даже не обязательно знать коды прерываний и особенности работы процессора. Любая кухарка сможет управлять компьютером! \n\r\n\n\r\nНе смогла.\n\r\n\n\r\nПоявляются специализированные среды разработки. Автодополнение, подсветка синтаксиса, навигация по коду и прочие сниппеты. Теперь даже помнить все конструкции языка не обязательно! Программисты вообще будут не нужны!\n\r\n\n\r\nНужны.\n\r\n\n\r\nВеб входит в жизнь человечества. Любой компьютер может выполнять программы на лету, твой сервер может обслуживать клиентов со всего мира на любой операционной системе, виртуализация позволяет абстрагироваться от физической реализации. Теперь даже дети могут писать несложные программы!\n\r\n\n\r\nНе смогли. \n\r\n\n\r\nКонструкторы сайтов, no-code, вот это всё! Теперь ВООБЩЕ не нужно знать как работает компьютер, не нужно знать ни одного языка программирования, надо только желание сделать сайт!\n\r\n\n\r\nВсё ещё нужно.\n\r\n\n\r\nСпециально обученный чат-бот напишет всё за вас! Только скажите, что вам надо и готово!\n\r\n\n\r\n⬆ Мы находимся здесь.\n\r\n\n\r\nСправедливости ради, все эти конструкторы и нокоды взлетели, но очень невысоко. Никакой проект сложнее лендинга с их помощью никто успешно не реализовал. А те, кто реализовал, всё-таки писали код, причём много, больно и сложно. Потому, что исправление ошибок сложно, как приседания со штангой, потому, что производительность на уровне почты России, потому, что масштабируемость как у сталелитейного комбината, потому, что нестандартный функционал добавить так же непросто, как на космическом корабле. Много всякого было отдано в обмен на лёгкость создания минимального приложения.\n\r\n\n\r\nИ вот тут мы вплотную подошли к проблеме написания кода с помощью чатботов. Уже много раз было сказано, что это магия — что-то делается, но никто не знает как. Развернём чуть-чуть это высказывание.\n\r\n\n\r\nВо-первых, эффективность решения, как минимум, неочевидна. Да, бот написал вам сайт, он даже работает. Как быстро он работает, насколько он надёжен, как много пользователей он может обслуживать в час, сколько ресурсов ему надо и т.д.? Если попросить бота написать клон Facebook и он его напишет, сколько будет открываться ваша личная страница?\n\r\n\n\r\nВо-вторых, после определённого уровня сложности, время на внесение правок начинает расти экспоненциально. Не знаю, в курсе ли вы, но описание задачи в сложном проекте может иметь сотни страниц. Это для человека, причём для человека в контексте. Предполагаю, что на сегодняшний день предел написания кода с помощью бота — это приложение уровня инженерного калькулятора. Мысленный эксперимент: попробуйте описать все алгоритмы загрузки скриптов, фотографий, содержимого других соцсетей, кэширования и прочего на странице Facebook так, чтобы бот вас понял.\n\r\n\n\r\nВ-третьих, мы не знаем, какие сторонние эффекты создаёт такое приложение. Это магия, помните? Подтянуть картинки, защищённые авторским правом, перепутать негров и горилл (реальная история), вставить мат в тексты, выбрать капчу повышенной сложности, нарушить регуляцию персональных данных, распространять майнеры, вставить рекламу порнхаба — эти и многие другие опции могут быть вам доступны. А могут и не быть. Но пока весь сайт тщательно не изучите, не узнаете.\n\r\n\n\r\nВ общем, не так уж и далеко от нокода. Как-то работает, но как именно мы не знаем, чтобы работало именно так, как надо, придётся приложить много усилий.\n\r\n\n\r\nТо есть, получается, что для получения хорошего приложения надо описать принцип его работы в деталях. Но минуточку!.. Ведь именно этим и занимаются программисты, просто используют специальный язык!\n\r\n\n\r\nТут можно возразить, что теперь-то можно программы писать на русском/английском/суахили/вставьте нужное. Однако, языки программирования, как правило, на порядки эффективнее естественных в описании алгоритмических задач. А ещё надо помнить, что результат изменения описания непредсказуем. Потому что магия. И надо все возможные непредсказуемости прописывать.\n\r\n\n\r\nЕсли попробовать описать это языком математики, то получим что-то примерно такое:\n\r\n \n\r\n\n\r\nПосле красной точки, которую я бы оценил примерно в 10 цикломатической сложности, разрыв будет расти стремительно. Несомненно, что за счёт более умных моделей эта точка будет сдвигаться всё дальше и дальше, например, можно будет написать что-то типа «Создай стандартную систему прав пользователей» вместо описания ролей. \n\r\n\n\r\nНо всегда будет существовать такое значение сложности, при котором реализация задачи путём словесного описания станет слишком объёмна, а после некоторого значения и вовсе невозможна, так как превысит возможности человеческой памяти.\n\r\n\n\r\nДа, человечество получило отличный инструмент для решения несложных задач. Да, этот инструмент будет становиться всё более и более совершенным.\n\r\n\n\r\nНо тот момент, когда словесное описание задачи станет настолько эффективным, что победит написание кода на языке программирования, представляется мне куда более далёким, чем моя предполагаемая пенсия.\n\r\n\n\r\nПусть сравнение сильно некорректно, но да, мы получили армию бесплатных программистов. Бесплатных, глупых, неопытных, со склерозом, шизофренией и лёгкой формой дебилизма. А, ещё они под кислотой. \n\r\n\n\r\nУдачи вам с постановкой задачи.\n\r\n\n\r\nЕсли вы читаете статью, лишенную практической ценности, то там обязательно должна быть ссылка на канал. А чем я не гондольер? \n\r\n\n\r\n\nПодписывайтесь на мой канал\n.\n \n ",
    "tags": [
        "программирование",
        "алгоритмы",
        "никто не читает тэги",
        "шок срочно в номер"
    ]
}
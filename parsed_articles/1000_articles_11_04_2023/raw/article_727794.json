{
    "article_id": "727794",
    "article_name": "Создаем клон Instagram при помощи Flutter и Feeds. Часть 1",
    "content": "Привет! Ранее я уже рассказывал, что активно занимаюсь развитием своего стартапа в сфере ЖКХ \nDom24x7\n, где люди могут общаться друг с другом, решать возникающие бытовые проблемы, а также взаимодействовать с УК/ТСЖ (подробнее можно почитать \nтут\n). Одним из функционалов, который доступен пользователям, это возможность вести свои личные и тематические блоги. Долго думал как эта возможность должна выглядеть, проводил опросы среди текущих пользователей и знакомых и пришли к выводу, что это должно быть что-то по типу Instagram*.\nВ интернете нашел прекрасную статью как сделать клон на Flutter. Конечно для себя пришлось ее переосмысливать в части бэкенда, так как не планировал использовать сторонние решения и взял только мобильную частью с доработками, но и это сильно помогло в развитии проекта.\nВам же представляю перевод первой части статьи (из-за объемности разбил на три части), где дана общая информация о том что будет сделано и первичные настройки приложения.\nИтак...\nВ этой статье мы расскажем как вы можете с легкостью создать клон Instagram* при помощи Stream Feeds и Flutter.\nПодойдя к вопросу с «максимальным креативом», мы решили назвать наш клон \nStream-agram\n. Вы также узнаете многое про основные принципы работы с Flutter, и как с его помощью вы сможете улучшить анимации, жесты, переходы, а также управление состоянием.\nВ видео, \nприкрепленном ниже\n, мы полностью и пошагово проходимся по содержанию данной статьи и приводим дополнительные инструкции по коду. Если вы застряли при прочтении или предпочитаете видео формат, то видео ниже как раз для вас!\nПри помощи нашего клона вы сможете:\nвходить в профиль под разными аккаунтами;\nдобавлять и изменять главное фото профиля;\nвыкладывать посты в своем профиле (в данном контексте посты = действия);\nподписываться на других пользователей и отписываться от них;\nдобавлять комментарии и ставить лайки (реакции).\nInstagram* это сложное приложение и мы не надеемся на то, что мы сможем полностью повторить его, но мы сделаем для этого все возможное, и в процессе, создадим замечательное приложение на Flutter, где будут реализованы анимации, жесты, управление состоянием, а также переходы между страницами.\nНезависимо от того являетесь ли вы новичком или опытным Flutter-разработчиком, в этой статье вы найдете что-то полезное для себя. По завершению статьи вы узнаете:\nКак аккуратно структурировать и организовать ваш код;\nКак использовать Provider и основные компоненты Flutter для управления состоянием приложения;\nКак реализовать тематическое оформление интерфейса (поддержка ночного и дневного режима);\nКак реализовать переход между страницами;\nКак создать и кастомизировать hero анимации;\nКогда использовать явные, а когда неявные анимации;\nКак создать свою собственную явную анимацию;\nКак оптимизировать производительность;\nМного информации про структуру Flutter и множество полезных советов;\nПолезную информацию про методы расширения;\nКак использовать \nTextEditingController\n, \nPageController\n и \nFocusNode\n;\nКак применять \nAutomaticKeepAliveClientMixin\n для кеширования страниц.\nЧто такое лента активности?\nЧтобы понять что такое Stream \nFlutter Feed SDK\n предлагает своим пользователям, сначала нужно разобраться что же из себя представляет \nлента активности\n.\nЧасто именуемая просто лентой оповещений или лентой обновлений, лента активности представляет собой список действий, которые совершает пользователь на сайте или в приложении и который обновляется в режиме реального времени. Лента активности отображает информацию о том, кто подписался на пользователя, кто поставил ему лайк, прокомментировал пост или поделился постом пользователя.\nВ то время как Stream упрощает работу с лентой активности в целом, Flutter Feed SDK делает ее проще с точки зрения фронтенда. \nСоздаем клон Instagram* при помощи Feeds\nДавайте рассмотрим как лента активности будет работать в контексте создания клона Instagram*. Вы создадите ленту, содержащую фото посты, генерируемые пользователем (действия). Эти посты будут также отражать реакции пользователя в форме лайков и комментариев. Пользователи должны будут иметь возможность подписываться на других пользователей, в которых они заинтересованы, и просматривать их хронологическую ленту. Они также должны будут иметь возможность видеть посты, которые опубликовали сами.\nРазобравшись с рядом более сложных принципов и концептов, мы, наконец, можем начать создавать наш клон.\nСоздайте новое приложение на Flutter\nПервым шагом на нашем пути будет создание нового Flutter приложения.\nНа вашем терминале выберите произвольный каталог и выполните следующую команду:\n$ flutter create stream_agram\nВы можете задать абсолютно любое имя для вашего приложения.\nОткройте папку в выбранной вами IDE.\nЗависимости пакетов\nОткройте файл \npubspec.yaml\n и добавьте следующие зависимости:\ndependencies:\n  flutter:\n    sdk: flutter\n  cupertino_icons: ^1.0.2\n  stream_feed_flutter_core: ^0.7.0+1\n  provider: ^6.0.2\n  google_fonts: ^2.3.1\n  image_picker: ^0.8.4+9\n  cached_network_image: ^3.2.0\n  transparent_image: ^2.0.0\n  jiffy: ^5.0.0\n⚠️ \nВнимание\n: на момент прочтения этой статьи могут быть доступны уже обновленные версии этих пакетов. Если вы хотите воспроизвести данную инструкцию точь в точь, то будет безопаснее использовать версии пакетов, приведенные выше. Как только вы ознакомитесь с кодом выше, вы можете запустить \nflutter pub outdated\n, чтобы посмотреть какие пакеты требуют обновления. \nУстановка Stream\nПеред тем как перейти к части статьи, затрагивающей сам код, вам необходимо будет создать новое приложение в Stream, для того чтобы работать с инфраструктурой ваших лент. \nСоздать новое приложение в Stream довольно просто и это не займет у вас много времени. Это также бесплатно и не требует никакой информации о вашей банковской карте. Вы можете выбрать опцию 30-дневного пробного периода или зарегистрировать специальный аккаунт (Maker Account) для того чтобы получить бесплатный доступ к Stream Chat (чат сервис) на неограниченный период времени.\nШаг первый — создайте аккаунт\nЗарегистрируйтесь\n, чтобы начать.\nШаг второй — создайте приложение\nПосле регистрации, создайте новое приложение и присвойте ему имя:\nПерейдите в \nпанель инструментов\n;\nКликните на \nCreate App\n чтобы создать новое приложение;\nВ поле \nApp Name\n введите имя приложения (например - \nStreamagram\n);\nВыберите местоположение сервера в выпадающем списке \nFeeds Server Location\n;\nВ поле\n Environment \nвыберите\n Development\n;\nЗавершите создание приложение, кликнув на\n Create App\n.\nПосле создания приложения, оно должно отображаться во вкладке Apps на панели инструментов. Теперь вы можете вносить изменения в ваше приложение, создавать пользователей и группы, получать доступ к данным, и пользоваться множеством других продвинутых функций. Если вы хотите узнать больше про Feeds, воспользуйтесь документацией по \nссылке\n.\nШаг третий — создаем пользовательскую и хронологическую ленту как в Instagram*\nДля того, чтобы в вашем клоне пользователи имели возможность взаимодействовать с лентами таким же образом как в Instagram*, вы создадите две ленты, типа \nFlat \n(далее просто - флет ленты):\nпользовательскую;\nхронологическую.\nФлет ленты - это единственные ленты, на которые можно подписываться, и, соответственно, это подходящий вариант для нас, поскольку мы планируем добавлять в них посты (действия). Такие ленты можно также использовать для потребления (просмотра) действий из лент других пользователей, по принципу того, как это реализовано в основной ленте в Instagram*.\nКаждый пользователь в вашем приложении будет иметь свои собственные уникальные ленты. В пользовательской флет ленте пользователь будет размещать свои посты. Такие посты также называют действиями.\nХронологическая флет лента будет использоваться для того, чтобы подписываться на других пользователей и  просматривать их посты, а также для просмотра постов из своей собственной ленты.\nПодытожив, если вы зайдете в Stream-agram, пользовательская лента будет отображать все ваши посты (в вашем профиле), а хронологическая лента покажет посты пользователей (ленты), на которых вы подписаны.\n❓\nЗаметьте:\n вы можете присваивать этим лентам любые названия, но пользовательская (user) и хронологическая лента (timeline) - это стандартные названия, на которые вы будете позже ссылаться в вашем коде.\nЧтобы узнать больше про другие ленты, ознакомьтесь с \nдокументацией\n по разным типам лент (\nFlat\n, \nAggregated\n, \nNotification\n).\nТеперь, кликнете по кнопке \nAdd Feed Group\n и создайте две новые флет ленты. Задайте имя для первой ленты “\nuser\n\" (пользовательская), а для второй “\ntimeline\n” (хронологическая). Пример создания пользовательской ленты представлен ниже:\nПосле создания обоих лент, на своем экране вы должны увидеть следующую картину:\nОтлично! Ленты созданы. Теперь, если вы пролистаете немного вниз, вы увидите ключ доступа к вашему приложению (\nKey\n) и такой параметр как \nSecret\n (подробнее ниже).\nВаш ключ доступа (\nAPI Key\n) - это всего лишь идентификатор приложения и вы можете безопасно делиться им с другими пользователями. Что касается \nSecret\n, он отвечает за генерацию аутентифицированных пользовательских токенов и выполняет работу с операциями API. Значение вашего параметра \nSecret\n всегда должно находиться в безопасном месте, так как оно является эквивалентом пароля.\nПожалуйста, сохраните или запомните где вы можете посмотреть ваши значения \nKey\n и \nSecret\n, поскольку они понадобятся вам в следующем разделе.\nШаг четвертый - создаем фронтенд токены (токены аутентификации)\nСоздавать и обновлять пользователей при помощи Stream Feeds - просто. Однако, для того чтобы ваше приложение могло взаимодействовать с API Stream Feeds, вам необходимо создать токены аутентификации для валидации запросов к вашему серверу. В обычной ситуации, мы бы просто создали свое собственное бэкенд-приложение, которое бы выполняло различные, важные операции с сервером и отслеживало ваших пользователей.\nОднако, в целях демонстрации, для нашего приложения мы захардкодим всех пользователей вместе с их токенами.\n❗️\nВнимание: \nэто необходимо осуществлять только в среде разработки; ни в коем случае не выкладывайте токены в прод среду. \nStream Feed предлагает множество разных \nбэкенд-клиентов\n, включая Dart! Поскольку мы специализируемся на Flutter, для создания токенов мы будем использовать Dart.\nВ этом \nGithub репозитории\n вы сможете найти код, где \nDart вместе со stream-feed\n используются как сервер клиент для создания токенов аутентификации при помощи CLI.\nЕсли вам интересно как работает этот код, вы можете изучить его самостоятельно. Он достаточно простой и выполняет следующее:\nсчитывает ваш API key и Secret\nсчитывает имена ваших пользователей\nгенерирует коды аутентификации для указанных вами имен пользователей\nЧтобы запустить CLI, выполните следующее:\ngit clone https://github.com/HayesGordon/stream-feed-cli\ncd stream-feed-cli\ndart run\nСледуйте инструкциям.\nВы можете создать неограниченное количество пользователей в вашем инстаграм клоне и присвоить им любые имена какие вы захотите. Для нашего клона, мы создадим четырех пользователей со следующими именами (или по другому ID):\nsacha-arbonel\ngordon-hayes\nreuben-turner\nsahil-kumar\nПримите во внимание, что токены аутентификации для каждого пользователя будут использоваться в следующем разделе статьи.\nМы рекомендуем вам указать такие же имена пользователей, поскольку, в этом случае, вам не придется вносить какие-либо дополнительные изменения в коде.\nInstagram* - запрещенная в России социальная сеть.\nТакже предлагаю подписаться мой канал и на канал моего проекта:\nСсылка на канал проекта в телеграм: \nhttps://t.me/dom24x7\nСсылка на мой канал: \nhttps://t.me/evgaj\n \n ",
    "tags": [
        "dom24x7",
        "flutter",
        "dart"
    ]
}
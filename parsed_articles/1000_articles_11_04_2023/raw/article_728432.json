{
    "article_id": "728432",
    "article_name": "Конец тирании Outlook: HTML в почте без таблиц",
    "content": "\r\nПервый пункт \nруководства\n по разработке электронной почты MailChimp гласит: «Кодируйте всю структуру при помощи элемента table». В рекомендациях \nCerberus\n (вероятно, самого популярного шаблона HTML-писем) говорится: «В случае сомнений встройте ещё одну таблицу». Прогресс не дошёл даже до структур на основе float. Кодинг электронной почты — это коллекция обходных путей, хаков и устаревших неподдерживаемых HTML-элементов.\n\r\n\n\r\nОн долго был Диким Западом несогласованности, для решения задач на котором требовались тайные знания. Изучив таблицу поддержки на сайте look \nCan I Email\n (это аналог \nCan I Use\n для электронной почты), ты понимаешь, что клиенты электронной почты очень сильно различаются. Создание электронного письма для Apple Mail, Hey, Fastmail, Outlook for Mac, Proton Mail или Mail.ru не сильно отличается от кодинга современной веб-страницы. Однако, например, Yahoo Mail даже не поддерживает фоновые градиенты. Но гораздо сильнее, чем какой-либо иной клиент, электронной почте не давал вырваться из прошлого Outlook для Windows.\n\r\n\n\r\nOutlook для Windows во многом можно назвать \nInternet Explorer\n среди клиентов электронной почты. Десктопное приложение Outlook для Windows, наряду с приложением Windows Mail, было единственной причиной того, что разработчикам приходилось собирать электронные письма из HTML-таблиц. (Приложения Outlook для macOS, iOS и Android таких проблем не имеют.)\n\r\n\n\r\nИз-за Outlook современный код электронного письма выглядит \nпримерно так\n:\n\r\n\n\r\n\n    <tr>\n      <td class=\"pt-50 mpt-40 px-80 mpx-15\" style=\"padding-top:5 0px;padding-left:80px;padding-right:80px;\">\n        <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n          <tr>\n            <td class=\"pb-80 mpb-50\" style=\"padding-bottom:80px;\">\n              <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                <tr>\n                  <td class=\"text-18 lh-28 a-center mfz-16 mlh-26\" style=\"color:#24242c;font-family:Inter, Arial, sans-serif;font-size:20px;line-height:34px;\" align=\"left\">\n                    <br>\n                    <strong>MacBook Pro Winner</strong>\n                    <br>\n                    <br>First things first. During our pre-launch, we promised one lucky winner a brand-spanking-new MacBook Pro. M1 Chip and all.\n                    <br>\n                    <br>\n                    Well, now that Lemon Squeezy has officially launched it's time to announce the winner.\n                    <br>\n                    <br>\n                    <a href=\"#\" >Drum roll, please →</a>\n                    <br>\n                    <br>\n                    <br>\n                  </td>\n                </tr>\n              </table>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n    <!-- etc. -->\n\r\nТаблицы, вложенные в таблицы внутри таблиц…\n\r\n\n\r\nДля Outlook уже давно пришло время надлежащего апдейта, и \nего наконец выпустили\n. Новый Outlook перешёл с движка рендеринга Microsoft Word на движок Edge. Похоже, поддержка возможностей CSS в новом приложении Outlook идентична поддержке \noutlook.com\n, что стало огромным шагом вперёд.\n\r\n\n\r\n\n\r\nOutlook для Windows не поддерживал \nbackground-image\n — одно из самых старых и \nполезных CSS-свойств \n. Он не поддерживал \nborder-radius\n, flexbox, \nfloat\n, \nopacity\n, \noutline\n, \nz-index\n, анимированные GIF и целую кучу других функций. Даже поддержка \nwidth\n, \nmargin\n и \ndisplay: none\n была частичной и забагованной. Пользовательская база Outlook со временем уменьшалась, но он оставался третьим по популярности клиентом электронной почты. Outlook был поистине ужасным, но слишком важным, чтобы его игнорировать.\n\r\n\n\r\n\n\r\n\nДоля рынка клиентов электронной почты\n на февраль 2023 года, рассчитанная по более чем 1,3 миллиардам запусков в Litmus Email Analytics\n\r\n\n\r\nХотя некоторые пользователи продолжат использовать старые версии Outlook \nещё многие годы\n, у разработчиков есть убедительные причины двигаться вперёд как можно быстрее.\n\r\n\n\r\n\nНа мой взгляд, большинство проблем с #A11y и багов рендеринга в клиентах электронной почты вызвано необходимостью поддержки рендеринга Word в Outlook.\n\r\n\n\r\nЕсли мы устраним эту необходимость для разработчиков, то это облегчит жизнь огромного количества пользователей.\n\r\n\n\r\n— Марк Роббинс (@M_J_Robbins), \n5 января 2021 года\n\r\nGmail имеет ограничение размера HTML в 102 КБ. После этой границы он обрезает письмо словами \"[Message clipped]\" и добавляет ссылку для просмотра остальной части письма. Не нужно говорить, что это не особо удобно для пользователей и большинство из них, вероятно, не нажмёт на ссылку, поэтому часть содержимого письма останется непрочитанной многими получателями. Разметка структуры HTML-таблицы чрезвычайно объёмна, и отход от неё поможет перестать усекать сообщения в Gmail. Тем временем, код некоторых современных электронных писем представляет собой такой дикий хаос вложенных таблиц, что способен \nполомать Outlook\n.\n\r\n\n\r\nХотя скорость обработки электронных писем никогда не была так важна для сообщества разработчиков клиентов, как для веб-разработчиков во фронтенде, она должна повлиять на click-through rate и восприятие пользователями вашей компании. Старые версии Outlook для Windows — это единственный клиент, в котором нет поддержки изображений WebP (даже AVIF поддерживается в большинстве клиентов), а учитывая распространённое отсутствие поддержки элемента \n<picture>\n, подстройка под Outlook вредит производительности.\n\r\n\n\r\n\nСамые большие проблемы электронной почты сегодня\n\r\nКаждый месяц Litmus (популярный инструмент тестирования электронной почты) выпускает статистику по долям рынка клиентов электронной почты.\n\r\n\n\r\nС большим отрывом опережает всех конкурентов Apple Mail. Он по умолчанию поставляется со всеми устройствами Apple и, к счастью, обладает наилучшей поддержкой CSS среди всех клиентов электронной почты. Из 253 свойств HTML и CSS, перечисленных на Can I Email, Apple Mail поддерживает 234 (или 92%). Для примера, Gmail на iOS поддерживает только 92 (36%) из них.\n\r\n\n\r\nВот урезанная версия \nтаблицы оценок Can I Email\n, в которой показаны только самые популярные клиенты:\n\r\n\n\r\n\n\r\nСмерть структуры на основе таблиц не переносит автоматически электронную почту в современный мир. Существует множество CSS-свойств и значений, у которых по-прежнему отсутствует полная кросс-клиентская поддержка, в том числе:\n\r\n\n\r\n\n\r\n\nлинейные, радиальные и конические градиенты для \nbackground-image\n\r\n\nbox-shadow\n\r\n\ngap\n/\ncolumn-gap\n/\nrow-gap\n для размещения элементов в grid и flexbox\n\r\n\ngrid\n\r\n\nalign-items\n и \njustify-content\n\r\n\nobject-fit\n\r\n\nотносительное и абсолютное позиционирование\n\r\n\n\r\nСейчас самым проблемным клиентом является Gmail. Приложение Gmail поддерживает разные уровни CSS в зависимости от того, используете ли вы адрес электронной почты \n@gmail.com\n или сторонний адрес (\n@outlook.com\n, \n@yahoo.com\n и так далее). Уровень поддержки стилизации для сторонних аккаунтов минимален. Эти пользователи в меньшинстве, но они всё равно заслуживают поддержки.\n\r\n\n\r\n\nКак же теперь создавать электронные письма?\n\r\nЭто интересный вопрос. Если мы собираемся отказаться от HTML-таблиц и двигаться дальше, то нам нужно понять, что способны делать сегодня в электронной почте HTML и CSS.\n\r\n\n\r\n\nВо-первых, использовать div\n\r\nПри работе со стандартным элементом \n<div>\n не будет возникать проблем, но это не значит, что электронная почта поддерживает весь остальной HTML. Следующие элементы HTML5 поддерживаются не всеми клиентами электронной почты, поэтому вместо них нужно использовать \n<div>\n.\n\r\n\n\r\n\n\r\n\n<article>\n\r\n\n<aside>\n\r\n\n<details>\n\r\n\n<figcaption>\n\r\n\n<figure>\n\r\n\n<footer>\n\r\n\n<header>\n\r\n\n<main>\n\r\n\n<mark>\n\r\n\n<nav>\n\r\n\n<section>\n\r\n\n<summary>\n\r\n\n<time>\n\r\n\n\r\nДругие HTML-элементы, такие как заголовки (\n<h1>\n, \n<h2>\n, etc.), параграфы (\n<p>\n) и списки (\n<ul>\n, \n<li>\n), поддерживаются везде.\n\r\n\n\r\n\nНам всё ещё (как будто) нужен встроенный CSS\n\r\nПодавляющее большинство клиентов электронной почты поддерживает тэги \n<style>\n, однако есть несколько пограничных случаев. Если переслать письмо в десктопную версию электронной почты Gmail, то все тэги \n<style>\n в пересланной копии письма будут удалены. Аккаунты сторонней электронной почты, используемые с приложением Gmail, тоже не поддерживают тэг \n<style>\n.\n\r\n\n\r\nТэг \n<style>\n нужен для определения таких вещей, как \nмедиа-запросы\n, \n:hover\n \nстили\n и \nобъявлений @font-face\n, потому что их нельзя определить встроенным CSS. Для всех остальных стилей лучше продолжить использовать встроенный CSS, чтобы охватить максимально широкую аудиторию.\n\r\n\n\r\n\nА что насчёт AMP для электронной почты?\n\r\n\nAMP — это одно из худших событий, случившихся в вебом\n. В 2018 году сотни известных людей из мира веб-стандартов и фронтенд-разработки \nподписали письмо с критикой Google\n за использование своей власти для принуждения компаний к применению этой технологии.\n\r\n\n\r\nТеренс Иден сообщил с совещания AMP Advisory Committee:\n\r\n\n\r\n\nМы много раз слышали, что издателям не нравится AMP. Они ощущают, что вынуждены использовать его, в противном случае им не попасть в карусель новостей Google, находящуюся прямо наверху поисковых результатов.\n\r\nИ хотя AMP для веба справедливо получил плохую репутацию, AMP для почты имеет гораздо больше плюсов, чтобы оправдать своё существование.\n\r\n\n\r\n\nДинамические электронные письма\n\r\nВсе клиенты электронной почты блокируют JavaScript в письмах с HTML. Вместо выполнения произвольного скрипта AMP предлагает ограниченную альтернативу. Это открывает новые возможности, которые ранее были невозможны.\n\r\n\n\r\nВы когда-нибудь отвечали на приглашение на мероприятие, не выходя из письма? Это стало возможно благодаря AMP.\n\r\n\n\r\n\nУведомление об обновлении \n@gmail\n! Теперь вы можете ответить на приглашение на мероприятие, оставить ответ на комментарий или просмотреть каталог непосредственно из входящих.\n\r\n\n\r\n— Google Design (@GoogleDesign) \n27 марта 2019 года\n\r\nБлагодаря AMP пользователи могут выполнять действия внутри письма даже без необходимости нажимать на ссылку.\n\r\n\n\r\n\nОтправка писем с AMP\n\r\nДля отправления писем с AMP ваш поставщик услуг электронной почты должен поддерживать AMP. \nДовольно большая их часть имеет такую поддержку\n, но определённо не все. Также нужно будет зарегистрироваться в Yahoo и Google.\n\r\n\n\r\nДля получения писем с AMP получатель должен использовать Yahoo, Gmail, AOL или Mail.ru. Необходимо отправлять и AMP-версию, и HTML-версию писем. HTML-версия необходима для получателей, которые пользуются Apple Mail, Outlook и любыми другими входящими без поддержки AMP.\n\r\n\n\r\n\nAMP обеспечивает возможность современной стилизации\n\r\nХотя в качестве основного преимущества позиционировали интерактивные возможности AMP, вероятно, лучшая особенность AMP — это его согласованность. AMP для почты реализует чётко заданное множество возможностей CSS. В письме с AMP вы можете использовать современный CSS и разметку, будучи относительно уверенным в том, что оно отрендерится одинаково в Gmail, Yahoo и любом другом клиенте, поддерживающем AMP. Для тех, кому приходилось выполнять контроль качества электронной почты, это важный аспект. Существует целая индустрия, построенная на тестировании HTML-писем, обусловленная огромным количеством несогласованностей в разных клиентах. Отказ от всего этого — одна из самых привлекательных черт AMP.\n\r\n\n\r\nКлиенты электронной почты используют санитайзер, вырезающий определённый код в целях безопасности. Если позволить любому произвольному CSS выполнять такие действия, как абсолютное позиционирование и \nz-index\n, то отправитель сможет наложить собственный контент поверх интерфейса Gmail. Большинство клиентов электронной почты не рендерит письма в iframe, в то время как письма с AMP всегда рендерятся в iframe. Это меняет отношение к безопасности, поскольку Google и другие клиенты могут менее строго вырезать код из писем (хотя стоит учесть, что санитайзер CSS в Gmail не обновлялся уже довольно давно, в то время как AMP получил второе дыхание). Именно поэтому два самых плохих для HTML и CSS клиента, Yahoo и Gmail, способны рендерить современную разметку и стили в AMP.\n\r\n\n\r\nYahoo и Gmail — это единственные популярные клиенты, в которых отсутствует поддержка, например, \nflex-wrap\n, \nalign-items\n и \njustify-content\n. Не учитывая интерактивные возможности AMP, мы можем использовать AMP как способ применения современного CSS. Кодинг двух разных типов писем может показаться обременительным, однако бОльшая часть валидного кода HTML-писем является валидным кодом AMP с некоторыми незначительными различиями (не допускается использование \n!important\n, AMP использует вместо тэга \n<img>\n тэг \n<amp-img>\n).\n\r\n\n\r\nРедактор кода \nParcel\n, специально спроектированный для электронной почты, имеет кнопку \n«Generate AMP from your HTML»\n, автоматизирующую этот процесс. Она работает хорошо, однако требует ручного редактирования. При работе с HTML-письмами я вручную встраиваю CSS, чтобы знать, что нужно переопределить при помощи \n!important\n внутри медиа-запроса (\n!important\n требуется для переопределения встроенного стиля). Parcel удаляет все объявления \n!important\n, потому что они не валидны в AMP, то есть код внутри медиа-запроса перестаёт работать. Необходимо вручную брать все встроенные стили и перемещать их в блок \n<style>\n внутри \n<head>\n.\n\r\n\n\r\n\nAMP имеет свои недостатки\n\r\nЭто шаг в нужном направлении, но он всё ещё далёк от идеала:\n\r\n\n\r\n\n\r\n\nписьма с AMP существуют только тридцать дней. После этого они откатываются к отображению обычного письма с HTML. Большинство людей прочитает ваше письмо или сразу же, или никогда, но это всё равно неидеально.\n\r\n\nЕсли перенаправить письмо с AMP, даже в другие входящие, поддерживающие AMP (например, Gmail или Yahoo), то получатель получит только стандартную HTML-версию.\n\r\n\nAMP не поддерживает встроенный SVG.\n\r\n\nПисьма с AMP не поддерживают \n@font-face\n, поэтому можно использовать только шрифты в системе получателя.\n\r\n\nAMP поддерживает CSS-переходы, но не CSS-анимации (\n@keyframes\n).\n\r\n\nНет поддержки псевдоэлементов \n::before\n или \n::after\n.\n\r\n\n\r\nAMP для электронной почты выглядит немного устаревшим, но не стоит списывать его со счетов. Google печально известна убийством собственных проектов, но об AMP для почты я не волнуюсь. User experience собственных продуктов Google (Google Calendar и так далее) получил выгоду от AMP, поэтому отказ от его поддержки негативно повлияет на собственные сервисы корпорации.\n\r\n\n\r\n\nЗаключение\n\r\nМир электронной почты движется медленно, но в правильном направлении. \nEmail Markup Consortium\n недавно принял решение о стимулировании повышения согласованности между клиентами; надеюсь, они возымеют успех, ведь путь предстоит ещё долгий.\n \n ",
    "tags": [
        "outlook",
        "yahoo mail",
        "gmail",
        "mail.ru",
        "apple mail",
        "электронная почта",
        "email",
        "html-верстка писем"
    ]
}
{
    "article_id": "727478",
    "article_name": "Знакомимся с Notion Ai",
    "content": "Что такое Notion AI\nhttps://www.notion.so/product/ai\n - официальный сайт.\nВсем привет. В этой статье мы будем говорить о Notion AI - новой языковой модели, которая недавно была представлена в мире искусственного интеллекта.\nNotion AI встроен в Notion, который многие программисты используют для документации и ведения проектов.\nСамое замечательное в Notion - это бесплатная версия, доступная в России без VPN\n.\nЭто огромный плюс по сравнению с шумным chat GPT. \nМногие уже пробовали chat GPT и знают, что в бесплатной версии чат очень медленный и не всегда доступен. С Notion AI таких проблем нет.\nNotion - это мощный многофункциональный инструмент, но сейчас давайте разберем, что же такое Notion AI.\nNotion AI - это новая языковая модель глубокого обучения, которая улучшает способность машинного обучения в обработке естественного языка и может понимать тексты на нескольких языках одновременно.\nОна обладает высокой точностью и умеет создавать тексты, соответствующие определенным правилам и стилям.\nNotion AI нейтральна по отношению к полу, расе и другим социальным факторам, что является важным качеством.\nОна может быть использована для создания контента для сайтов и социальных сетей, автоматического перевода текстов, анализа и классификации текстов, а также для создания автоматических ответов на письма.\nNotion AI имеет простой и понятный интерфейс, может распознавать сленг и неформальные выражения, способна генерировать тексты разной длины и стиля, а также улучшить качество переводов.\nКак Notion AI может помочь программисту\nNotion AI помогает в обучении:\nNotion AI может использоваться для автоматического создания набора учебных материалов на основе конкретной темы. Это может быть полезно для программистов, которые хотят изучать новые языки программирования или библиотеки.\nNotion AI может помочь в автоматическом создании документации по коду. Это особенно полезно, когда код разрабатывается в команде, и каждый член команды должен иметь доступ к актуальной документации.\nКак Notion AI помогает в работе:\nNotion AI может использоваться для автоматического создания макетов интерфейса пользователя на основе заданных параметров. Это позволяет быстро создавать прототипы и экономить время при проектировании.\nNotion AI может помочь в автоматической генерации кода на основе заданных параметров. Это может ускорить процесс разработки и уменьшить вероятность ошибок.\nNotion AI может использоваться для анализа кода и выявления потенциальных уязвимостей и ошибок.\nКак Notion AI пишет код?\nВ отличие от других языковых моделей, Notion AI была обучена на огромном количестве реального кода и может писать код, который выглядит так, как будто его написал человек. Более того, благодаря тому, что Notion AI обучена на коде с открытым исходным кодом, она может понимать различные языки программирования и библиотеки.\nКонечно, Notion AI не является идеальным инструментом для написания всего кода, и даже самые продвинутые алгоритмы могут иметь ограничения и ошибки. Тем не менее, Notion AI может значительно ускорить процесс написания кода, а также помочь избежать некоторых распространенных ошибок.\nNotion Ai в деле\nДавайте попросим написать нам статью о том как работает computed в vue 3 с использованием script setup.\nЗапрос:\nНапиши краткую статью о том, как работает computed в vue 3.\nОтвет:\nComputed - это свойство в Vue, которое используется для вычисления значения на основе других свойств.\nВ Vue 3, есть новый синтаксис для создания вычисляемых свойств с помощью функции \ncomputed()\n. Вы можете использовать \ncomputed()\n вместо определения свойства внутри объекта \ncomputed\n.\nВычисляемое свойство может использоваться в шаблоне так же, как и обычное свойство. Однако, вместо того, чтобы хранить значение, оно вычисляется на основе других свойств и данных.\nПример:\n<template>\n  <div>\n    <p>Original price: {{ price }}</p>\n    <p>Discounted price: {{ discountedPrice }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      price: 100,\n      discount: 0.2\n    }\n  },\n  computed: {\n    discountedPrice() {\n      return this.price * (1 - this.discount)\n    }\n  }\n}\n</script>\nВ этом примере мы используем вычисляемое свойство \ndiscountedPrice\n, чтобы вычислить скидочную цену на основе цены и скидки.\nComputed свойства кэшируются, то есть, если одно из свойств, на которых оно основывается, изменится, computed свойство будет пересчитано только при следующем использовании.\nЭто позволяет избежать избыточных вычислений и ускорить производительность.\nПохожую информацию мы можем найти в интернете самостоятельно.\nДавайте усложним задачу и попросим написать нам код.\nЗапрос:\nНапиши html разметку в котором контейнер сайта отцентрован по центру и имеет фиксированную ширину 1200px.\nВнутри контейнера сделай разметку под хедер высотой 60px и футер высотой 60px.\nДля разметки используй css-grid.\nОтвет:\n<div style=\"display: grid; justify-content: center; width: 100%; max-width: 1200px; margin: auto;\">\n  <div style=\"height: 60px; background-color: lightblue;\"></div>\n  <div style=\"height: calc(100% - 120px);\"></div>\n  <div style=\"height: 60px; background-color: lightblue;\"></div>\n</div>\nМне не нравится, что все стили прописаны инлайн. Давайте исправим это.\nЗапрос:\nНапиши html разметку в котором контейнер сайта отцентрован по центру и имеет фиксированную ширину 1200px.\nВнутри контейнера сделай разметку под хедер высотой 60px и футер высотой 60px.\nДля разметки используй css-grid.\nРаздели HTML разметку и css стили.\nОтвет:\nHTML разметка:\n<div class=\"container\">\n  <div class=\"header\"></div>\n  <div class=\"content\"></div>\n  <div class=\"footer\"></div>\n</div>\nCSS стили:\n.container {\n  display: grid;\n  justify-content: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: auto;\n  grid-template-rows: 60px auto 60px;\n}\n\n.header {\n  background-color: lightblue;\n}\n\n.footer {\n  background-color: lightblue;\n}\nОтлично! \nТакой макет может сделать любой фронтенд-разработчик, и для этого не нужна ИИ.\nДавайте решим более сложную задачу.\nЗапрос:\nНапиши на Javascript функцию,\nкоторая будет выводить в консоль актуальную дату в формате DD.MM.YYYY,\nа затем прибавит к дате 5 дней и новую дату выведет в консоль.\nОтвет:\nfunction formatDate(date) {\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n}\n\nconst today = new Date();\nconsole.log(formatDate(today));\n\nconst futureDate = new Date(today);\nfutureDate.setDate(futureDate.getDate() + 5);\nconsole.log(formatDate(futureDate));\nКак мы видим, код вполне рабочий.\nКонечно, ни одна нейросеть не заменит программиста, но использование Notion AI может отлично помочь в повседневной работе.\nAI поможет и тем, кто только начинает свой путь в IT.\nПредположим у вас просили: “Чем ужасен Callback hall в JavaScript”.\nЗапрос:\nНапиши чем ужасен \"Callback hall\" в JavaScript\nОтвет:\nCallback hell (иногда называемый \"картежное ад\") - это проблема, которая возникает в JavaScript при использовании многоуровневой вложенности обратных вызовов. Когда вы используете обратные вызовы в JavaScript, вы часто оказываетесь с множеством вложенных обратных вызовов, что приводит к чрезмерной вложенности и усложнению кода. Это может сделать код сложным для чтения, понимания и отладки. Одним из способов избежать этой проблемы является использование промисов или async/await.\nТолько представьте, как быстро вы сможете находить ответы на интересующие вас вопросы!\nОх, если бы у меня с самого начала был под рукой такой инструмент, то я бы сэкономил огромное количество времени.\nУ Notion огромный функционал, а с добавлением AI моя работа стала действительно намного приятнее. Кстати, не только работа. Я использую Notion AI и для жизни.\nДавайте попросим составить на меню на 3 дня:\nЗапрос:\nНапишите меню на три приема пищи в день. \nКоличество калорий в день не должно превышать 1500.\nОтвет:\nМеню на 3 дня:\nДень 1:\nЗавтрак: Овсянка с ягодами и орехами (350 калорий)\nОбед: Греческий салат с кускусом и курицей (450 калорий)\nУжин: Творожная запеканка с яблоками и корицей (400 калорий)\nДень 2:\nЗавтрак: Яичница с овощами и тостами из цельнозернового хлеба (350 калорий)\nОбед: Куриный шашлык с овощами и рисом (450 калорий)\nУжин: Тунец на гриле с жареным баклажаном и томатами (400 калорий)\nДень 3:\nЗавтрак: Тосты с авокадо и яйцом-пашот (350 калорий)\nОбед: Чили-син-карн с бургуля (450 калорий)\nУжин: Печеный лосось с овощами на гриле (400 калорий)\nДополнительные функции Notion AI\nДавайте рассмотрим дополнительные функции, которые вы можете использовать.\nСоздадим новый шаблон страницы.\nНажмем на \"Ask AI to write\".\nNotion предложит нам шаблоны.\nКликнем на эти шаблоны и, как мы видим, это примеры промптов на английском языке.\nМы можем обращаться к Notion AI как на русском, так и на английском языке.\nЕсть еще 2 способа запустить Notion AI:\nНа любом пустой строке нажимаем на пробел.\nНажимаем на \"+\" строки и выбираем \"Ask Ai to write\"\nПосле того, как Notion AI сгенерировал для вас любой текст, у нас есть следующие действия:\nReplace selection\n - Заменить выбранный текст (если текст был выбран).\nInsert bellow\n - Вставить после выбранного текста (если текст был выбран).\nDone\n - Завершить работу над текстом.\nContinue writing\n - Продолжить писать.\nMake longer\n - Сделать текст длиннее (не будут добавляться дополнительные пункты и разделы).\nTry again\n - Попробовать еще раз написать текст по запросу.\nClose\n - Закрыть окно.\nПосле того, как текст готов, мы все еще можем использовать Notion AI.\nДля этого:\nВыделяем текст, над которым мы хотим поработать.\nНажимаем \"Ask AI\".\nМы видим доступные функции:\nImprove writing\n - улучшение письма.\nFix spelling & grammar\n - исправление ошибок и грамматики.\nMake shorter\n - сделать текст короче.\nMake longer\n - сделать текст длиннее.\nChange tone\n - изменить тон текста. \nВы можете выбрать: \nProfessional\n - профессиональный.\nCasual\n - обычный.\nStraightforward\n - прямолинейный.\nConfident\n - уверенный.\nFriendly\n - дружелюбный.\nSimplify language\n - упростить язык написания.\nSummarize\n - подвести итоги по тексту.\nTranslate\n - перевести текст на другой язык. Кстати, Notion AI отлично справляется с переводами текста.\nExplain this\n - объяснить смысл текста.\nFind action items\n - составить план действий.\nContinue writing\n - продолжить писать.\nИ далее шаблоны, которые мы уже видели.\nЦена Notion AI\nСам Notion имеет бесплатный тариф, но в нем доступно только 20 запросов к AI. После этого Notion потребует платный тариф.\nЯ знаю, что многие еще не готовы платить за AI, и, давайте будем честными, для многих это сложный вопрос, учитывая то, что российские карты Visa и MasterCard не работают для оплаты зарубежных сервисов.\nНе отчаивайтесь, вам не нужно будет продолжать использовать chat GPT через VPN, который медленно работает и часто недоступен в бесплатном аккаунте.\nКак БЕСПЛАТНО использовать Notion Ai\nВесь хак заключается в том, что Notion дает 20 бесплатных использований Ai не для аккаунта, а для рабочего пространства.\nЕсли кратко, то путь бесплатного использования Notion Ai выглядит так:\nСоздаем новое рабочее пространство.\nИспользуем 20 бесплатных использований Ai.\nУдаляем созданное рабочее пространство.\nВозвращаемся к пункту 1.\nМожно создавать сколько угодно рабочих пространств и удалять их. При этом у вас одновременно может быть создано несколько рабочих пространств (удаляем мы сугубо для чистоты аккаунта).\nПошаговая инструкция БЕСПЛАТНОГО использования Notion Ai\nКак создать новое рабочее пространство:\nКликаем на наш аккаунт.\nВ открывшемся окне кликаем на 3 точки.\nВ открывшемся окне кликаем на \"Join or create workspace\".\nВыбираем \"For personal use\" и нажимаем на кнопку \"Continue\".\nНовое рабочее пространство создано! У вас доступно 20 обращений к Ai.\nКак удалить рабочее пространство после израсходованных обращений к Ai:\nВ меню кликаем на пункт \"Settings & members\".\nВ открывшимся окне выбираем пункт меню \"Settings\".\nКопируем текст в из поля \"Name\" (название вашего рабочего пространства).\nЛистаем до конца.\nНажимаем на кнопку \"Delete entire workspace\".\nВставляем скопированное название рабочего пространства.\nНажимаем на кнопку \"Permanently delete workspace\"\nГотово!\nПользуясь возможностью я хотел бы рассказать о своем YouTube канале \nOpen JS\n посвященному Frontend-разработке. Буду рад подписке, лайкам и комментариям.\nСпасибо за прочтение статьи до конца!\n \n ",
    "tags": [
        "notion",
        "open js",
        "AI",
        "искуственный интеллект",
        "нейросеть",
        "gpt"
    ]
}
{
    "article_id": "725664",
    "article_name": "Отстаньте от разработчиков: не надо делать их руководителями просто ради грейда",
    "content": "\r\n\n\r\nБич профессии — превращать самого опытного разработчика в плохого менеджера. Я видел ситуации, когда синьор перерастает команду и ему предлагают должность руководителя. Многие соглашались и становились несчастными. И ладно бы только они: страдает-то в итоге команда и компания. \n\r\n\n\r\nЗачем они соглашаются? Во-первых, потому что они росли всегда и останавливаться страшно. Во-вторых — это часто единственная возможность повышения. \n\r\n\n\r\nЧто мы поменяли у себя в разработке Газпромбанка:\n\r\n\n\r\n\n\r\n\nЯвно обозначили, что инженер, получающий больше своего руководителя, — обычная ситуация. \n\r\n\nДали возможность расти инженерам дальше после синьора, не меняя свою работу, то есть не становясь руководителями. \n\r\n\n\r\nКуда можно расти? В хеда профессии — эксперта, к которому может обратиться каждый в компании. Это как Стив Возняк в Apple. \n\r\n\n\r\nКак это ни странно, в развитой инженерной культуре такие «эксперты выше синьора» — норма. В России я встречал мало компаний с такими фичами, поэтому хочу поделиться практическим опытом того, что это даёт. \n\r\n\n\r\n\nКто такой хед профессии?\n\r\nЭто суперквалифицированный инженер, который не хочет управлять другими людьми. Если хочет, рост понятный — вперёд до CTO, привыкшего управлять стейкхолдерами, ресурсами и работать с бизнесом. А вот если человеку интересны только технические аспекты работы, наступает интересная ситуация. Сначала в команде становится тесно. Потому что хочется чего-то большего, а команда этого предложить не может. Потом становится скучно. Можно, конечно, сменить проект — но через 2–3 месяца скучно станет с новой силой. Обычно дальше сотрудник развлекается увольнением или в качестве хобби идёт разводить пчёл в деревне. \n\r\n\n\r\nЧто ему можно предложить? \n\r\n\n\r\nВо-первых, нам нужны люди с очень глубокой экспертизой, чтобы к ним можно было обратиться за советом. \n\r\n\n\r\nВо-вторых, эти люди нужны для того, чтобы развивать подходы к работе. Например, эксперт по Java, вышедший за рамки синьорства, — может развивать подходы к написанию кода, создавать корпоративные стандарты и транслировать их на всех. Это важно, потому что даже в кровавом энтерпрайзе часто при одинаковом стеке три разных команды сделают три разных по структуре и стилю продукта и поженить их потом будет очень сложно. Мы стремимся к тому, чтобы подходы написания кода были едины — и как раз эту функцию очень хорошо поддерживает хед профессии. Он не занимается менеджментом, он унифицирует стандарты и подходы. Он определяет базовый набор инструментов на уровне организации и должен замотивировать инженеров этим подходам следовать. \n\r\n\n\r\nВ-третьих, эти подходы можно выносить на комьюнити. Эксперт может выходить на мероприятия и рассказывать про опыт разработки и производства, полученный в компании. Для компании это развитие технобренда, для специалиста — возможность менять стандарты всей сферы. \n\r\n\n\r\nИ при этом хед профессии остаётся в команде и действует как разработчик. Мы строим организацию так, чтобы хеды профессии были частью команды, а не выделялись.\n\r\n\n\r\nМы используем \nEngineering Ladder Framework\n. Инженер по хардам оценивается по 7 уровням этой лестницы. Это инженер разработки, старший инженер разработки, ведущий инженер разработки, главный инженер разработки, эксперт разработки, ведущий эксперт разработки, главный эксперт разработки. На уровнях 6 и 7 быть хедом уже одно из требований компетенции.\n\r\n\n\r\n\nЧем лидер отличается от руководителя?\n\r\nПриведу цитату Гарольда Ливитта (из «Сверху вниз»):\n\r\n\n\r\n\n«Менеджер администрирует — Лидер обновляет.\n\r\nМенеджер поддерживает — Лидер развивает.\n\r\nМенеджер сосредоточен на системах и структуре — Лидер сосредоточен на людях.\n\r\nМенеджер полагается на контроль — Лидер внушает доверие.\n\r\nМенеджер спрашивает, как и когда — Лидер спрашивает, что и почему.\n\r\nМенеджер смотрит на прибыль — Лидер смотрит в будущее.\n\r\nМенеджер делает вещи правильно — Лидер делает правильные вещи».\n\r\n\nОткуда у него берётся время?\n\r\n Разработчик пишет код 2–3 часа в день. Остальное время он читает, обсуждает, думает, смотрит ковёр, ревьюит, ест и переживает глубокую травму от неидеальности кода. Хед профессии достиг опыта во всём этом (кроме еды) и обычно делает то же самое быстрее. Образуется 1–2 часа на то, что ему интересно. \n\r\n\n\r\nНапример, эксперты часто дают окна в расписании HR-отделу (1–2 часа в неделю) на собеседования и внутренние ассесменты (при повышениях). Они часто разрабатывают сам дизайн технического интервью, проектируют тестовые задания, выходят непосредственно к ключевым кандидатам и так далее. \n\r\n\n\r\nИм не сложно поработать над стандартом написания кода — это хорошее переключение. И так далее. \n\r\n\n\r\nПредполагается, что эти люди выросли до того, что они — полноценные зрелые инженеры, которые умеют управлять временем и могут самоорганизоваться и распределить делегирование. Если не удаётся — вступает хед хедов.\n\r\n\n\r\n\nОдин хед — одна профессия?\n\r\nНет. В нашей системе хедов может быть сколько угодно. \n\r\n\n\r\nПримерно начиная с уровня развитого мидла мы смотрим на то, к чему человек более склонен — к управлению людьми или к управлению техническими стандартами и развитию технологии. Если второе — то постепенно предлагаем некоторые функции хеда профессии до тех пор, пока после синьорства он таковым не станет. \n\r\n\n\r\nТо есть хедов может быть сколько угодно, и они друг другу не противоречат, а составляют некий совет или гильдию. \n\r\n\n\r\nСейчас у нас 7 центров компетенций, этих самых «гильдий»:\n\r\n\n\r\n\n\r\n\nЦентр экспертизы архитектуры решений.\n\r\n\nЦентр экспертизы качества программного обеспечения.\n\r\n\nЦентр экспертизы разработки баз данных.\n\r\n\nЦентр экспертизы разработки и сопровождения систем.\n\r\n\nЦентр экспертизы разработки приложений.\n\r\n\nЦентр экспертизы разработки фронтальных систем.\n\r\n\nЦентр экспертизы системного анализа.\n\r\n\n\r\nОчень важно, что когда хед становится хедом официально, это означает, что у него появляется новый функционал, но при этом не прибавляется полномочий. То есть он не может прийти и сказать: «Так, теперь мы все переписываем миллион строк Java на Go, я так сказал, исполняйте!!». Сначала ему нужно убедить других хедов своей профессии, что это разумно. Затем они все убеждают техлидов команд, те своих инженеров — и только затем это становится стандартом. Иногда бывает так, что решение неконсенсусное, но полезное — тогда можно убедить CTO или руководителя центра компетенций в том, что нужно ввести новый стандарт (регламент) принудительно, но это крайние случаи. В любой ситуации хед профессии имеет много фильтров перед имплементацией решений. То есть сначала обычно хорошая практика обкатывается в своей команде, потом на подразделении, потом через центр компетенций — на весь банк. \n\r\n\n\r\nЕсли джун пошлёт хеда на три буквы, то останется только убеждать. Но обычно у хеда уже есть очень большой авторитет в сфере, и такая ситуация просто не возникает. \n\r\n\n\r\nХеды уже взрослые люди и достаточно опытны, чтобы делить между собой задачи. Например, если кто-то любит выступать, а кто-то второй не любит, они способны договориться между собой о перераспределении этой работы.\n\r\n\n\r\nХеды разных профессий собираются на регулярные стратегические встречи, где прорабатывается вектор развития стратегии и приоритезируются вещи, которые прямо горят. \n\r\n\n\r\n\nЧто формально прописано в должностных обязанностях?\n\r\nРоль Head of Profession\n\r\n\n\r\n\nТехническое лидерство. Быть ведущим экспертом, евангелистом и мыслителем, представляющим выбранную профессию и её возможности.\n\r\n\n\r\nРазвитие технологий. Формировать предложения на тактическом и стратегическом уровне по развитию представляемой профессии в соответствии с бизнес-целями.\n\r\n\n\r\nКадровое планирование. Формировать рекомендации по подбору людей в профессию, команды. Организовывать поддержку лидеров стримов в планировании необходимых уровней кадров, компетенций в рамках профессии.\n\r\n\n\r\nПланирование карьеры. Обеспечить лидерство в развитии навыков карьерного роста и обучении инженеров по профессии.\n\r\n\n\r\nУправление знаниями. Отстаивать развитие технических компетенций, организовывать процессы обмена знаниями, включая преемственность, наставничество. Организовывать программы обучения и подготовку молодых инженеров.\n\r\n\n\r\nПроцессы и политики. Создавать и поддерживать стандарты и процессы, развивающие профессию.\n\r\n\n\r\nРазвитие технобренда. Принимать участие в профильных сообществах и мероприятиях внутренних и внешних в качестве спикера, контентмейкера, продвигая и развивая технобренд банка. Развивать внутренние профессиональные сообщества и их процессы.\n\r\nОбратите внимание, что никакое управление нигде не прописано — даже в должностных (мы же банк, у нас всё это важно) нет ни слова про это. \n\r\n\n\r\n\nЧто мы получили\n\r\nМы избавили разработчиков от того, чтобы руководить тогда, когда они этого не хотят — но и при этом избавили от стагнации, когда синьор не стал руководителем. \n\r\n\n\r\nМы решили энтерпрайзную проблему с тем, что формально можно записать инженера руководителем ради грейда, но не давать ему обязанности менеджера. Такое часто случается, но заканчивается печально. Инженер с формальной должностью «руководитель» сначала решает один маленький вопрос, потом из-за чувства ответственности другой, потом кто-то из другой части структуры обращается к нему как к руководителю с вопросом — и вот у нас новый менеджер, который никогда этого не хотел. У нас по должности можно чётко понять, с чем приходить, а с чем нет. \n\r\n\n\r\nМы построили меритократию в миниатюре. Хеды управляют стандартами, а через стандарты мы управляем разработкой. Хеды помогают в создании поля знаний, которое очень важно. В предыдущих постах серии «Отстаньте от разработчиков» про это есть: \nвот первый\n, вот \nвторой \n. \n\r\n\n\r\nМы знаем про риск того, что хеды будут рождать всё более и более мейнстримовые вещи, потому что в сильных решениях нужно убеждать всех. Если софтов не хватает, могут и не убедить. Тем не менее пока такой проблемы не замечено. У нас сейчас скорее Дикий Запад, и мы только определяем правила игры. Все предложения хедов — они базис, вещи, без которых просто нельзя. Возможно, когда-то позже, когда можно будет расслабиться, мы будем аристократами, пить шампанское на встречах и загнивать. Пока до этого далеко. \n\r\n\n\r\nТочно могу сказать, что хеды сами по себе как институт невозможны без определённой культуры организации, склонной как раз к меритократии. В другой модели организации хедов не будет. Длинной лестницы для инженеров не будет. Есть компании, где ИТ-директора и исполнительные директора для самого ИТ-блока — дятлы, которые не секут в технологиях и их надо очаровать или убрать с дороги. В нашей ситуации руководство ИТ-блоком — это скорее Светлый Совет магов, а не корпорация. Ну, насколько это вообще возможно в банке. \n\r\n\n\r\nТак что, думаю, у нас получилось кое-что важное. А теперь разнесите наш опыт, пожалуйста )\n \n ",
    "tags": [
        "разработчик",
        "грейд",
        "руководитель",
        "хед",
        "лидер",
        "хед профессии"
    ]
}
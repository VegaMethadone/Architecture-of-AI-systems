{
    "article_id": "726524",
    "article_name": "Как найти свой карьерный путь: задаём правильные вопросы",
    "content": "Меня зовут Мария Оборина, я почти пять лет подбирала персонал, была карьерным консультантом, экспертом в \nHH.ru\n для соискателей. Уже полтора года я в Практикуме — отвечаю за карьерные треки курсов, в том числе работаю с джунами, выпускниками \nкурсов по программированию для разработчиков\n.\nПримерно треть моих консультаций посвящена карьерному планированию. Так как вопрос, куда двигаться в профессии, мне задают часто, решила поделиться собственной методикой. Это способ определения карьерного пути с помощью ответов на четыре блока вопросов. \nКуда растут разработчики\nВ разработке есть конкретные варианты, куда двигаться дальше и как развиваться. Обычно специалисты растут в грейде, увеличивая свой профессионализм: изучают новые технологии, делают более сложные проекты. Второй вариант — смена стека. Например, разработчик писал на Python, а затем перешёл на Go — для него карьерный трек это не middle – senior – team lead, а горизонтальное движение и переход в другой язык.\nНа индивидуальных консультациях меня часто спрашивают: «Как понять, куда лучше двигаться в конкретном случае? Может, вообще уйти из разработки в DevOps, а не прокачиваться до уровня senior?» Этот вопрос возникает не из-за непонимания возможных маршрутов, а из-за сомнений. Я почти не встречала людей с опытом от года, которые вообще не знают, чего хотят. \nБывает, уверенный разработчик видит себя управленцем, а случается и наоборот: уверенный управленец хочет вернуться в архитектуру и технические задачи, потому что ему там интереснее.\nВыбираем карьерную цель: методика\nТреть тех, кого я консультирую, спрашивают о росте в компании: как вести переговоры о повышении зарплаты, какие задачи брать, как сменить стек или грейд. У меня есть методика, которую объясняю на карьерных консультациях. Она подходит и для джунов и джунов+, и для мидлов и синьоров. Стоит попробовать её и тем, кто хочет расти в своей компании, и тем, кто хочет сменить направление. \nВыбирать следующий шаг в карьере нужно системно. Его не стоит предпринимать из-за моды или желания больше зарабатывать. В идеале для принятия решения нужно учитывать несколько слагаемых. Обычно на консультациях я проговариваю четыре блока вопросов:\n1. Багаж\nЕсть несколько вопросов, которые стоит себе задать, чтобы определить текущий багаж навыков и знаний: \nКакие свежие экспертные навыки и знания у меня есть? Что я делаю чаще, дольше, лучше всего, ежедневно и легко?\n Это самый простой вопрос. Вероятнее всего, разработчик опишет стек, которым пользуется в работе. У Python-программиста это будет Python и его фреймворки, например Django, популярные библиотеки, базы данных — PostgreSQL и другие, инструменты деплоя кода GitHub, GitLab, а также инструменты работы с кодом — Visual Studio IDE, PyCharm или другие. \nЧто мне нравилось в начале пути, что я использовал в своей работе в меньшей степени, всего пару раз?\n Это и будет второй блок ваших навыков — то, в чём вы не можете назвать себя экспертом, но с чем сталкивались и что пробовали. Например, разработчик много лет пишет на Python, но пару раз у него случались проекты на Java. Он не считает себя экспертом, но точно может записать этот язык в список не сильно развитых навыков.\nЧто я знаю только на уровне теории? \nЕсли вы не пробовали технологию, но читали, смотрели, видели, как на ней работает кто-то другой, у вас сложилось общее представление. Например, вы недавно читали про Go. Пусть вы ещё ничего не писали на этом языке, но примерно понимаете, как он себя ведёт. \n2. Пожелания\nВторой блок содержит очень важный вопрос: \nчто я хочу делать\n? Это самый приоритетный вопрос для всех последующих карьерных шагов. Если вы решили подойти к переменам системно, было бы здорово любить новую работу.\nНайти ответ на этот вопрос многим моим клиентам непросто, потому что размышления об этом часто путают ещё больше. Так уж устроен наш мозг: мы автоматически выбираем что-то из прошлого опыта. Но иногда есть большая разница между тем, что вы делаете хорошо, и тем, что с удовольствием.\nМоя рекомендация: лучше отвечать на этот вопрос, не заглядывая в ответы об уже имеющихся навыках. И не нужно себя винить, если указали то, в чём вы пока не сильны. Ведь вы отвечаете на вопрос, что хотели бы делать, а не на вопрос, насколько это адекватно. Об этом дальше. \nСпросите себя:\nКакие задачи из тех, что я делал, доставляют мне большее удовольствие? \nС каким стеком, с какими технологиями, проектами мне интереснее всего работать?\nКакие задачи я не хочу выполнять на новом месте? \nС чем я больше не хочу работать? Можно говорить и про стек, и про ежедневную рутину.\nЧто из того, чем я ещё не занимался, мне бы понравилось? \nМы не можем опираться только на опыт, который уже есть. Вспомните о том, что видели, слышали, что вам понравилось. Это может быть всё что угодно — от гуманитарных задач до технических и менеджмента.\nОтветы на первые два блока позволяют разобраться с содержательной частью: что у вас уже есть, что вы хотите с собой забрать в будущее, а что нет. Важно пока не смешивать ответы на эти два блока. \n3. Приоритеты\nЭтот блок вопросов я называю \n«Мне важно»\n. Ведь можно говорить о том, что вы умеете и что хотите делать, но это ещё не все ваши ценности и приоритеты.\nПринимать решение без ответа на вопросы о приоритетах нельзя. Ведь этот блок и содержит решение проблемы, как выбрать из нескольких интересных предложений. \nПредставьте, что перед вами три разных оффера: разные задачи, компании, оплата, стек, грейд — всё. По каким критериям вы будете выбирать классное предложение о работе и какой оффер примете в итоге?\nДля этого придётся выяснить, что для вас на первом месте, а чем вы готовы пожертвовать. В числе приоритетов может быть что угодно: оплата, график, известность или репутация компании, интересные задачи, востребованный стек, возможность почувствовать себя экспертом.\nЗадайте себе такие вопросы: \nКак буду оценивать вакансии, на которые откликаюсь, на что буду смотреть? \nЧитая описание, кто-то обращает внимание на современность стека и описание проекта, а кто-то — на график работы или размер зарплаты. Для каждого критерии будут свои. Важно определить, что именно важно для вас.\nКак я буду выбирать интересное предложение о работе? \nПредставьте идеальный оффер — опишите преимущества, которые могут сыграть решающую роль при выборе.\nНа что буду обращать внимание в описании оффера? \nПолучив предложения от нескольких работодателей, вы выберите большую зарплату или возможности быстрого роста, а может, вам важен офис, социальный пакет или удобный график. \nВажно не просто набросать идеи и соображения, как вы делали, отвечая на первые два блока. Размышляя над вопросами о приоритетах, нужно быть честным с собой и расставить ответы по степени важности для вас. \n4. Поиск совпадений\nЗадача этого блока вопросов — определить совпадения между «могу», «хочу» и ценностями. Вы можете обозначить, что хотите больше интересных задач. Но если в качестве самого важного критерия выбора предложения о работе указали деньги, то вряд ли захотите перейти в джуны в новый стек, существенно потеряв в зарплате. Значит, кардинальные перемены пока не будут для вас комфортны. А если важнее всего удалёнка, то можно проанализировать, какие разработчики сейчас чаще получают предложения с такой опцией.\nСопоставив ответы на все три блока, вы, скорее всего, получите несколько вариантов. Например: \nРазвиваться как профессионал, расти до лида, чтобы стать экспертом и больше зарабатывать.\nСменить стек и начать, например, программировать на Go, используя предыдущий багаж разработчика как преимущество на рынке. \nИсполнить своё желание стать фулстек-разработчиком. \n«Другое»: например, вы решили бросить разработку и уйти в копирайтеры или музыканты. Ведь запрос может быть и на кардинальные перемены. \nА дальше нужно сопоставить полученные результаты о вас и реальность рынка труда. Это и даст возможность определить, куда двигаться дальше. Спросите себя:\nКак выглядит реальный спрос на эти роли?\n Поищите вакансии — не меньше 10 подходящих по каждому направлению. Например, по 10 на позицию Senior Python Developer, Go-разработчика, фулстека.\nНасколько задачи этих вакансий отвечают моим интересам?\n Правильно ли я себе представляю эту позицию, если никогда её не занимал?\nЧто в требованиях к этой вакансии, насколько мои навыки с ними совпадают? \nЧего мне не хватает для получения этих должностей? Как получить эти навыки? Сколько времени это займёт? Возможно ли это? Например, все 10 найденных вакансий на роль Go-разработчика требуют 2+ лет коммерческой разработки на Go, а вы планировали менять стек. Или для вакансии фулстек-разработчика обязательно знание Python и JavaScript + React, а вы знаете только Python.\nЕсли вы понимаете, что эти навыки можно освоить, начинаете учиться — \nпроходите курс\n, пишите пет-проект или пытаетесь получить опыт внутри своей компании. Если возможности закрыть пробелы нет, откладываете поиски.\nТак вы получите несколько вариантов, из которых вам подойдёт один или два. Например, сложив все за и против, решили, что не хотите быть лидом и не готовы становиться фулстеком, но идея сменить стек с Python на Go кажется интересной. \nВопросы о вакансиях\nВыбрав одно или несколько приоритетных направлений, составьте резюме и начинайте откликаться на вакансии. Спустя три недели проанализируйте: сколько успели сделать откликов, какой получилась конверсия, какие компании рассматривают вашу кандидатуру, нравятся ли они вам? Что вам предлагают: устраивает ли вас размер зарплаты, готовы ли вы принять оффер прямо сейчас, или идея — например, сменить стек — не соответствует вашим финансовым ожиданиям?\nЧем больше вопросов вы сможете себе задать, тем лучше. Основная мысль: вопросы должны быть про разные стороны вас и рынка труда, чтобы не допустить ошибок при принятии решения. \nЕсли вы укрепились в своей идее, взвесив все за и против, можно направить силы на достижение новой цели. Именно на основе проанализированных вакансий можно получить самый свежий, актуальный срез информации о рынке.\nКроме того, можно изучить выбранное направление по готовым гайдам и курсам. Сейчас в интернете огромное количество ознакомительных материалов на всевозможные темы, например «Профессия фулстек-разработчика», «Профессия Python Developer». Если это новая для вас тема, начните проходить \nбесплатную часть наших курсов\n об этом. Когда мой клиент сомневается, сделал ли он правильный выбор, я предлагаю ему зарегистрироваться на ознакомительные вебинары. Так он поймёт, чему и как будет учиться.\nИтак, вы воспользовались предыдущими советами, нашли интересное направление развития. Изучив вакансии, узнали, какие сейчас требуются навыки. Пройдя бесплатную часть курсов, получили представление, насколько долгий и трудный предстоит процесс переквалификации.\nНа этом этапе нужно составить перечень гибких и жёстких навыков, наиболее востребованных для будущей роли. Постарайтесь объективно оценить, какие из них уже есть в вашем багаже, а какие только предстоит развить. Возможно, вы примете решение подтягивать именно те навыки, которые находятся на среднем уровне, а не погружаться в технологии с нуля.\nТеперь можете оценить, насколько долгосрочные карьерные цели лучше поставить. Если разница в текущих и желаемых навыках невелика, можно немного подтянуть навыки и начать искать работу. Если предстоит изучать многое, не надо спешить с выходом на рынок. План по развитию карьеры может быть долгосрочным, это нормально. Если из пяти важных навыков вы владеете только тремя, показывать себя потенциальным работодателям ещё рано.\nГотовимся к выходу на рынок\nЕсть несколько вариантов, как подтянуть свои профессиональные качества до нужного уровня и даже обеспечить преимущества перед другими соискателями. \nДелать новые вещи на старой работе.\n Вероятно, потребность в расширении профессионального инструментария возникла уже сейчас. Воспользуйтесь возможностью запустить новые проекты, «потрогать» новый стек. И обязательно отразите этот опыт в портфолио.\nКупить курс, пройти обучение.\n Вариантов повышения квалификации и даже смены профессиональных компетенций много — от бесплатных курсов до личного менторинга. Знания нужно получать параллельно с практическими навыками. Закрепляем новую информацию на практике — и снова отражаем в портфолио.\nДелать пет-проекты. \nПопытайтесь реализовать свои идеи в новом ключе. Не обязательно корпеть над большим проектом с чистого листа. Может быть, вы уже писали бэкенд какого-то сайта или сервиса? Напишите фронтенд и освойте навыки фулстек-разработчика.\nТак нужно повторять до тех пор, пока ваш багаж не приблизится к требованиям вакансий, на которых вы сфокусировались.\nКарьерные горизонты\nСуществует несколько вариантов карьерного планирования:\nКраткосрочное планирование: \nопределяем следующий шаг.\n \nПример: через пару месяцев вы хотите найти новую работу. Преимущества такого подхода в том, что вы наиболее адекватно оцениваете состояние рынка труда. Здесь не требуется талант прогнозирования.\nСреднесрочный план: \nсоставляется на один-три года. Пример: сейчас вы на этапе А, через год хотите быть на этапе Б, а через три — на этапе В. Это сработает, если грамотно оценить свои силы и не сойти с намеченного пути.\nДолгосрочное планирование\n отвечает на вопрос, кем вы себя видите через пять, десять и больше лет. Планировать карьеру так далеко больше похоже на пожелания к самому себе, как бы вы хотели шагать по карьерной лестнице. Но в текущей нестабильной реальности это, к сожалению, нежизнеспособная стратегия. Нужно быть готовым быстро переобуться на любом этапе, потому что есть обстоятельства, которые от вас не зависят.\nПерестраивается рынок труда, меняется спрос, появляются и исчезают тренды. Ещё позавчера некий язык, например Go, был в начале пути. Сейчас он более распространён, а завтра может стать лидирующим или исчезнуть. Поэтому долгосрочный план я советую составлять для себя, just for your information.\nСейчас вы предполагаете, что, возможно, станете СТО через 10 лет. Но есть большая вероятность, что вы изменитесь или передумаете. Рынок труда может поставить подножку каждому из нас. Поэтому самый классный вариант — чётко формулировать среднесрочные цели. \nНо не стоит пренебрегать и тактическими планами — на краткий срок. Не требуйте от себя многого в текущей реальности. Да, нужно понимать, куда вы движетесь. Но не будьте к себе излишне строги.\nЕсли что-то не сложилось в конкретной точке во времени, попытайтесь разобраться и понять, почему так произошло. Это вы не приложили должных усилий или это рынок труда больше не требует этих навыков?\nРазные цели — это нормально\nНекоторые мои клиенты в итоге выбирают два варианта. Не страшно, если вы провели аналитическую работу по инструкции выше и так и не поняли, кем больше хотите быть: Go-разработчиком или тимлидом в Python-команде. \nПросто у вас будет два вектора развития. Одна стратегия — на случай вертикального роста. Вы начнёте прокачивать навыки руководства командой и подготовите резюме крутого менеджера-питониста. А одновременно начнёте изучать Go и сделаете резюме разработчика джуна. \nНо не стоит забывать, что поиск работы и новых карьерных вариантов — тоже работа. И в этом случае вместо одного пути придётся работать на два. Это тоже нормально, но придётся заботиться о себе, чтобы не выгореть.\nСтоит назначать себе чёткие дедлайны. Через какой промежуток времени вы будете готовы протестировать свои шансы на рынке труда? Например, две недели ищете вакансии на Go, делаете выборку, иногда откликаетесь в симпатичные компании, смотрите результат. Следующую итерацию можно посвятить уже тимлид-позициям в сфере разработки на Python.\nБудьте готовы упаковать себя везде: в голове, резюме, навыках — в двух разных направлениях. Это в два раза сложнее, но так действуют многие, вы не одиноки.\nЧто будет с доходом и грейдом?\nСмена стека не обязательно означает потерю статуса и резкое понижение зарплаты. Это неопределившийся тренд на рынке труда, потому что все компании делятся на два типа. \nОдни компании зачтут ваш опыт в разработке на другом языке программирования. Освоив Go на достаточном уровне, вы устроитесь к ним уже мидлом. Нанимающие менеджеры также оценят ваш опыт в коммерческой разработке, навыки работы в команде. То, как быстро вы разобрались с новой технологией, даже станет вашим плюсом. Опытные программисты действительно лучше показывают себя на технических интервью, потому что не нервничают и бегло кодят.\nНо будут и компании, в которых нанимателям всё равно, чем вы занимались раньше. Если в требованиях указан опыт коммерческой разработки на Go от двух лет, вы не сможете претендовать на должность мидла, даже будучи очень сильным питонистом.\nЭто индивидуальная история, как с назначением грейда. Многое зависит от компании и её ценностей. В некоторых вакансиях так и пишут: «Опыт на Java будет преимуществом». Если вы долго писали на Java, а теперь перешли на Go, это ваш плюс. Иногда подспорьем станет знание близкого по синтаксису языка, а в других случаях разработчики успешно меняют процедурное программирование на объектно-ориентированное и наоборот.\nВ моей работе встречаются разные примеры, когда разработчик показал себя или случилось совпадение с будущим работодателем. Одного выпускника курсов взяли на позицию мидла, а его «соседа по парте» нет.\nЧаще всего в компаниях знают, как протестировать уровень. Можно податься на вакансию с хорошим грейдом и желаемой зарплатой. Пусть на техническом интервью или лайвкодинге решится, подходите ли вы в данный момент.\nКроме новоприобретённых технических навыков, не стоит забывать и про софтскилы. Когда я разговариваю с представителями компаний, многие говорят: «Нам важно не количество лет разработки на каком-то языке, а как человек мыслит».\nБытует мнение, что джуна от мидла отличает невозможность поставить себе ТЗ и доработать его. Кроме этого, рекрутер обязательно оценит, не теряется ли человек, видя новый для себя синтаксис кода. Как он логически рассуждает над какими-то кейсами и проблемами, как общается и доносит информацию. \nКогда пора идти на собеседование\nПопулярный вопрос на консультациях: стоит ли откликаться на вакансии только для того, чтобы проверить себя на собеседовании. Действительно, иногда при смене карьерной парадигмы IT-специалисты ходят на интервью и так оценивают свою профессиональную подготовку. Но если ваша цель — только «пощупать» новую роль, задайте себе вопрос: насколько вы готовы выложиться?\nКак правильно оценить реакцию на вас как на специалиста, если вы пришли просто посмотреть и не презентуете себя во всей красе — технической и софтовой? Любое собеседование требует тщательной подготовки — изучить информацию о компании, подготовиться к тестовому заданию.\nПрактика показывает, что, когда человек хочет пощупать, он не готов напрягаться. Сначала вы не стараетесь на собеседовании, потом вас невысоко оценивает наниматель, и вы делаете вывод, что не готовы. Это замкнутый круг.\nКонечно, нужно нарабатывать навык прохождения процесса отбора. Вы можете это делать раз в какое-то время. Но потратить время и силы на подготовку, понервничать, а потом отказаться — заведомо неэффективная трата ресурса. К тому же не пройти отбор или не принять оффер — значит на время закрыть для себя возможность трудоустройства в эту компанию. Что, если в скором времени вам потребуется работа, возможно, даже именно там?\nПоэтому я рекомендую тестировать навык прохождения собеседований, но не тратить своё время и время нанимателей, если не допускаете вероятности, что примете оффер.\nЛучше тестировать свой уровень подготовки с профессионалами. К счастью, сейчас распространён менторинг, есть карьерные консультанты. Если вы не уверены, какую цель выбрать, нормальное ли у вас резюме, каких навыков вам не хватает, как подготовиться к собеседованиям, идите к специально обученным людям.\nНе будьте к себе слишком строги, ведь поиск работы — действительно сложное дело. \nОбратитесь в наш внешний сервис консультаций\n или к другим специалистам.\nВыводы\nВ идеале карьеру надо планировать системно. Нужно задавать себе вопросы не только про желаемые зарплату и должность. Я советую сформулировать ответы как минимум на три вопроса:\nЧто я уже могу?\nЧто мне хотелось бы делать?\nКакие у меня приоритеты в краткосрочной, среднесрочной и долгосрочной перспективе?\nПомните, что, кроме ваших внутренних факторов, нужно учитывать и реальность рынка труда. Любые наши желания важно сопоставлять с реальностью. Всегда старайтесь увидеть тренд и только потом принимайте любые решения.\n \n ",
    "tags": [
        "яндекс практикум",
        "карьера программиста",
        "карьера в it-индустрии",
        "карьерное развитие"
    ]
}
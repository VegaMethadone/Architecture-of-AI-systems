{
    "article_id": "591705",
    "article_name": "Собеседование как экзамен",
    "content": "Кадр \"\"\nЭкзамен для меня всегда праздник\n, \nпрофессор\n\" из фильма \"\nНаваждение\n\" Леонида Гайдая\nВам знакомо чувство, когда пришел на собеседование на людей посмотреть, себя показать, а ушел со вспотевшими ладошками и в смешанных чувствах? С мыслями: «Ребята, ну неужели не понимаете, что так нельзя?». Недоумевая, почему собеседование превратилось в экзамен.\nМного лет назад я был уверен, что когда «подрасту», то точно не стану повторять ошибок моих нанимателей. Но увы. Как только начал сам проводить собеседования — все повторилось. Я угодил в ту же ловушку, что и они.\nВсе было плохо\nВо-первых, я искренне считал, что резюме должно быть четко структурированным и профессиональным. Должно быть одновременно полным, детализированным, но без утомительных подробностей. Разумеется, аккуратно оформленным и идеально грамотным. Желательно — без хвастовства и показухи. В общем, таким, чтобы после прочтения осталась одна мысль: «надо брать».\nА так как не хотелось на сомнительного кандидата тратить лишнее время, огромное количество резюме отправлялось в корзину, потому что они были «не такие». Почти как в том анекдоте\n «А зачем нам неудачники\n», с той лишь разницей, что я все-таки тратил по 3-5 минут на резюме.\nПредставьте себе воронку: сначала отбирает HR (20-40%), потом отбираю я (10-20%), затем интервью с HR (60-80%), наконец, кандидат, в свою очередь, отбирает нас (20-40%). \nМы еще не дошли до технического интервью, а уже потеряли 99% кандидатов! \nС теми же, кто прорвался сквозь эту воронку, я по классике затевал все эти занудные вопросы, начиная с «расскажите о себе». Потом задавал уточняющие вопросы, да так умело, что полчаса вылетало в трубу. \nНу а дальше на сцену выходил Его Величество Список. У вас в компании ведь тоже есть Список Вопросов Для Собеседования, не так ли? \nИтак, я начинал беседу с базовых вопросов по Списку. Человек отвечал. \nКопал глубже — отвечал. \nКопал еще глубже. Оп-па, нащупал границу знаний в этой области. Так, теперь другая тема. \nНу понятно, все это тактично и аккуратно. Старался не додавливать кандидата по тем вопросам, на которые он ответить не мог. Хотя, каюсь, умение «не давить» тоже пришло не сразу.\nВ ходе собеседования я рисовал в голове этакое многомерное пространство. Каждая координатная ось представляла собой шкалу по определенной теме. В результате ответов получалась замкнутая область в этой системе координат. Этакое облачко знаний. И визуально представлял наложение этого многомерного облачка на облачко требований по вакансии.\nОчень удобно. \nВ смысле, удобно для технаря, который не умеет в soft skills.\nВсе усугублялось тем, что соискателей много, а времени — мало. И Список-то ого-го какой длинный! Так что делать ювелирную работу было некогда. Собеседование неизбежно скатывалось в формат быстрых вопросов и ответов. То есть — в экзамен.\nУ моего поведения была и еще одна причина:\nВ юности (когда трава была зеленее, девчонки красивее, а программы 16-битные) я подрабатывал техником на родной кафедре. Принимал лабораторные работы по «Архитектуре ЭВМ». Ага, то еще название. \nТак вот, в каждой группе было около 25 студентов, и только четверть из них хотела учиться. Хорошие результаты показывала от силы пара человек. \nДважды в неделю ко мне приходила разношерстная толпа из раздолбаев с редкими вкраплениями мотивированных студиозов. Добросовестные студенты приносили программы на куче разных языков с ассемблерными вставками. И не все эти языки были мне знакомы. Менее добросовестные приносили те же самые программы, но только написанные методом Ctrl+Ins и Shift+Ins (более удобные Ctrl+C и Ctrl+V приобрели популярность несколько позднее).\nКод следовало оценить. Быстро. Очень быстро. \nА еще — определить, кто же из них на самом деле автор.\nИ тут я понял, почему преподы задают глупые вопросы. Потому что на умные вопросы времени нет. Умные вопросы — для избранных. \n(Позанудствую: также источником глупых вопросов бывают не очень умные люди. Или — не компетентные в данной области. Но мы оставим эти грязные инсинуации в скобках)\nГлядя на код, я спрашивал самое тупое. Например: «А что такое \nAX\n?».\nТупо? Несомненно! Но ведь работает.\nЧерез несколько секунд студент отправляется на пересдачу лабораторки. \nСледующий студент уже знает, что такое AX. Но я его спрашиваю: «А сколько же в нем бит?». Все, пересдача. \nСледующий знает, что это регистр и в нем 16 бит. Молодец. \n— А вот тут у вас написано AH. Что это? — спрашиваю. \n— Регистр\n— Правильно, а сколько в нем бит? \nНда, пересдача. \nЧестно, я не хотел никого мучить, сам ведь недавно был на их месте. Просто старался максимально быстро и безболезненно отстреливать халявщиков.  \nОни упорно тащили какую-то магию на ассемблере, а объяснить, что притащили, не могли.   \nПоэтому, я оперативно выявлял лодырей и отправлял их домой. Пусть хотя бы конспекты почитают. Хотя бы чужие. Ну, или, на худой конец, методичку. \nМои требования были весьма приземленными. Кто знал, например, что такое «\nxor ax, ax\n» и \nпочему это лучше\n чем «\nmov ax, 0\n» — получали зачет автоматом.\nНу а как еще можно поступать при жестком лимите по времени? И так дел невпроворот, а тут еще очередь соискателей. Из которых кто-то не умеет ничего. Или умеет, но совсем не то. Или то, но не так. Это надо оперативно выявить наиболее простым способом. То есть, задавая вопросы в темпе пулеметной очереди.\nНаверняка каждый читатель может вспомнить массу потогонных интервью. И у каждой компании был свой Список Вопросов со своим Блэкджеком и задачами про гномиков. Видимо, компании полагают, что так они наиболее эффективно проверяют знания, опыт, умение соображать и навыки решения задач в стрессовой ситуации. \nИ я так поступал.\nРешил, что так уж устроен мир, интервью обязано быть экзаменом. Может быть, чуть более вежливым, с прелюдией и постлюдией, но все же — экзаменом.\nНо на волне постковидного «пузыря», когда поток кандидатов стал высыхать быстрее ручья в пустыне, данная техника стала сбоить. HR начали поминать меня незлым тихим словом. Начальство ненавязчиво интересовалось, почему там медленно ищем.\nТут-то я и призадумался. Кто сказал, что оценка знаний и опыта является целью собеседования или же экзамена?\nДо меня наконец дошло, почему все плохо\nТрактовка \"Мыслителя\" Родена нейросетью \nrudalle.ru\nЦель экзамена: заставить студентов усвоить материал в объеме курса.\nЦель собеседования: найти коллегу. \nЛовушка, в которую я угодил, заключалась в неверном целеполагании.\nЯ не понимал таких простых вещей.\nМожете закидать меня помидорами.\nКонечно, понятие «коллега» у каждого свое. Но вряд ли оно является синонимом слов «сдавший экзамен». В моем представлении хороший коллега — это тот, кто поможет тащить проект. Остальное — второстепенно.\nЕще раз: \nтащить со мной проект.\nЭто главный вопрос, который я держу в голове. Потащит ли? \nНу ок, определились. Следует найти спеца, который потащит. А теперь — сюрприз — надо пройти \nего\n собеседование. \nА точнее, его собеседование надо проходить с первой встречи. Потому что кандидат уже после первого момента делает свои выводы. Которые формируются еще до этапа встречных вопросов. Потом их нереально сложно изменить. По крайней мере, в лучшую сторону.\nНе слишком похоже на экзамен, не так ли? Экзаменаторов-то, в отличие от работодателей, обычно не выбирают.\nПосле сеанса рефлексии я перестроил процесс. Точнее, ту его часть, на которую мог влиять.\nВот что я исправил\nПерсонаж \nFix it Felix Jr\n мультфильма \"\nWreck-It Ralph\n\" c сайта \npxfuel.com\n  \n1. Снизил требования к резюме.\nПотому что\nЗа невзрачным резюме может стоять офигенный технарь. Может, конечно, и не стоять (и чаще всего не стоит), тогда потеряем время. Но немного, минут 15 на первичный звонок. Ведь время в это резюме уже было инвестировано: наш HR его нашел. И я как нанимающий менеджер это резюме прочитал. Почему бы не инвестировать еще немного? Ведь если кандидат окажется стоящим, мы с лихвой окупим инвестиции. И нанять его будет в разы проще, ведь большинство компаний его отфутболило на этапе чтения резюме. Особенно это важно, если ваша компания не из «первого дивизиона».\nРезультат: в четыре раза больше собеседований, которые позволили сделать в два раза больше офферов.\n2. Сократил вопросы вида «расскажите о себе».\nВедь я уже читал резюме\nВы ведь, если собеседуете, тоже заранее читаете резюме? Правда? Тогда зачем этот пересказ? Плохая самопрезентация — это потеря драгоценного времени и испорченное первое впечатление. А хорошая говорит лишь об умении кандидата готовиться к выступлениям. Полезный навык, конечно, но мы ведь технаря ищем. Все равно далее будет техническая часть, на которой «мы поглядим, какой это Сухов». И как он умеет излагать свои мысли. А вопросы «расскажите о себе», «какие ваши сильные стороны», «ваши слабые стороны» в нашей культуре встречают отторжение со стороны кандидата. И дают слишком мало информации интервьюеру.\nПоэтому данный этап сократил до минимума. Чтобы растопить лед, задаю один базовый вопрос: «Расскажите про ваш самый интересный проект». И слежу, чтобы ответ занял не более 3-5 минут. Самое сложное — удержаться от уточняющих вопросов.\nВторой и самый важный вопрос: «Расскажите о процессе разработки на последней работе. Вот у заказчика появляется идея, что с ней происходит дальше?».\n \nВопрос позволяет понять, насколько кандидат в курсе процессов и сложно ли ему будет перейти на наши. А также помогает оценить «зрелость» разработчика. Показывает его видение разделения ответственности. Его представление о командной игре. Впишется ли он в команду, или мы получим классическую картину: «\nк пуговицам претензии есть\n».\nПомните, я писал, что для меня важно, «потащит ли»? Так вот, на этом вопросе проясняется, потащит ли «по софтам».\nГлавное, надо следить за временем и не допускать ситуации «И тут Остапа понесло». Лично мне очень тяжело прерывать монологи кандидатов, но я работаю над этим. На этот вопрос выделяем минут 7-10.\nРезультат: Не распыляемся, и за 10-15 минут получаем представление, насколько кандидат подходит по soft skills.\n3. Самая главная часть: техническая. Тут я могу говорить только про опыт найма разработчиков. А разработчики, по большей части, читают код. Конечно, бывает, и пишут. Хорошие еще и удаляют. Но читают все же больше. \nПоэтому, на мой непросвещенный взгляд, самым лучшим заданием для оценки опыта стала задача проведения код-ревью. Я показываю экран синтезированного концентрата кода из копролитов и целлюлозы.\n А потом и ставлю задачу:\nпрочитать код\nсказать, что он делает\nчто в нем плохого и почему это плохо\nкак улучшить. \nНу а затем, в зависимости от ответа кандидата, задаю уточняющие вопросы. \nСтивен Хокинг писал, \nчто каждая включённая в книгу формула вдвое уменьшит число покупателей\n. Полагаю, это правило верно не только для формул, но и для строк кода. Поэтому буду предельно краток:\npublic void InviteCustomer(string name, int ordersCount, string age,  \n                           bool doNotHaveOrders, bool sex, string surname)\nЯзык — C#, но язык тут не важен. Даже об этой строчке можно долго говорить. Начать с обсуждения большого количества идущих вразнобой параметров странных типов (строковый возраст, например). И закончить предложением инкапсулировать нужные данные в некий класс Customer (попутно спросив, а почему же тут нет идентификатора).\nСкорость, с которой кандидат читает код, скорость, с которой он находит косяки, количество найденных косяков, предложения, как их исправить, — всё это скажет о реальных навыках. Имитировать их крайне трудно, если вообще возможно.\nВот, скажем, тема \nюнит-тестирования\n. Все как один говорят, что тест нужно писать. Подкованные кандидаты расскажут про \nTDD\n, заметив походя, что ну, по канонам TDD никто не пишет, все-таки, обычно сначала код, потом тесты. Легко купиться на теоретические знания. \nА вот если показать маленький фрагмент, и спросить: «А как бы вы тестировали?», все станет на свои места.\nif (DateTime.Now.Hour > 19)\n{          \n    Console.WriteLine(\"Good evening\");\n}\nЗабудем про магическую константу и про консоль. Фокусируемся на тестах.\nДжун либо растеряется, либо скажет про тестирование в отладчике.\nМиддл, вероятно, предложит передавать текущий час как параметр в текущий метод. А затем написать юнит-тесты, в которых вызывать текущий метод с разными значениями часа.\nСиньор может порекомендовать подставить через \nDI\n некий интерфейс, реализующий провайдер даты-времени, и использовать в коде время из этого провайдера. А для юнит-тестов предложит его «\nзамокать\n».\nПрелесть метода в том, что есть много «правильных» ответов, которые зависят от квалификации. И кандидат, выдав ответ, не будет считать, что ошибся. Но глубина его знаний и опыта неизбежно скажется на глубине ответов\n.\nИ подобных фрагментов в задании наберется больше десятка. Есть строчка, которая ну совсем не безопасна \nпри вызове из разных потоков\n. Есть код, который будет ну очень сильно тормозить. И от синьора ожидается, что он в курсе про \nсложность алгоритмов\n, может ее определить по коду и даст рекомендации по оптимизации. Есть строчки, выделяющие лишнюю память на ровном месте. А весь код в целом нарушает \nSRP\n. \nФу так писать. \nЯ не жду, что кандидат найдет все косяки в коде. Это не нужно. Но я жду, что по найденным проблемам будет предложено решение, соответствующее требуемому на данную вакансию опыту.\nЕсли позиция подразумевает глубокие знания в какой-то отдельной области например, знание асинхронности, дополнительно даю мелкий фрагмент асинхронного кода. Вопросы те же.\nРезультат: У соискателя стресс — меньше. Настроение — лучше. Нет негатива, если на что-то не ответил. У интервьюера же появляется хорошее представление о том, как кандидат будет работать. \nДанный этап для спеца миддл+ занимает у меня около 30 минут. Если собеседую синьора - то до 45. Больше нельзя, даже если очень хочется: кандидат устает и «плывет». \nДа, при данном формате собеседования всегда что-то не будет проработано. Ну и ладно. \nНикто не обнимет необъятного.  \nВообще я руководствуюсь принципом: если что-то не приближает меня к пониманию, подойдет ли кандидат, это что-то — не важно.\nИ вот, что попало в этот список неважного:\nНаличие сертификатов / конференций. Я видел как супер-спецов с сертификатами, так и пустышек, которые пытались сертификатами компенсировать неумение работать.\nGithub/pet project. У трети моих знакомых из крутых разрабов есть, что показать. У остальных — нет, но это не делает их менее крутыми. \nРабота в компаниях из «первого дивизиона». На мой взгляд, сам факт красивой строчки в резюме ничего не значит. \nУмение решать разного рода логические задачки. Ибо оно никак не коррелирует со способностью нанести пользу компании.\nХобби, фото, и подобные не относящиеся к профессии детали.\nВ финале спрашиваю, что кандидат ожидает от новой работы. Это важно, потому что позволяет понять мотивацию. В принципе, хочет ли кандидат работать? А если хочет - то захочет ли он работать именно с нами? Увы, желающих получать деньги обычно больше, чем желающих работать.\nНу а дальше — «продаем» себя, свой отдел, свой проект, свою компанию. Коротко, задорно, с блеском в глазах. Продаем минут пять.\nИ даем возможность кандидату задать свои вопросы. Это еще обычно 5-10 минут.\nИтого, собеседование с мидлом занимает час, с синьором — час с четвертью. \nКандидат должен уходить с собеседования в хорошем настроении, а не выжатым, как лимон. Узнав что-то новое и полезное для себя. И с позитивными мыслями о компании. \nДаже если он не подошел.\nИли нет: особенно, если он не подошел.\nМой отчет будет на почте у моего начальника и HR не позднее, чем через 4 часа после собеседования. \nИ я очень, очень прошу HR, чтобы они отписались бы кандидату в любом случае. И не позднее следующего дня.\n \n ",
    "tags": [
        "собеседование",
        "hr",
        "найм разработчиков",
        "найм",
        "интерьвю"
    ]
}
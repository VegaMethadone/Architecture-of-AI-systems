{
    "article_id": "728054",
    "article_name": "Скрам-мастер в сравнении с тимлидом",
    "content": "Поскольку методика Scrum стал самой популярной основой для гибкой (agile) разработки программного обеспечения, вам, возможно, уже приходилось работать со скрам-мастером (Scrum Master). Либо вы сами им были или думали о том, чтобы стать скрам-мастером самому. Многие не совсем понимают, что это за роль, и чем она отличается от менеджера проекта или руководителя команды. В этой статье мы четко объясним разницу между \nскрам-мастером\n и руководителем команды (тимлидом). Вы сможете понять, что они означают на самом деле, в чем они совпадают, а где нет. Давайте это выясним!\nСкрам-мастер \nСкрам-мастер — это одна из трех основных ролей или обязанностей в \nScrum\n. (Две другие — Разработчик (Developer) и \nВладелец продукта (Product Owner)\n). Скрам-мастер отвечает за эффективность работы скрам-команды. Он также отвечает за обучение команды и организации принципам Scrum.\nЭто неординарная роль, и ее нелегко сопоставить со многими из уже существующих, привычных для нас. Например, \nменеджер проекта\n, техлид (технический руководитель) или тимлид.\nЭта роль определенно не подразумевает \"менеджера\", и скрам-мастер не отвечает непосредственно за какого-либо человека или часть работы. В ранних версиях пособия Scrum Guide это подчеркивалось, и стиль его работы сопоставляли с ролью \n\"servant leader\" (\"лидер-слуга\")\n.\nДанный термин вызвал некоторую путаницу. И привел к тому, что некоторые скрам-мастера становились довольно пассивными, чересчур фокусируясь на слове \"слуга\". В результате появилось множество скрам-мастеров, которые только и делали, что назначали встречи и выслушивали жалобы и недовольства команды. Что не было полезным ни для кого.\nХотя это не менеджер и уж точно не менеджер проекта, хороший скрам-мастер на самом деле является \nлидером (руководителем)\n. Они призваны бросать вызов команде и выводить ее из зоны комфорта. Им не пристало быть пассивным слушателем и просто организатором встреч или фасилитатором.\nТимлид\nТимлид — это давняя и устоявшаяся роль. Ее реальное значение варьируется от контекста к контексту. А также от того, к какому типу относится команда и какой направленности специалист.\nВ кругах разработчиков программного обеспечения тимлид — это, как правило, старший разработчик (senior developer). Они могут быть вовлечены в решение фактических задач по разработке в спринте. (Если команда работает по методике Scrum). Но при этом зачастую выполняют функции, аналогичные техлиду. Это означает, что тимлиды отвечают за общее соответствие технических характеристик и качества кода создаваемого решения.\nЭто подразумевает руководство командой с точки зрения технических результатов, возможностей, архитектуры. Плюс другие общие вспомогательные средства, такие как пайплайны, управление конфигурацией, управление исходным кодом или бранчинг.\nДанная роль больше похожа на должность менеджера, в отличие от лидера-слуги. Зачастую это скорее управление работой, чем управление людьми. Тимлид или техлид может отвечать за эти технические области, но не обязательно отвечать за проект в целом, или быть менеджером разработчиков. (Они могут ими быть, но совсем не обязательно).\nОбратите внимание, что они редко отвечают за фактический объем работ (если только речь не идет о создании технического продукта, например, платформы или шлюза). В Scrum эти решения обычно принимает владелец продукта (аналогично продакт-менеджеру). Вне контекста Scrum это может быть менеджер проекта или программный менеджер.\nСкрам-мастер в сравнении с тимлидом\nТеперь у нас есть представление о каждой из этих двух ролей, давайте сравним их между собой. Так мы сможем понять разницу между скрам-мастером и тимлидом.\nМенеджмент\nТимлид или техлид часто является менеджером по технической деятельности или возможностям разработчиков. Скрам-мастер вообще не является менеджером. Ни по работе, ни по людям. Они призваны тренировать, направлять и \nулучшать\n команду. Но они не управляют командой, людьми или работой.\nЛидерство\nОбе эти роли — руководящие. Тимлид, очевидно, руководит командой с точки зрения технологии. Скрам-мастер — это руководитель Scrum и ее внедрения. Как в команде, так и в организации в целом. (Scrum становится успешной только тогда, когда организация сама вносит изменения в деятельность команды, чтобы поддержать ее и применение Scrum).\nНавыки\nТимлиду необходимы технические навыки и навыки работы с людьми. Они должны знать и понимать используемые технологии, а также то, как лучше их применять. Им также нужны навыки общения с людьми или \"мягкие\" навыки (soft skills). Они должны понимать, как выслушать людей, как разобраться в них и мотивировать.\nСкрам-мастеру тоже нужны эти мягкие навыки или навыки общения с людьми. Но им также необходимы Scrum-скиллы. Они должны действительно знать менталитет, ценности, принципы Scrum и \nгибкой (agile) разработки программного обеспечения\n. Необходимо разбираться в идеях, связанных с потребительской ценностью, обратной связью, циклами проверки/адаптации и \nуправлением бэклогами\n. Также нужно понимать “бережливые” (lean) идеи, касающиеся сокращения количества отходов, улучшения потока и непрерывного совершенствования.\nТимлиду целесообразно обладать такими навыками, но их наличие не является обязательным для его работы. Они зачастую слишком специализированы в своей технической области, чтобы обладать этими знаниями.\nИменно поэтому то и дело можно встретить команду, в которой есть и тимлид (или техлид), и скрам-мастер. Это не нарушает правил Scrum!\nСогласно Scrum-руководства, признаются только роли разработчика, владельца продукта и скрам-мастера. Это не значит, что других людей не существует! Просто все эти другие роли или названия соответствуют работе, не описанной в рамках Scrum-концепции. Так, тимлид или техлид обычно имеет Scrum-роль (или подотчетность) разработчика.\nИногда можно увидеть, что тимлид также несет на себе ответственность скрам-мастера. Но обычно это плохая идея — иметь одного человека, выполняющего сразу несколько Scrum-ролей.\nРезюме\nИтак, подводя итог, можно сказать, что существует четкое различие между тимлидом и скрам-мастером. Скрам-мастер фокусируется на обучении команды и организации методике Scrum и agile принципам. В то время как тимлид обычно управляет технической деятельностью разработчиков в команде. Они также могут быть непосредственными руководителями для сотрудников команды. (Таковым может быть и скрам-мастер). Надеюсь, в этом есть смысл! \nВ кризисное время высокой неопределенности на тимлида ложится повышенная нагрузка. Как управлять удаленной командой в текущих реалиях? Давайте разбираться вместе на \nоткрытом уроке\n. Мы обсудим:\nчто делать, если всех накрыла релокация;\nчто делать, если компания релоцирует вас самих;\nкак помочь сотрудникам адаптироваться к новым реалиям;\nкак сохранить командный дух, когда всё меняется;\nкак объяснить клиентам, что мы продолжаем работать как раньше.\nЗаписаться на бесплатное занятие можно \nна странице онлайн-курса \"Team Lead\".\n \n ",
    "tags": [
        "тимлид",
        "team lead",
        "управление командой",
        "управление командой разработки",
        "релокация",
        "скрам-мастер"
    ]
}
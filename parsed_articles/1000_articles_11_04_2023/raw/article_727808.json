{
    "article_id": "727808",
    "article_name": "Как мы проксировали OpenLDAP на AD через cn=config",
    "content": "Этот пост я хочу посвятить кейсу с крупного ИТ-проекта, который делала наша компания. В рамках проекта внедрялось большое количество сервисов, и для них нужно было обеспечить LDAP-аутентификацию при следующих операциях:\nДоступ в GUI-интерфейсы сервисов.\nДоступ по SSH на серверы, где функционируют сервисы, с ограничением доступа на основании членства пользователей в группах LDAP-каталога.\nУ заказчика уже была развернута служба каталогов Microsoft Active Directory. Требованием проекта было отсутствие прямого доступа между внедряемыми сервисами и AD. На стороне сервисов не должны были прописываться параметры сервисных учетных записей AD. Кроме того, сетевой доступ к контроллеру MS AD был разрешен только для одного хоста.\nПод катом — подробности о том, как мы решили эту задачу. \nДля решения данной задачи был выбран \nOpenLDAP \nв режиме проксирования аутентификационных запросов в сторону контроллеров MS AD. Для входа на серверы был использован модуль SSSD, обрабатывающий LDAP(S)-запросы с дополнительной фильтрацией по группам MS Active Directory.\nЗадача проксирования запросов через OpenLDAP не выглядит чем-то сложным. В Интернете достаточно информации на эту тему. Загвоздка была в том, что в основном они описывают выполнение конфигурации OpenLDAP через файл sladp.conf. Однако начиная с версии OpenLDAP 2.4 настройка происходит не с помощью slapd.conf, а через конфигурационный контекст LDAP cn=config. Вариант настройки через slapd.conf устарел и более не поддерживается. В свободном доступе крайне мало похожих примеров настроек через cn=config.\nВ статье\n я постарался максимально \nподробно описать технику настройки OpenLDAP 2.6 и SSSD через cn=config на Rocky Linux 8.5 и рассказать, как мы решали возникающие в процессе проблемы. \nУстановка OpenLDAP\nДля установки OpenLDAP нужно выполнить следующие действия:\n1. Установить зависимости:\n# dnf install wget vim cyrus-sasl-devel libtool-ltdl-devel openssl-devel libdb-devel make libtool autoconf tar gcc perl perl-devel -y\n2. Подключить репозиторий Symas, чтобы скачать из него OpenLDAP:\n#wget -q https://repo.symas.com/configs/SOFL/rhel8/sofl.repo -O /etc/yum.repos.d/sofl.repo\n3. Установить серверную и клиентскую части OpenLDAP:\n#dnf install symas-openldap-clients symas-openldap-servers -y\n4. Добавить OpenLDAP (slapd.service) в автозагрузку и включить службу:\n#systemctl enable slapd\n#systemctl start slapd\nНастройка OpenLDAP\nНа сервере OpenLDAP (в нашем примере opld.test.local) нужно выполнить следующие действия:\n1. Внести информацию о BASE и URI в файл /etc/openldap:\nBASE    dc=test,dc=local\nURI     ldap://opld.test.local ldaps://opld.test.local:636\n2. При работе OpenLDAP в режиме проксирования контроллер домена Microsoft Active Directory будет являться для OpenLDAP backend-базой данных LDAP-типа. Для возможности подключения OpenLDAP к контроллеру домена необходимо загрузить модуль back_ldap.\nДля этого: \na. Убедиться в наличии файла back_ldap.la на сервере OpenLDAP. Если его нет, то на сервер OpenLDAP необходимо загрузить данную библиотеку. \nb. Создать файл ldif в виде:\ndn: cn=module,cn=config\nobjectClass: olcModuleList\ncn: module\nolcModulePath: /usr/lib64/openldap\nolcModuleLoad: back_ldap.la\nc. Загрузить back_ldap.ldif файл в конфигурацию сервера OpenLDAP:\n#ldapadd -Y EXTERNAL -H ldapi:/// -f back_ldap.ldif\n3. Создать backend-базу типа ldap, в качестве которой будет выступать Active Directory:\na. Создать файл ldap_db.ldif в виде:\ndn: olcDatabase=ldap,cn=config\nobjectClass: olcDatabaseConfig\nobjectClass: olcLDAPConfig\nolcDatabase: ldap\nolcDbIDAssertBind: bindmethod=\"simple\" binddn=\"CN=tech_test_local,OU=Tech\n Accounts,DC=test,DC=local\" credentials=\"password\"\nolcDbURI: ldaps://dc01.test.local \nolcReadOnly: TRUE\nolcRootDN: cn=openldap,dc=test,dc=local\nolcRootPW: password\nolcSuffix: dc=test,dc=local\nolcDbChaseReferrals: FALSE\nolcDbIDAssertBind: Указание метода подключения, distinguishedName и пароля УЗ для подключения к контроллеру MS Active Directory.\nolcDbURI: URI контроллера AD.\nolcReadOnly: Режим работы (чтение/запись) с MS Active Directory.\nolcRootDN: Сервисная УЗ OpenLDAP. С помощью нее к OpenLDAP будут подключаться сервисы. \nolcRootPW: Пароль от сервисной УЗ OpenLDAP.\nolcSuffix: Суффикс домена.\nolcDbChaseReferrals: Определяет возможность использования механизма отсылок.\nЧтобы зашифровать пароль olcRootPW, выполнить команду:\n# slappasswd -s password\nи сгенерированное хэш-значение указать в атрибут olcRootPW.\nb. На сервере OpenLDAP выполнить команду:\n#ldapadd -Y EXTERNAL -H ldapi:/// -f ldap_db.ldif\n4. Настроить защищенное TLS-соединение между OpenLDAP и AD. \nДолжны быть предоставлены цепочки сертификатов удостоверяющих центров, которые выпустили сертификаты для контроллера домена:\na. Положить цепочку сертификатов (cacerts.pem) на сервер OpenLDAP (например, в /etc/openldap/certs).\nb. В файле /etc/openldap/ldap.conf указать путь к сертификату:\nTLS_CACERT      /etc/openldap/certs/cacerts.pem\n   \n5. Обеспечить возможность подключения сервисов к OpenLDAP по LDAPS:\na. Выпустить ключ и сертификат для сервера OpenLDAP. Положить сертификат (oldap.crt) и ключ (oldap.key) на сервер OpenLDAP (например, в /etc/openldap/certs).\nb. Создать opldcert.ldif файл:\ndn: cn=config\nobjectClass: olcDatabaseConfig\nobjectClass: olcLDAPConfig\nolcDatabase: cn=config\nchangetype: add\nolcTLSCertificateFile: /etc/openldap/certs/oldap.crt\nolcTLSCertificateFileKey: /etc/openldap/certs/oldap.key\nolcTLSVerifyClient: never\nc. Выполнить команду:\n#ldapadd -Y EXTERNAL -H ldapi:/// -f opldcert.ldif\nНа этом конфигурация OpenLDAP в режиме проксирования завершена. После завершения этой настройки сервер может обрабатывать LDAP/LDAPS входящие запросы от клиентов, производить проксирование запросов на контроллер домена MS Active Directory. Mежду сервером OpenLDAP и контроллером домена MS Active Directory настроено защищенное соединение.\nНиже опишу реализацию настройки модуля SSSD в части SSH-аутентификации на клиентские серверы с учетом фильтрации согласно членству в группах MS Active Directory. \nНастройка службы SSSD\n1. Установить пакеты SSSD:\n# sudo yum install sssd-tools sssd oddjob oddjob-mkhomedir samba-common-tools\n2. Настроить файл ldap.conf на клиентских серверах. Загружаем сертификат сервера OpenLDAP и прописываем путь к нему:\nURI   ldap://opld.test.local ldaps://opld.test.local:636\nBASE  dc=test,dc=local\nTLS_CACERT  /etc/openldap/certs/oldap.crt\nTLS_CACERTDIR /etc/openldap/certs\n <![if !supportLineBreakNewLine]>\n <![endif]>\n3. Создать файл sssd.conf. (etc/sssd/sssd.conf):\n[domain/test.local]\nldap_schema = ad\nid_provider = ldap\nautofs_provider = ldap\nauth_provider = ldap\nchpass_provider = ldap\nldap_uri = ldaps://opld.test.local:636\nldap_search_base = dc=test,dc=local\nldap_id_use_start_tls = True\nldap_tls_cacertdir = /etc/openldap/certs\ncache_credentials = False\nldap_tls_reqcert = allow\nldap_default_bind_dn = cn=openldap,dc=test,dc=local\nldap_default_authtok_type = obfuscated_password\nldap_default_authtok = #зашифровать и ввести в следующем шаге\nldap_access_order = filter\nldap_id_mapping = True\nldap_referrals = False\naccess_provider = ldap\nldap_access_filter = (|(memberOf= CN=Admins,DC=test,DC=local)(memberOf=CN=Support,DC=test,DC=local))\nuse_fully_qualified_names = False\n\n# Object Mappings\n\nldap_user_object_class = user\nldap_user_name = sAMAccountName\nldap_group_object_class = group\nldap_group_name = cn\n\n# ID Mappings\n\nldap_user_objectsid = objectSid\nldap_group_objectsid = objectSid\nldap_idmap_range_size = 1048576\nldap_user_primary_group = primaryGroupID\noverride_homedir = /mnt/home/%u \ndefault_shell = /bin/bash\nfallback_homedir = /home/%u@%d\n\n[sssd]\n\nconfig_file_version = 2\nservices = nss, pam,autofs\ndomains = test.local\n\n[nss]\n\nhomedir_substring = /home\nВ примере ниже я использовал параметр ldap_acсess_filter с группами AD (Admins, TechSupport). Подключиться к серверу смогут только те пользователи, кто состоит в этих MS AD группах.\n4. Дать права файлу sssd.conf:\n# chmod 600 /etc/sssd/sssd.conf\n5. Чтобы пароль не хранился в открытом в виде, зашифровать его:\n# sss_obfuscate -d test.local\n   \n6. Внести в файл /etc/hosts или настроить адрес OpenLDAP на вашем DNS-сервере:\n# (IP OpenLDAP)  opld.test.local\n7. Перезапустить sssd, проверить работу службы с помощью команды id:\n# systemctl restart sssd.service\n#id {username}\n#User Found (id=1234567) # Пример вывода строки, найденного пользователя\n8. Переключить профиль входа в Linux на использование sssd (LDAP-аутентификация):\n# authselect select sssd --force\n9. Настроить sudo права для доменных УЗ:\n# echo \"sudoers:    files sss\" >> /etc/nsswitch.conf\n10. Обеспечить создание домашних директорий для доменных пользователей:\n# systemctl enable --now oddjobd\n# echo \"session optional pam_oddjob_mkhomedir.so skel=/etc/skel/ umask=0022\" >> /etc/pam.d/system-auth\n \n# systemctl restart oddjobd\n11. Проверить работу SSSD:\n# sssctl domain-status test.local\n12. Если вы получаете вывод подобного рода, то SSSD настроен корректно, можно попробовать аутентифицироваться на сервер:\n# sssctl domain-status test.local\n Online status: Online\n Active servers:\nLDAP: test.local\n Discovered LDAP servers:\n- test.local\nЕсли вы получаете статус Offline, значит, на каком-то этапе выше вы допустили ошибку, проверяйте заново.\nПроблемы и решение\nПосле подключения одной из систем и настройки LDAP-аутентификации обнаружили проблему, что аутентификация в Web UI не проходила. Такая же проблема была замечена при попытке аутентификации по SSH. Сессия на аутентификацию отваливалась по тайм-ауту. Такое поведение обнаруживалось, если осуществлялся поиск по всему домену. При этом, если мы сужали границы поиска, например, на уровень только определенной OU, то проблема уходила, и пользователи могли аутентифицироваться.\nБыли сняты дампы обращений клиента к OpenLDAP и OpenLDAP к MS AD. Из них выяснили, что при поиске по всему домену, помимо ответа на запрос, было обращение к DomainDNSZones с помощью механизма отсылок (Referrals). \nОтсылка — это процесс, посредством которого LDAP-сервер, вместо того чтобы вернуть результат запроса, возвращает ссылку (отсылку, referral) на другой LDAP-сервер или, в нашем случае, домен-контроллер, который может содержать дополнительную информацию. Получая referral на DomainDNSZones, OpenLDAP выполнял запрос контроллерам домена MS AD, к которым не было сетевого доступа. В связи с этим висела сессия от сервера OpenLDAP к MS AD, и далее она обрывалась по тайм-ауту.\nСоответственно, для решения проблемы нужно было найти способ управления рефералами. В основном все статьи, связанные с данной проблемой, описывали настройки с помощью конфигурационного файла slapd.conf, а не cn=config.\nИсследуя схему OpenLDAP, был найден параметр olcDbChaseReferrals, который как раз и отвечал за отсылки при обращении к MS AD. Если использовать значение olcDbChaseReferrals=FALSE, то LDAP, получая referral на DomainDNSZones, игнорирует это и не обращается к прочим контроллерам домена.\nВ документации к SSSD мы также обнаружили параметр, отвечающий за отсылки — \nldap_referrals\n. После применения этого параметра со значением \nFALSE \nSSSD перестал падать и терять соединение с контроллером домена.\nЕще один интересный момент, который мы заметили, был связан с настройкой фильтрации доступа на основе членства в группах AD. Мы увидели, что после настройки фильтра пользователи не могли получить доступ к серверу. Проблема заключалась в том, что при вычитывании объектов из SSSD им не назначался корректный уникальный ID. ID генерировался самой Linux-машиной, а должен был быть получен в атрибуте objectSID из MS Active Direсtory. Таким образом, SSSD не мог получить корректный список AD-групп, в которые входит пользователь (SSSD должен сопоставлять идентификаторы пользователей и групп из атрибутов ldap_user_objectsid и ldap_group_objectsid вместо того, чтобы полагаться на сгенерированные Linux’ом ID). Решением проблемы стало использование параметр \nldap_id_mapping\n со значением \nTRUE\n.\nНадеюсь, этот пост был полезным и помог решить задачи быстрее. Если у кого-то есть подобный опыт в настройках, делитесь вашими знаниями, буду готов обновить и дополнить статью свежей информацией. \nАвтор поста: старший пресейл-инженер Владислав Алешин\n \n \n \n ",
    "tags": [
        "прокси",
        "информационная безопасность"
    ]
}
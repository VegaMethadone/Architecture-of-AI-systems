{
    "article_id": "729228",
    "article_name": "Топ-11 ошибок при установке Kubernetes, которые не стоит допускать",
    "content": "Автор делится своим опытом установки Kubernetes на AWS Cloud и с использованием Ubuntu 20.04. Он столкнулся с некоторыми ошибками в процессе установки, и смог найти решения для них.\nОшибка при копировании и дальнейшем выполнении команд Kubernetes с официального сайта продукта: \nПроблемы с ключом GPG при установке kubectl на Linux;\nПроблемы с правами доступа и дисковым пространством при выполнении команды 'sudo curl' для установки Kubernetes на Linux;\nПри выполнении команды 'kubectl apply возникает ошибка 404 Not Found с URL манифеста Flannel;\nПри выполнении команды 'sudo kubectl apply' возникает ошибка Connection Refused с URL Flannel Manifest;\nКак устранить неполадки при установке Docker, если ядро не поддерживает необходимые функции;\nСинтаксическая ошибка в файле списка источников Kubernetes;\nОшибка при запуске службы Docker на Ubuntu 20.04\nСлужба Kubelet не запускается и выдает ошибку адреса конечной точки запуска контейнера на Ubuntu\nКонтейнер 'kube-flannel'\\ запускается с ошибкой, в результате которой pod переходит в состояние CrashLoopBackOff\n'kubeadm' не найден\nОшибка:\nsudo apt update\nHit:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu focal InRelease\nHit:2 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu focal-updates InRelease\nHit:3 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu focal-backports InRelease\nHit:5 http://security.ubuntu.com/ubuntu focal-security InRelease\nGet:4 https://packages.cloud.google.com/apt kubernetes-xenial InRelease [8993 B]\nErr:4 https://packages.cloud.google.com/apt kubernetes-xenial InRelease\n  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05\nReading package lists... Done\nW: GPG error: https://packages.cloud.google.com/apt kubernetes-xenial InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05\nE: The repository 'https://apt.kubernetes.io kubernetes-xenial InRelease' is not signed.\nN: Updating from such a repository can't be done securely, and is therefore disabled by default.\nN: See apt-secure(8) manpage for repository creation and user configuration details.\nДавайте разберемся, как мы можем решить эту проблему: \nПервая ошибка, с которой вы столкнулись, связана с проблемой соединения с сервером Kubernetes API.\nСообщение об ошибке «Соединение с сервером localhost:8080 было отклонено» показывает, что команда kubectl не может подключиться к серверу Kubernetes API.\nЭто может произойти по разным причинам: например, из-за неправильных настроек сети, неверно сконфигурированного файла kubeconfig или проблемы с самим API-сервером Kubernetes.\nЧтобы устранить эту ошибку, можно попробовать выполнить следующие действия:\nУбедитесь, что API-сервер Kubernetes  запущен. Проверьте состояние сервера Kubernetes API, выполнив команду sudo systemctl status kube-apiserver. Если служба не запущена, попробуйте запустить ее, выполнив команду sudo systemctl start kube-apiserver.\nУбедитесь, что API-сервер Kubernetes  доступен с вашего компьютера. Проверьте, настроен ли файл kubeconfig с верным IP-адресом или именем хоста сервера.\nПроверьте настройки kubeconfig: проверьте и убедитесь, в том, что файл kubeconfig  содержит правильную информацию о кластере Kubernetes, включая адрес сервера и информацию об аутентификации.\nА теперь перейдем ко второй ошибке нашего списка: \nСообщение об ошибке «The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05» указывает на то, что в вашей системе отсутствует GPG-ключ для репозитория пакетов Kubernetes.\nЧтобы исправить эту ошибку, необходимо импортировать GPG-ключ для репозитория пакетов Kubernetes с помощью следующей команды:\ncurl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nПосле импорта ключа можете снова запустить sudo apt update, чтобы обновить списки пакетов.\nЭта ошибка возникает, когда вы выполняете данную команду от имени обычного пользователя, потому что только администратор может напрямую добавлять в apt и when без создания каталога.\nsudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\nОшибка\nsudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\ncurl: (23) Failed writing body (0 != 1210)\nКак можно решить эту проблему? Давайте разберемся: \nОшибка «curl: (23) Failed writing body (0 != 1210)» появляется, когда команда curl не может записать данные в указанный файл из-за ограниченных прав доступа или дискового пространства.\nЧтобы решить эту ошибку, вы можете попробовать выполнить следующие действия:\nПроверьте, достаточно ли свободного места на диске, выполнив следующую команду:\ndf -h\nЭта команда должна показать доступное дисковое пространство и есть ли необходимость освободить его. \nПроверьте, достаточно ли у вас прав на запись в указанный файл. Для этого запустите следующую команду:\nls -l /etc/apt/keyrings/\nЭта команда должна отобразить разрешения каталога, в который записывается файл. Если у вас недостаточно прав, попробуйте выполнить команду с правами администратора.\nПроверьте, нет ли проблем с сетевым подключением, попробовав загрузить файл с помощью веб-браузера или следующей команды:\ncurl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg -o /tmp/key.gpg\nЕсли загрузка прошла успешно, попробуйте снова выполнить начальную команду. Если загрузка не удалась, возможно, возникли проблемы с сетью, которые необходимо решить.\nРазбираем третью ошибку:\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml\nПри выполнении команды 'kubectl apply возникает ошибка 404 Not Found с URL манифеста Flannel;\nЭта ошибка возникает потому, что заданный YAML-файл недоступен по указанному URL. Чтобы исправить эту ошибку, необходимо загрузить файл локально, а затем применить его с помощью команды kubectl apply.\nРешение:\n \nЗагрузите YAML-файл с помощью следующей команды:\nwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml\nФайл kube-flannel-rbac.yml в ваш текущий каталог.\nПримените YAML-файл  с помощью следующей команды:\nkubectl apply -f kube-flannel-rbac.yml\nПерейдем к четвертой ошибке:\nsudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml\nСоединение с сервером localhost:8080 прервано — вы указали правильный хост или порт?\nЭта ошибка возникает, когда kubectl не может подключиться к API-серверу  Kubernetes. Чтобы устранить эту ошибку, вы можете проверить состояние API-сервера  и конфигурацию kubectl.\nПроверьте состояние API-сервера  Kubernetes с помощью следующей команды:\nsudo systemctl status kubelet\nЭто отобразит статус службы kubelet. Если служба не запущена, вы можете запустить ее с помощью команды sudo systemctl start kubelet.\nПроверьте конфигурацию kubectl с помощью данной команды:\nkubectl config view\nЭто покажет вашу актуальную конфигурацию kubectl. Убедитесь, что в поле server установлен правильный URL API-сервера. \nЕсли необходимо, обновите конфигурацию kubectl, чтобы указать на верный API-сервер Kubernetes. Для изменения конфигурации можно использовать команду kubectl config. Например:\nkubectl config set-cluster my-cluster --server=https://my-kubernetes-api-server:6443\nkubectl config set-context my-context --cluster=my-cluster\nkubectl config use-context my-context\nЗамените my-cluster и my-context на необходимые вам имена, а \nhttps://my-kubernetes-api-server:6443\n замените на URL вашего API-сервера. После обновления конфигурации вы можете снова выполнить команду kubectl apply.\nВремя пятой ошибки \nОна может возникнуть при вызове данной команды:\napt-get update\napt-get install apt-transport-https\napt install -y docker.io\nsudo systemctl status docker\nСама ошибка:\n● docker.service - Docker Application Container Engine\n     Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sun 2023-03-12 07:12:57 UTC; 1min 12s ago\nTriggeredBy: ● docker.socket\n       Docs: https://docs.docker.com\n   Main PID: 4277 (dockerd)\n      Tasks: 8\n     Memory: 23.1M\n     CGroup: /system.slice/docker.service\n             └─4277 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.234538017Z\" level=warning msg=\"Your kernel does not support CPU realtime scheduler\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.234813472Z\" level=warning msg=\"Your kernel does not support cgroup blkio weight\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.234920598Z\" level=warning msg=\"Your kernel does not support cgroup blkio weight_device\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.235173251Z\" level=info msg=\"Loading containers: start.\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.373408785Z\" level=info msg=\"Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.430371512Z\" level=info msg=\"Loading containers: done.\"\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.462048764Z\" level=info msg=\"Docker daemon\" commit=\"20.10.21-0ubuntu1~20.04.1\" graphdriver(s)=overlay2 version=20.10.21\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.462172535Z\" level=info msg=\"Daemon has completed initialization\"\nMar 12 07:12:57 master systemd[1]: Started Docker Application Container Engine.\nMar 12 07:12:57 master dockerd[4277]: time=\"2023-03-12T07:12:57.500701925Z\" level=info msg=\"API listen on /run/docker.sock\"\nЧто со всем этим можно сделать:\nСообщение об ошибке указывает на то, что ядро вашей системы не поддерживает определенные функции, требуемые Docker, а именно \"CPU realtime scheduler\", \"cgroup blkio weight\" и \"cgroup blkio weight_device\".\nЧтобы устранить неполадки и решить проблему, вы можете попробовать сделать следующее: \nПроверьте состояние службы Docker с помощью команды:\nsudo systemctl status docker\nЭто покажет вам статус службы Docker и все сообщения об ошибках.\nЕсли служба не работает, запустите ее с помощью команды:\nsudo systemctl start docker\nЕсли сообщения об ошибках не исчезают, можно попробовать обновить ядро до более новой версии, поддерживающей необходимые функции.\nВ качестве альтернативы можно попробовать изменить конфигурацию Docker, чтобы отключить функции, которые не поддерживаются вашим ядром. Для этого создайте файл /etc/docker/daemon.json, если он еще не существует, и добавьте в него следующую информацию:\n{     \"cgroupdriver\": \"systemd\" }\nЭто устанавливает драйвер cgroup в systemd.\nПерезапустите службу Docker с помощью команды:\nsudo systemctl restart docker\nЭто должно активировать изменения, внесенные в конфигурацию Docker.\nУбедитесь, что Docker работает без ошибок, еще раз проверив его состояние:\nsudo systemctl status docker\nЕсли проблема сохраняется, вам может потребоваться изучить документацию по Docker и ядру или обратиться за помощью в соответствующие сообщества.\nОсновываясь на сообщение об ошибке и выводе команды systemctl status docker, похоже, что Docker запущен с уведомлениями, связанными с поддержкой ядром определенных параметров типа CPU realtime scheduler и cgroup blkio weight. Однако эти уведомления не должны вызывать непосредственных проблем с запуском контейнеров Docker.\nЕсли вы столкнулись с какими-либо специфическими проблемами, связанными с Docker, вы можете попробовать выполнить следующие шаги для решения проблем:\nПроверьте логи Docker: для этого используйте команду sudo journalctl -u docker. Это может дать больше информации о любых ошибках или проблемах, связанных с Docker.\nПерезапустите Docker: для того используйте команду sudo systemctl restart docker.\nЕсли приведенные выше шаги не помогли, вы можете попробовать полностью удалить, а затем заново установить Docker. Используйте команду sudo apt-get remove docker docker-engine \ndocker.io\n containerd runc для удаления Docker и его приложений, а затем следуйте официальному руководству по установке Docker для Ubuntu 20.04 для повторной установки.\nЕсли при работе с Docker у вас всё ещё есть проблемы, возможно, вам нужно проверить, поддерживает ли ядро необходимые функции, требуемые Docker. Для этого используйте команду grep CONFIG_BLK_CGROUP/boot/config-$(uname -r), чтобы проверить, поддерживает ли ядро параметр cgroup blkio weight. По аналогии можно вызвать команду grep CONFIG_RT_GROUP_SCHED /boot/config-$(uname -r), чтобы проверить, поддерживает ли ядро CPU realtime scheduler. Если эти функции не поддерживаются, потребуется обновить ядро или использовать другую версию.\nШестая ошибка, когда вы запускаете данную команду\nОшибка:\necho “deb https://apt.kubernetes.io/ kubernetes-xenial main” | sudo tee -a /etc/apt/sources.list.d/kubernetes.list\n“deb https://apt.kubernetes.io/ kubernetes-xenial main”\nroot@master:~# sudo apt-get update\nE: Type '“deb' is not known on line 2 in source list /etc/apt/sources.list.d/kubernetes.list\nE: The list of sources could not be read.\nВаше решение: \nСообщение указывает на синтаксическую ошибку в файле /etc/apt/sources.list.d/kubernetes.list. Ошибка возникает потому, что в файле присутствует символ двойной кавычки, который не распознается как допустимый синтаксис.\nЧтобы устранить эту ошибку, необходимо отредактировать файл /etc/apt/sources.list.d/kubernetes.list и удалить двойные кавычки вокруг URL. \nОткройте файл /etc/apt/sources.list.d/kubernetes.list с помощью текстового редактора, например, nano или vi:\nsudo nano /etc/apt/sources.list.d/kubernetes.list\nУдалите двойные кавычки вокруг URL, чтобы файл выглядел следующим образом:\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nСохраните файл и выйдите из редактора.\nСнова запустите команду update.\nsudo apt-get update\nЭто позволит устранить ошибку и продолжить установку или обновление Kubernetes.\nМы прошли середину — 7 ошибка, когда вы используете эту команду:\nsudo sysctl — system\nОшибка\nError 8\ncat << EOF | sudo tee /etc/sysctl.d/k8s.conf\n> net.bridge.bridge-nf-call-ip6tables = 1\n> net.bridge.bridge-nf-call-iptables = 1\n> EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nubuntu@master:~$ sudo sysctl — system\nsysctl: cannot stat /proc/sys/—: No such file or directory\nsysctl: cannot stat /proc/sys/system: No such file or directory\nЭта ошибка вызвана опечаткой в запущенной вами команде. Вместо команды sudo sysctl --system вы выполнили команду sudo sysctl - system, которая содержит неправильный символ перед словом \"system\" (— вместо -).\nЧтобы исправить эту ошибку, нужно просто повторно выполнить команду sudo sysctl --system с правильным синтаксисом:\nsudo sysctl --system\nЭто перезагрузит настройки sysctl-системы с изменениями, которые вы сделали в предыдущей команде (cat << EOF | sudo tee /etc/sysctl.d/k8s.conf ...). \nИтак, ошибка 8\nsudo systemctl status docker\n● docker.service - Docker Application Container Engine\n     Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)\n     Active: failed (Result: exit-code) since Sun 2023-03-12 07:30:20 UTC; 21s ago\nTriggeredBy: ● docker.socket\n       Docs: https://docs.docker.com\n   Main PID: 6885 (code=exited, status=1/FAILURE)\n\nMar 12 07:30:20 master systemd[1]: docker.service: Scheduled restart job, restart counter is at 3.\nMar 12 07:30:20 master systemd[1]: Stopped Docker Application Container Engine.\nMar 12 07:30:20 master systemd[1]: docker.service: Start request repeated too quickly.\nMar 12 07:30:20 master systemd[1]: docker.service: Failed with result 'exit-code'.\nMar 12 07:30:20 master systemd[1]: Failed to start Docker Application Container Engine.\n\nСообщение об ошибке указывает на то, что служба Docker не может запуститься на вашей ОС Ubuntu 20.04. Вот несколько возможных причин, почему это может произойти:\nНедостаточно системных ресурсов: для нормальной работы Docker требуется определенное количество системных ресурсов типа оперативной памяти и дискового пространства. Если их не хватает, то Docker может не запуститься.\nПроблемы с конфигурацией Docker: например, неправильные настройки в конфигурационном файле демона Docker.\nСетевые проблемы: Docker может не запуститься, если он не подключен к сети к сети.\nЧтобы устранить эту проблему, вы можете попробовать выполнить следующие действия:\nУдостоверьтесь, что на вашей компьютере достаточно ресурсов системы. Вы можете проверить системные ресурсы с помощью команды top.\nПроверьте конфигурационный файл демона Docker (/etc/docker/daemon.json) на наличие ошибок или неправильных настроек. Вы также можете попробовать сбросить конфигурацию к исходным значениям.\nУбедитесь, что ваша машина подключена к сети и что нет никаких проблем с сетевой конфигурацией.\nВы можете попробовать перезапустить службу Docker с помощью команды systemctl:\nsudo systemctl restart docker\nЕсли проблема сохраняется, вы можете проверить логи Docker для получения дополнительной информации об ошибке. Чтобы посмотреть журналы, используйте следующую команду:\nsudo journalctl -u docker.service\nОшибка №9\nubuntu@master:~$ sudo systemctl status kubelet\n● kubelet.service - kubelet: The Kubernetes Node Agent\n     Loaded: loaded (/lib/systemd/system/kubelet.service; enabled; vendor preset: enabled)\n    Drop-In: /etc/systemd/system/kubelet.service.d\n             └─10-kubeadm.conf\n     Active: activating (auto-restart) (Result: exit-code) since Sun 2023-03-12 07:30:56 UTC; 7s ago\n       Docs: https://kubernetes.io/docs/home/\n    Process: 6948 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET>\n   Main PID: 6948 (code=exited, status=1/FAILURE)\n\nMar 12 07:30:56 master systemd[1]: kubelet.service: Failed with result 'exit-code'.\n\njournalctl -u kubelet\nMar 12 12:28:34 ip-10-0-30-59 kubelet[17467]: E0312 12:28:34. 039287   17467 run.go:74] \"command failed\" err=\"failed to validate kubelet flags: the container runtime endpoint address >\nMar 12 12:28:34 ip-10-0-30-59 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE\nMar 12 12:28:34 ip-10-0-30-59 systemd[1]: kubelet.service: Failed with result 'exit-code'.\nMar 12 12:28:44 ip-10-0-30-59 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 4.\nMar 12 12:28:44 ip-10-0-30-59 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.\nMar 12 12:28:44 ip-10-0-30-59 systemd[1]: Started kubelet: The Kubernetes Node Agent.\n\nСообщение об ошибке указывает на то, что служба kubelet не может запуститься из-за проблемы с адресом конечной точки запуска контейнера. \nОшибка может быть вызвана несколькими причинами, такими как неправильная конфигурация или проблема с установкой Docker или Kubernetes.\nПроверьте журналы Docker на наличие ошибок:\nsudo systemctl status docker\nСначала проверьте состояние службы Docker:\nsudo journalctl -u docker\nПроверьте конфигурационный файл Kubernetes на ошибки:\nsudo cat /etc/kubernetes/kubelet.conf\nУбедитесь, что файл конфигурации корректен и содержит правильную информацию.\nПерезапустите службу kubelet:\nsudo systemctl restart kubelet\nЕсли ошибка была временной, то можете переустановить Docker и Kubernetes. Если ни одно из вышеперечисленных действий не помогло, попробуйте удалить, а затем заново установить Docker и Kubernetes.\nsudo apt-get remove docker kubeadm kubectl kubelet\nsudo apt-get install docker kubeadm kubectl kubelet\nКонец близок — 10 ошибка\nstatus kubelet\n● kubelet.service - kubelet: The Kubernetes Node Agent\n     Loaded: loaded (/lib/systemd/system/kubelet.service; enabled; vendor preset: enabled)\n    Drop-In: /etc/systemd/system/kubelet.service.d\n             └─10-kubeadm.conf\n     Active: active (running) since Mon 2023-03-13 03:23:36 UTC; 2min 7s ago\n       Docs: https://kubernetes.io/docs/home/\n   Main PID: 6431 (kubelet)\n      Tasks: 9 (limit: 1143)\n     Memory: 51.2M\n     CGroup: /system.slice/kubelet.service\n             └─6431 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --pod-infra-container-image=registry.k8s.io/pause:3.9\n\nMar 13 03:24:55 ip-10-0-25-32 kubelet[6431]: I0313 03:24:55.627566    6431 scope.go:115] \"RemoveContainer\" containerID=\"21d2dba09108263e7e4ab22431e1e71645d784ba5c6e692b8367bc947e6bcf39\"\nMar 13 03:24:55 ip-10-0-25-32 kubelet[6431]: E0313 03:24:55.628439    6431 pod_workers.go:965] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"kube-flannel\\\" with CrashLoopBackOff: \\\"back-off 40s restarting failed container=kube-flannel pod=kube-flannel-ds-lwbxr_kube-flannel(4dcbb423-a021-4f72-ab55-f846f3a3ebfb)>\n\nMar 13 03:25:36 ip-10-0-25-32 kubelet[6431]: I0313 03:25:36.626516    6431 scope.go:115] \"RemoveContainer\" containerID=\"d30a5bfd77a35ef38f548b763cc5ec3f1bcb9ee8923c92ddbf1030c15ed8d7b3\"\nMar 13 03:25:36 ip-10-0-25-32 kubelet[6431]: E0313 03:25:36.627396    6431 pod_workers.go:965] \"Error syncing pod, skipping\" err=\"failed to \\\"StartContainer\\\" for \\\"kube-flannel\\\" with CrashLoopBackOff: \\\"back-off 1m20s restarting failed container=kube-flannel pod=kube-flannel-ds-lwbxr_kube-flannel(4dcbb423-a021-4f72-ab55-f846f3a3ebf\nСообщение об ошибке указывает на то, что возникли проблемы с запуском контейнера \"kube-flannel\", и pod застрял в состоянии CrashLoopBackOff. Это может быть вызвано различными причинами, такими как неправильная конфигурация стручка, недостаток ресурсов или проблема с образом контейнера.\nВот несколько шагов, которые можно предпринять для устранения этой проблемы:\nПроверьте логи контейнера: для этого используйте команду \"kubectl logs\".\nУбедитесь, что образ контейнера доступен.\nПроверьте, достаточно ли ресурсов выделено для процессора и памяти. Если нет, увеличьте лимиты ресурсов, чтобы контейнер запустился нормально.\nПроверьте правильность конфигурации pod,  его зависимостей и переменных окружения.\nУбедитесь, что служба kubelet запущена и нормально функционирует на узле. Если нет, то попробуйте перезапустить службу kubelet и посмотрите, решит ли это проблему.\nУра, 11! \nkubeadm join 10.0.16.34:6443 --token nvehe7.0h715ldeandytkms --discovery-token-ca-cert-hash sha256:f7f010085fb1854e96d0be34e948d26433783ce61271b7e59e1f3d815e971dc5\n\nCommand 'kubeadm' not found, but can be installed with:\nСообщение об ошибке указывает на то, что команда 'kubeadm' не найдена в системе. Это может произойти, если компоненты кластера Kubernetes не установлены или если переменная окружения PATH установлена неправильно.\nЧтобы установить компоненты кластера Kubernetes на Ubuntu 20.04, вы можете:\nДобавьте репозиторий Kubernetes apt:\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - sudo apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\nОбновите индекс пакета apt:\nsudo apt-get update\nУстановите компоненты Kubernetes:\nsudo apt-get install -y kubelet kubeadm kubectl\nУстановите переменную окружения PATH, чтобы включить бинарные файлы Kubernetes:\necho 'export PATH=$PATH:/usr/bin' >> ~/.bashrc source ~/.bashrc\nПосле этих пунктов у вас должно получиться использовать команду 'kubeadm' для присоединения к кластеру Kubernetes.\nОт редакции\nНачать работать с Kubernetes вы можете на курсах: \nKubernetes База\n и \nKubernetes для разработчиков\n.\nKubernetes База\n стартует в формате потока 11 мая. Вы погрузитесь в глубины K8s вместе с другими студентами, а на вопросы по инструменту вам будут отвечать спикеры курса.\nУзнать больше о курсе \nKubernetes для разработчиков\n и записаться на поток \nKubernetes База\n можно на нашем сайте.\n \n ",
    "tags": [
        "kubernetes",
        "k8s",
        "it-инфраструктура",
        "образование",
        "devops",
        "ошибки программистов",
        "kubernetesdocker",
        "kubernetes operator"
    ]
}
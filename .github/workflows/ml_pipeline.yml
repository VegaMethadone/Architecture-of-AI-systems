name: Model train workflow
run-name: Model train workflow
on: [push]

env:
  ARTICLES_PATH: "./train_data/parsed_articles"
  RAW_ARTICLES_PATH: "./train_data/raw_parsed_articles"

jobs:
  parse-articles-job:
    name: Parsing
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: pip

      - name: Install PIP requirements
        run: pip install -r requirements.txt

      - name: Cache train data
        uses: actions/cache@v3
        with:
          key: train-data-cache
          path: |
            ${{ env.ARTICLES_PATH }}
            ./rest_service/service_model.pt

      - name: Parse habre articles
        if: ${{ true }} # TODO: add github variable
        run: python -m scrapy_spiders.habrparser

  normalize-parsed-artilces:
    name: Normalizing
    runs-on: ubuntu-latest
    needs: parse-articles-job
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: pip
      - name: Install PIP requirements
        run: pip install -r requirements.txt

      # - name: Upload model
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: model
      #     path: ./rest_service/service_model.pt
      #     retention-days: 14
      - name: Cache train data
        uses: actions/cache@v3
        with:
          key: train-data-cache
          path: |
            ${{ env.ARTICLES_PATH }}
            ./rest_service/service_model.pt

      - name: Normalize habre articles
        if: ${{ true }} # TODO: add github variable
        run: python -m ml_utils.text_normalizer

      - name: Upload articles
        uses: actions/upload-artifact@v3
        with:
          name: articles
          path: ${{ env.ARTICLES_PATH }}
          retention-days: 14

  run-train-model:
    name: Training
    runs-on: ubuntu-latest
    needs: normalize-parsed-artilces
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: pip
      - name: Install PIP requirements
        run: pip install -r requirements.txt

      - name: Download articles
        uses: actions/download-artifact@v3
        with:
          name: articles

      - name: Upload model
        uses: actions/upload-artifact@v3
        with:
          name: model
          path: ./rest_service/service_model.pt
          retention-days: 14

      - name: Cache train data
        uses: actions/cache@v3
        with:
          key: train-data-cache
          path: |
            ${{ env.ARTICLES_PATH }}
            ./rest_service/service_model.pt

      # TODO 
      # - name: Train model
      #   run: python -m ml_utils.trainer bard
  push-image-to-docker-hub:
    name: Deployment
    runs-on: ubuntu-latest
    needs: run-train-model
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Cache train data
        uses: actions/cache@v3
        with:
          key: train-data-cache
          path: ./rest_service/service_model.pt

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/architecture_of_ai_systems_lab:latest
